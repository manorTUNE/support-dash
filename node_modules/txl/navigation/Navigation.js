'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultTemplate = exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Base = require('../base/Base');

var _DefaultTemplate = require('./DefaultTemplate');

var _DefaultTemplate2 = _interopRequireDefault(_DefaultTemplate);

var _NavigationItems = require('./NavigationItems');

var _NavigationItems2 = _interopRequireDefault(_NavigationItems);

var _NavigationBase = require('./NavigationBase');

var _NavigationBase2 = _interopRequireDefault(_NavigationBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var checkArray = function checkArray(input) {
  return Array.isArray(input) ? input : [input];
};

var TxlNavigation = (0, _radium2.default)(_class = function (_React$Component) {
  (0, _inherits3.default)(TxlNavigation, _React$Component);

  function TxlNavigation(props, context) {
    (0, _classCallCheck3.default)(this, TxlNavigation);

    var _this = (0, _possibleConstructorReturn3.default)(this, (TxlNavigation.__proto__ || (0, _getPrototypeOf2.default)(TxlNavigation)).call(this, props, context));

    _this._onUpdate = function () {
      return _this.___onUpdate__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    var items = props.items,
        defaultTemplate = props.template;

    var activeNames = checkArray(props.activeNames);
    var expandedNames = checkArray(props.expandedNames);

    _this.state = {
      groups: new _NavigationItems2.default({ activeNames: activeNames, defaultTemplate: defaultTemplate, expandedNames: expandedNames, items: items })
    };
    return _this;
  }

  (0, _createClass3.default)(TxlNavigation, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var activeNames = checkArray(nextProps.activeNames);
      var expandedNames = checkArray(nextProps.expandedNames);

      this.setState({
        groups: this.state.groups.updateActive(activeNames).updateExpanded(expandedNames)
      });
    }
  }, {
    key: '___onUpdate__REACT_HOT_LOADER__',
    value: function ___onUpdate__REACT_HOT_LOADER__() {
      return this.___onUpdate__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___onUpdate__REACT_HOT_LOADER__',
    value: function ___onUpdate__REACT_HOT_LOADER__() {
      return this.___onUpdate__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___onUpdate__REACT_HOT_LOADER__',
    value: function ___onUpdate__REACT_HOT_LOADER__(predicate, update) {
      this.setState(function (prevState) {
        return { groups: prevState.groups.updateGroup(predicate, update) };
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_NavigationBase2.default, { onUpdate: this._onUpdate, items: this.state.groups });
    }
  }]);
  return TxlNavigation;
}(_react2.default.Component)) || _class;

TxlNavigation.propTypes = {
  activeNames: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
  expandedNames: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
  items: _react.PropTypes.arrayOf(_react.PropTypes.shape({
    display: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.instanceOf(_react2.default.Component)]),
    expanded: _react.PropTypes.bool,
    icon: _Base.ReactClassPropCheck,
    items: _react.PropTypes.arrayOf(_react.PropTypes.shape({
      display: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.instanceOf(_react2.default.Component)]),
      name: _react.PropTypes.string.isRequired,
      template: _react2.default.PropTypes.oneOfType([_Base.ReactClassPropCheck, _react.PropTypes.func])
    })),
    name: _react.PropTypes.string.isRequired,
    template: _react2.default.PropTypes.oneOfType([_Base.ReactClassPropCheck, _react.PropTypes.func])
  })),
  template: _react2.default.PropTypes.oneOfType([_Base.ReactClassPropCheck, _react.PropTypes.func])
};

TxlNavigation.defaultProps = {
  activeNames: [],
  expandedNames: [],
  template: _DefaultTemplate2.default
};

exports.default = TxlNavigation;
exports.DefaultTemplate = _DefaultTemplate2.default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(checkArray, 'checkArray', 'src/navigation/Navigation.jsx');

  __REACT_HOT_LOADER__.register(TxlNavigation, 'TxlNavigation', 'src/navigation/Navigation.jsx');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9uYXZpZ2F0aW9uL05hdmlnYXRpb24uanN4Il0sIm5hbWVzIjpbImNoZWNrQXJyYXkiLCJBcnJheSIsImlzQXJyYXkiLCJpbnB1dCIsIlR4bE5hdmlnYXRpb24iLCJwcm9wcyIsImNvbnRleHQiLCJfb25VcGRhdGUiLCJpdGVtcyIsImRlZmF1bHRUZW1wbGF0ZSIsInRlbXBsYXRlIiwiYWN0aXZlTmFtZXMiLCJleHBhbmRlZE5hbWVzIiwic3RhdGUiLCJncm91cHMiLCJuZXh0UHJvcHMiLCJzZXRTdGF0ZSIsInVwZGF0ZUFjdGl2ZSIsInVwZGF0ZUV4cGFuZGVkIiwicHJlZGljYXRlIiwidXBkYXRlIiwicHJldlN0YXRlIiwidXBkYXRlR3JvdXAiLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJhcnJheU9mIiwic2hhcGUiLCJkaXNwbGF5Iiwibm9kZSIsImluc3RhbmNlT2YiLCJleHBhbmRlZCIsImJvb2wiLCJpY29uIiwibmFtZSIsImlzUmVxdWlyZWQiLCJQcm9wVHlwZXMiLCJmdW5jIiwiZGVmYXVsdFByb3BzIiwiZGVmYXVsdCIsIkRlZmF1bHRUZW1wbGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUE7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxhQUFhLFNBQWJBLFVBQWE7QUFBQSxTQUFVQyxNQUFNQyxPQUFOLENBQWNDLEtBQWQsSUFBdUJBLEtBQXZCLEdBQStCLENBQUNBLEtBQUQsQ0FBekM7QUFBQSxDQUFuQjs7SUFHTUMsYTs7O0FBQ0oseUJBQVlDLEtBQVosRUFBbUJDLE9BQW5CLEVBQTRCO0FBQUE7O0FBQUEsb0pBQ3BCRCxLQURvQixFQUNiQyxPQURhOztBQUFBLFVBc0I1QkMsU0F0QjRCO0FBQUE7QUFBQTs7QUFBQSxRQUVsQkMsS0FGa0IsR0FFbUJILEtBRm5CLENBRWxCRyxLQUZrQjtB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aWdhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmFkaXVtIGZyb20gJ3JhZGl1bSc7XG5cbmltcG9ydCB7IFJlYWN0Q2xhc3NQcm9wQ2hlY2sgfSBmcm9tICcuLi9iYXNlL0Jhc2UnO1xuaW1wb3J0IERlZmF1bHRUZW1wbGF0ZSBmcm9tICcuL0RlZmF1bHRUZW1wbGF0ZSc7XG5pbXBvcnQgTmF2aWdhdGlvbkl0ZW1zIGZyb20gJy4vTmF2aWdhdGlvbkl0ZW1zJztcbmltcG9ydCBOYXZpZ2F0aW9uQmFzZSBmcm9tICcuL05hdmlnYXRpb25CYXNlJztcblxuY29uc3QgY2hlY2tBcnJheSA9IGlucHV0ID0+IChBcnJheS5pc0FycmF5KGlucHV0KSA/IGlucHV0IDogW2lucHV0XSk7XG5cbkBSYWRpdW1cbmNsYXNzIFR4bE5hdmlnYXRpb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcywgY29udGV4dCkge1xuICAgIHN1cGVyKHByb3BzLCBjb250ZXh0KTtcbiAgICBjb25zdCB7IGl0ZW1zLCB0ZW1wbGF0ZTogZGVmYXVsdFRlbXBsYXRlIH0gPSBwcm9wcztcbiAgICBjb25zdCBhY3RpdmVOYW1lcyA9IGNoZWNrQXJyYXkocHJvcHMuYWN0aXZlTmFtZXMpO1xuICAgIGNvbnN0IGV4cGFuZGVkTmFtZXMgPSBjaGVja0FycmF5KHByb3BzLmV4cGFuZGVkTmFtZXMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGdyb3VwczogbmV3IE5hdmlnYXRpb25JdGVtcyh7IGFjdGl2ZU5hbWVzLCBkZWZhdWx0VGVtcGxhdGUsIGV4cGFuZGVkTmFtZXMsIGl0ZW1zIH0pLFxuICAgIH07XG4gIH1cblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgIGNvbnN0IGFjdGl2ZU5hbWVzID0gY2hlY2tBcnJheShuZXh0UHJvcHMuYWN0aXZlTmFtZXMpO1xuICAgIGNvbnN0IGV4cGFuZGVkTmFtZXMgPSBjaGVja0FycmF5KG5leHRQcm9wcy5leHBhbmRlZE5hbWVzKTtcblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZ3JvdXBzOiB0aGlzLnN0YXRlLmdyb3Vwc1xuICAgICAgICAudXBkYXRlQWN0aXZlKGFjdGl2ZU5hbWVzKVxuICAgICAgICAudXBkYXRlRXhwYW5kZWQoZXhwYW5kZWROYW1lcyksXG4gICAgfSk7XG4gIH1cblxuICBfb25VcGRhdGUgPSAocHJlZGljYXRlLCB1cGRhdGUpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHByZXZTdGF0ZSA9PiAoeyBncm91cHM6IHByZXZTdGF0ZS5ncm91cHMudXBkYXRlR3JvdXAocHJlZGljYXRlLCB1cGRhdGUpIH0pKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxOYXZpZ2F0aW9uQmFzZSBvblVwZGF0ZT17dGhpcy5fb25VcGRhdGV9IGl0ZW1zPXt0aGlzLnN0YXRlLmdyb3Vwc30gLz5cbiAgICApO1xuICB9XG59XG5cblR4bE5hdmlnYXRpb24ucHJvcFR5cGVzID0ge1xuICBhY3RpdmVOYW1lczogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLnN0cmluZyxcbiAgICBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKSxcbiAgXSksXG4gIGV4cGFuZGVkTmFtZXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyksXG4gIF0pLFxuICBpdGVtczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBkaXNwbGF5OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubm9kZSwgUHJvcFR5cGVzLmluc3RhbmNlT2YoUmVhY3QuQ29tcG9uZW50KV0pLFxuICAgIGV4cGFuZGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpY29uOiBSZWFjdENsYXNzUHJvcENoZWNrLFxuICAgIGl0ZW1zOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgZGlzcGxheTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm5vZGUsIFByb3BUeXBlcy5pbnN0YW5jZU9mKFJlYWN0LkNvbXBvbmVudCldKSxcbiAgICAgIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAgIHRlbXBsYXRlOiBSZWFjdC5Qcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgICAgUmVhY3RDbGFzc1Byb3BDaGVjayxcbiAgICAgICAgUHJvcFR5cGVzLmZ1bmMsIC8qIElmIGZ1bmN0aW9uLCBzaG91bGQgcmV0dXJuIGEgUmVhY3QgQ2xhc3MgKi9cbiAgICAgIF0pLFxuICAgIH0pKSxcbiAgICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgdGVtcGxhdGU6IFJlYWN0LlByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUmVhY3RDbGFzc1Byb3BDaGVjayxcbiAgICAgIFByb3BUeXBlcy5mdW5jLCAvKiBJZiBmdW5jdGlvbiwgc2hvdWxkIHJldHVybiBhIFJlYWN0IENsYXNzICovXG4gICAgXSksXG4gIH0pKSxcbiAgdGVtcGxhdGU6IFJlYWN0LlByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFJlYWN0Q2xhc3NQcm9wQ2hlY2ssXG4gICAgUHJvcFR5cGVzLmZ1bmMsIC8qIElmIGZ1bmN0aW9uLCBzaG91bGQgcmV0dXJuIGEgUmVhY3QgQ2xhc3MgKi9cbiAgXSksXG59O1xuXG5UeGxOYXZpZ2F0aW9uLmRlZmF1bHRQcm9wcyA9IHtcbiAgYWN0aXZlTmFtZXM6IFtdLFxuICBleHBhbmRlZE5hbWVzOiBbXSxcbiAgdGVtcGxhdGU6IERlZmF1bHRUZW1wbGF0ZSxcbn07XG5cbmV4cG9ydCB7IFR4bE5hdmlnYXRpb24gYXMgZGVmYXVsdCwgRGVmYXVsdFRlbXBsYXRlIH07XG4iXX0=