'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _ScrollingTableCell = require('./ScrollingTableCell');

var _ScrollingTableCell2 = _interopRequireDefault(_ScrollingTableCell);

var _ScrollingTable = require('./ScrollingTable.style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var babelPluginFlowReactPropTypes_proptype_Header = require('./').babelPluginFlowReactPropTypes_proptype_Header || require('react').PropTypes.any;

var babelPluginFlowReactPropTypes_proptype_Headers = require('./').babelPluginFlowReactPropTypes_proptype_Headers || require('react').PropTypes.any;

/**
 * ScrollingTableRow represents one row item in the table.
 */
var ScrollingTableRow = function (_Component) {
  (0, _inherits3.default)(ScrollingTableRow, _Component);

  function ScrollingTableRow(props, context) {
    (0, _classCallCheck3.default)(this, ScrollingTableRow);

    var _this = (0, _possibleConstructorReturn3.default)(this, (ScrollingTableRow.__proto__ || (0, _getPrototypeOf2.default)(ScrollingTableRow)).call(this, props, context));

    _this._onMouseEnter = function () {
      return _this.___onMouseEnter__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._onMouseLeave = function () {
      return _this.___onMouseLeave__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    if (props.height != null) {
      (0, _invariant2.default)(props.height >= 0, 'Height must be positive');
    }

    _this.state = {
      hovering: false
    };

    (0, _invariant2.default)(props.rowNumber >= 0, 'The starting row number must be positive');
    return _this;
  }

  (0, _createClass3.default)(ScrollingTableRow, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      if (this.props.data !== nextProps.data) {
        return true;
      }

      if (this.props.height !== nextProps.height) {
        return true;
      }

      if (this.props.rowNumber !== nextProps.rowNumber) {
        return true;
      }

      if (this.state.hovering !== nextState.hovering) {
        return true;
      }

      return !this.props.headers.equals(nextProps.headers);
    }
  }, {
    key: '___onMouseEnter__REACT_HOT_LOADER__',
    value: function ___onMouseEnter__REACT_HOT_LOADER__() {
      return this.___onMouseEnter__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___onMouseEnter__REACT_HOT_LOADER__',
    value: function ___onMouseEnter__REACT_HOT_LOADER__() {
      this.setState({ hovering: true });
    }
  }, {
    key: '___onMouseLeave__REACT_HOT_LOADER__',
    value: function ___onMouseLeave__REACT_HOT_LOADER__() {
      return this.___onMouseLeave__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___onMouseLeave__REACT_HOT_LOADER__',
    value: function ___onMouseLeave__REACT_HOT_LOADER__() {
      this.setState({ hovering: false });
    }
  }, {
    key: '_renderCells',
    value: function _renderCells() {
      var _props = this.props,
          data = _props.data,
          headers = _props.headers;


      return headers.sort(function (a, b) {
        return a.order - b.order;
      }).toArray().map(function (header) {
        return _react2.default.createElement(_ScrollingTableCell2.default, {
          key: header.order,
          value: data.get(header.key),
          data: data,
          header: header
        });
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          rowNumber = _props2.rowNumber,
          data = _props2.data,
          height = _props2.height;


      var style = (0, _extends3.default)({
        verticalAlign: 'top'
      }, data.size === 0 ? _ScrollingTable.ROW_LOADING_STYLES : {}, rowNumber % 2 === 1 ? _ScrollingTable.STRIPED_ROW_STYLES : {}, this.state.hovering ? { background: 'rgb(245, 246, 247)' } : {});

      if (data.size === 0 && height != null) {
        style.height = height;
        return _react2.default.createElement(
          'tr',
          { style: style },
          _react2.default.createElement('td', { colSpan: '100%', style: _ScrollingTable.ROW_LOADING_BACKGROUND_STYLES })
        );
      }

      return _react2.default.createElement(
        'tr',
        {
          onMouseEnter: this._onMouseEnter,
          onMouseLeave: this._onMouseLeave,
          style: style
        },
        this._renderCells()
      );
    }
  }]);
  return ScrollingTableRow;
}(_react.Component);

ScrollingTableRow.propTypes = {
  data: require('react').PropTypes.any.isRequired,
  headers: babelPluginFlowReactPropTypes_proptype_Headers,
  height: require('react').PropTypes.number,
  rowNumber: require('react').PropTypes.number.isRequired
};
exports.default = ScrollingTableRow;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ScrollingTableRow, 'ScrollingTableRow', 'src/scrolling-table/ScrollingTableRow.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JvbGxpbmctdGFibGUvU2Nyb2xsaW5nVGFibGVSb3cuanN4Il0sIm5hbWVzIjpbIlNjcm9sbGluZ1RhYmxlUm93IiwicHJvcHMiLCJjb250ZXh0IiwiX29uTW91c2VFbnRlciIsIl9vbk1vdXNlTGVhdmUiLCJoZWlnaHQiLCJzdGF0ZSIsImhvdmVyaW5nIiwicm93TnVtYmVyIiwibmV4dFByb3BzIiwibmV4dFN0YXRlIiwiZGF0YSIsImhlYWRlcnMiLCJlcXVhbHMiLCJzZXRTdGF0ZSIsInNvcnQiLCJhIiwiYiIsIm9yZGVyIiwidG9BcnJheSIsIm1hcCIsImhlYWRlciIsImdldCIsImtleSIsInN0eWxlIiwidmVydGljYWxBbGlnbiIsInNpemUiLCJiYWNrZ3JvdW5kIiwiX3JlbmRlckNlbGxzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7Ozs7Ozs7O0FBa0JBOzs7SUFHcUJBLGlCOzs7QUFDbkIsNkJBQVlDLEtBQVosRUFBMEJDLE9BQTFCLEVBQTJDO0FBQUE7O0FBQUEsNEpBQ25DRCxLQURtQyxFQUM1QkMsT0FENEI7O0FBQUEsVUFxQzNDQyxhQXJDMkM7QUFBQTtBQUFBOztBQUFBLFVBeUMzQ0MsYUF6QzJDO0FBQUE7QUFBQTs7QUFHekMsUUFBSUgsTUFBTUksTUFBTixJQUFnQixJQUFwQixFQUEwQjtBQUN4QiwrQkFBVUosTUFBTUksTUFBTixJQUFnQixDQUExQixFQUE2Qix5QkFBN0I7QUFDRDs7QUFFRCxVQUFLQyxLQUFMLEdBQWE7QUFDWEMsZ0JBQVU7QUFEQyxLQUFiOztBQUlBLDZCQUFVTixNQUFNTyxTQUFOLElBQW1CLENBQTdCLEVBQWdDLDBDQUFoQztBQVh5QztBQVkxQzs7OzswQ0FLcUJDLFMsRUFBa0JDLFMsRUFBMkI7QUFDakUsVUFBSSxLQUFLVCxLQUFMLENBQVdVLElBQVgsS0FBb0JGLFVBQVVFLElBQWxDLEVBQXdDO0FBQ3RDLGVBQU8sSUFBUDtBQUNEOztBQUVELFVBQUksS0FBS1YsS0FBTCxDQUFXSSxNQUFYLEtBQXNCSSxVQUFVSixNQUFwQyxFQUE0QztBQUMxQyxlQUFPLElBQVA7QUFDRDs7QUFFRCxVQUFJLEtBQUtKLEtBQUwsQ0FBV08sU0FBWCxLQUF5QkMsVUFBVUQsU0FBdkMsRUFBa0Q7QUFDaEQsZUFBTyxJQUFQO0FBQ0Q7O0FBRUQsVUFBSSxLQUFLRixLQUFMLENBQVdDLFFBQVgsS0FBd0JHLFVBQVVILFFBQXRDLEVBQWdEO0FBQzlDLGVBQU8sSUFBUDtBQUNEOztBQUVELGFBQU8sQ0FBQyxLQUFLTixLQUFMLENBQVdXLE9BQVgsQ0FBbUJDLE1BQW5CLENBQTBCSixVQUFVRyxPQUFwQyxDQUFSO0FBQ0Q7Ozs7Ozs7OzBEQUVxQjtBQUNwQixXQUFLRSxRQUFMLENBQWMsRUFBRVAsVUFBVSxJQUFaLEVBQWQ7QUFDRDs7Ozs7Ozs7MERBRXFCO0FBQ3BCLFdBQUtPLFFBQUwsQ0FBYyxFQUFFUCxVQUFVLEtBQVosRUFBZDtBQUNEOzs7bUNBRXVDO0FBQUEsbUJBQ1osS0FBS04sS0FETztBQUFBLFVBQzlCVSxJQUQ4QixVQUM5QkEsSUFEOEI7QUFBQSxVQUN4QkMsT0FEd0IsVUFDeEJBLE9BRHdCOzs7QUFHdEMsYUFBT0EsUUFDSkcsSUFESSxDQUNDLFVBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLGVBQVVELEVBQUVFLEtBQUYsR0FBVUQsRUFBRUMsS0FBdEI7QUFBQSxPQURELEVBRUpDLE9BRkksR0FHSkMsR0FISSxDQUdBLFVBQUNDLE1BQUQ7QUFBQSxlQUNIO0FBQ0UsZUFBS0EsT0FBT0gsS0FEZDtBQUVFLGlCQUFPUCxLQUFLVyxHQUFMLENBQVNELE9BQU9FLEdBQWhCLENBRlQ7QUFHRSxnQkFBTVosSUFIUjtBQUlFLGtCQUFRVTtBQUpWLFVBREc7QUFBQSxPQUhBLENBQVA7QUFXRDs7OzZCQUUwQjtBQUFBLG9CQUNXLEtBQUtwQixLQURoQjtBQUFBLFVBQ2pCTyxTQURpQixXQUNqQkEsU0FEaUI7QUFBQSxVQUNORyxJQURNLFdBQ05BLElBRE07QUFBQSxVQUNBTixNQURBLFdBQ0FBLE1BREE7OztBQUd6QixVQUFNbUI7QUFDSkMsdUJBQWU7QUFEWCxTQUVBZCxLQUFLZSxJQUFMLEtBQWMsQ0FBZCx3Q0FBdUMsRUFGdkMsRUFHQWxCLFlBQVksQ0FBWixLQUFrQixDQUFsQix3Q0FBMkMsRUFIM0MsRUFJQSxLQUFLRixLQUFMLENBQVdDLFFBQVgsR0FBc0IsRUFBRW9CLFlBQVksb0JBQWQsRUFBdEIsR0FBNkQsRUFKN0QsQ0FBTjs7QUFPQSxVQUFJaEIsS0FBS2UsSUFBTCxLQUFjLENBQWQsSUFBbUJyQixVQUFVLElBQWpDLEVBQXVDO0FBQ3JDbUIsY0FBTW5CLE1BQU4sR0FBZUEsTUFBZjtBQUNBLGVBQ0U7QUFBQTtBQUFBLFlBQUksT0FBT21CLEtBQVg7QUFDRSxnREFBSSxTQUFRLE1BQVosRUFBbUIsb0RBQW5CO0FBREYsU0FERjtBQUtEOztBQUVELGFBQ0U7QUFBQTtBQUFBO0FBQ0Usd0JBQWMsS0FBS3JCLGFBRHJCO0FBRUUsd0JBQWMsS0FBS0MsYUFGckI7QUFHRSxpQkFBT29CO0FBSFQ7QUFLRyxhQUFLSSxZQUFMO0FBTEgsT0FERjtBQVNEOzs7Ozs7Ozs7OztrQkExRmtCNUIsaUI7Ozs7Ozs7O2dDQUFBQSxpQiIsImZpbGUiOiJTY3JvbGxpbmdUYWJsZVJvdy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5cbmltcG9ydCBTY3JvbGxpbmdUYWJsZUNlbGwgZnJvbSAnLi9TY3JvbGxpbmdUYWJsZUNlbGwnO1xuaW1wb3J0IHtcbiAgUk9XX0xPQURJTkdfU1RZTEVTLFxuICBST1dfTE9BRElOR19CQUNLR1JPVU5EX1NUWUxFUyxcbiAgU1RSSVBFRF9ST1dfU1RZTEVTLFxufSBmcm9tICcuL1Njcm9sbGluZ1RhYmxlLnN0eWxlJztcbmltcG9ydCB0eXBlIHsgSGVhZGVycywgSGVhZGVyIH0gZnJvbSAnLi8nO1xuXG50eXBlIFByb3BzID0ge1xuICBkYXRhOiBNYXA8c3RyaW5nLCBhbnk+LFxuICBoZWFkZXJzOiBIZWFkZXJzLFxuICBoZWlnaHQ/OiBudW1iZXIsXG4gIHJvd051bWJlcjogbnVtYmVyLFxufTtcblxudHlwZSBTdGF0ZSA9IHtcbiAgaG92ZXJpbmc6IGJvb2xlYW4sXG59O1xuXG4vKipcbiAqIFNjcm9sbGluZ1RhYmxlUm93IHJlcHJlc2VudHMgb25lIHJvdyBpdGVtIGluIHRoZSB0YWJsZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2Nyb2xsaW5nVGFibGVSb3cgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wczogUHJvcHMsIGNvbnRleHQ6IE9iamVjdCkge1xuICAgIHN1cGVyKHByb3BzLCBjb250ZXh0KTtcblxuICAgIGlmIChwcm9wcy5oZWlnaHQgIT0gbnVsbCkge1xuICAgICAgaW52YXJpYW50KHByb3BzLmhlaWdodCA+PSAwLCAnSGVpZ2h0IG11c3QgYmUgcG9zaXRpdmUnKTtcbiAgICB9XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgaG92ZXJpbmc6IGZhbHNlLFxuICAgIH07XG5cbiAgICBpbnZhcmlhbnQocHJvcHMucm93TnVtYmVyID49IDAsICdUaGUgc3RhcnRpbmcgcm93IG51bWJlciBtdXN0IGJlIHBvc2l0aXZlJyk7XG4gIH1cblxuICBwcm9wczogUHJvcHM7XG4gIHN0YXRlOiBTdGF0ZTtcblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzOiBQcm9wcywgbmV4dFN0YXRlOiBTdGF0ZSk6IGJvb2xlYW4ge1xuICAgIGlmICh0aGlzLnByb3BzLmRhdGEgIT09IG5leHRQcm9wcy5kYXRhKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy5oZWlnaHQgIT09IG5leHRQcm9wcy5oZWlnaHQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLnJvd051bWJlciAhPT0gbmV4dFByb3BzLnJvd051bWJlcikge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc3RhdGUuaG92ZXJpbmcgIT09IG5leHRTdGF0ZS5ob3ZlcmluZykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuICF0aGlzLnByb3BzLmhlYWRlcnMuZXF1YWxzKG5leHRQcm9wcy5oZWFkZXJzKTtcbiAgfVxuXG4gIF9vbk1vdXNlRW50ZXIgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGhvdmVyaW5nOiB0cnVlIH0pO1xuICB9O1xuXG4gIF9vbk1vdXNlTGVhdmUgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGhvdmVyaW5nOiBmYWxzZSB9KTtcbiAgfTtcblxuICBfcmVuZGVyQ2VsbHMoKTogQXJyYXk8UmVhY3QuRWxlbWVudDwqPj4ge1xuICAgIGNvbnN0IHsgZGF0YSwgaGVhZGVycyB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBoZWFkZXJzXG4gICAgICAuc29ydCgoYSwgYikgPT4gYS5vcmRlciAtIGIub3JkZXIpXG4gICAgICAudG9BcnJheSgpXG4gICAgICAubWFwKChoZWFkZXI6IEhlYWRlcikgPT4gKFxuICAgICAgICA8U2Nyb2xsaW5nVGFibGVDZWxsXG4gICAgICAgICAga2V5PXtoZWFkZXIub3JkZXJ9XG4gICAgICAgICAgdmFsdWU9e2RhdGEuZ2V0KGhlYWRlci5rZXkpfVxuICAgICAgICAgIGRhdGE9e2RhdGF9XG4gICAgICAgICAgaGVhZGVyPXtoZWFkZXJ9XG4gICAgICAgIC8+XG4gICAgICApKTtcbiAgfVxuXG4gIHJlbmRlcigpOiBSZWFjdC5FbGVtZW50PCo+IHtcbiAgICBjb25zdCB7IHJvd051bWJlciwgZGF0YSwgaGVpZ2h0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3Qgc3R5bGUgPSB7XG4gICAgICB2ZXJ0aWNhbEFsaWduOiAndG9wJyxcbiAgICAgIC4uLihkYXRhLnNpemUgPT09IDAgPyBST1dfTE9BRElOR19TVFlMRVMgOiB7fSksXG4gICAgICAuLi4ocm93TnVtYmVyICUgMiA9PT0gMSA/IFNUUklQRURfUk9XX1NUWUxFUyA6IHt9KSxcbiAgICAgIC4uLih0aGlzLnN0YXRlLmhvdmVyaW5nID8geyBiYWNrZ3JvdW5kOiAncmdiKDI0NSwgMjQ2LCAyNDcpJyB9IDoge30pLFxuICAgIH07XG5cbiAgICBpZiAoZGF0YS5zaXplID09PSAwICYmIGhlaWdodCAhPSBudWxsKSB7XG4gICAgICBzdHlsZS5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8dHIgc3R5bGU9e3N0eWxlfT5cbiAgICAgICAgICA8dGQgY29sU3Bhbj1cIjEwMCVcIiBzdHlsZT17Uk9XX0xPQURJTkdfQkFDS0dST1VORF9TVFlMRVN9IC8+XG4gICAgICAgIDwvdHI+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8dHJcbiAgICAgICAgb25Nb3VzZUVudGVyPXt0aGlzLl9vbk1vdXNlRW50ZXJ9XG4gICAgICAgIG9uTW91c2VMZWF2ZT17dGhpcy5fb25Nb3VzZUxlYXZlfVxuICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICA+XG4gICAgICAgIHt0aGlzLl9yZW5kZXJDZWxscygpfVxuICAgICAgPC90cj5cbiAgICApO1xuICB9XG59XG4iXX0=