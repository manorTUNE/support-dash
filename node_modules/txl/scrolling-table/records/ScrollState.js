'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _immutable = require('immutable');

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ScrollState represents the current scrolling state
 * with offset being the last offset reported
 * and direction based on the change from that offset.
 */

var babelPluginFlowReactPropTypes_proptype_ScrollDirections = require('../constants').babelPluginFlowReactPropTypes_proptype_ScrollDirections || require('react').PropTypes.any;

var ScrollState = function (_Record) {
  (0, _inherits3.default)(ScrollState, _Record);

  function ScrollState() {
    (0, _classCallCheck3.default)(this, ScrollState);
    return (0, _possibleConstructorReturn3.default)(this, (ScrollState.__proto__ || (0, _getPrototypeOf2.default)(ScrollState)).apply(this, arguments));
  }

  (0, _createClass3.default)(ScrollState, [{
    key: 'setOffset',

    /**
     * Scrolling momentum, the direction we think the user is scrolling
     */
    value: function setOffset(offset) {
      if (this.offset < offset) {
        return this.merge({
          direction: _constants.SCROLL_DIRECTIONS.DOWN,
          offset: offset
        });
      }

      if (this.offset > offset) {
        return this.merge({
          direction: _constants.SCROLL_DIRECTIONS.UP,
          offset: offset
        });
      }

      return this;
    }
    /**
     * Offset in rows from the top. [0, maxrows)
     */

  }]);
  return ScrollState;
}((0, _immutable.Record)({
  direction: 'down',
  offset: 0
}));

exports.default = ScrollState;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ScrollState, 'ScrollState', 'src/scrolling-table/records/ScrollState.js');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JvbGxpbmctdGFibGUvcmVjb3Jkcy9TY3JvbGxTdGF0ZS5qcyJdLCJuYW1lcyI6WyJTY3JvbGxTdGF0ZSIsIm9mZnNldCIsIm1lcmdlIiwiZGlyZWN0aW9uIiwiRE9XTiIsIlVQIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7QUFFQTs7OztBQUdBOzs7Ozs7OztJQU1xQkEsVzs7Ozs7Ozs7Ozs7QUFJbkI7Ozs4QkFTVUMsTSxFQUE2QjtBQUNyQyxVQUFJLEtBQUtBLE1BQUwsR0FBY0EsTUFBbEIsRUFBMEI7QUFDeEIsZUFBTyxLQUFLQyxLQUFMLENBQVc7QUFDaEJDLHFCQUFXLDZCQUFrQkMsSUFEYjtBQUVoQkg7QUFGZ0IsU0FBWCxDQUFQO0FBSUQ7O0FBRUQsVUFBSSxLQUFLQSxNQUFMLEdBQWNBLE1BQWxCLEVBQTBCO0FBQ3hCLGVBQU8sS0FBS0MsS0FBTCxDQUFXO0FBQ2hCQyxxQkFBVyw2QkFBa0JFLEVBRGI7QUFFaEJKO0FBRmdCLFNBQVgsQ0FBUDtBQUlEOztBQUVELGFBQU8sSUFBUDtBQUNEO0FBckJEOzs7Ozs7RUFSdUMsdUJBQU87QUFDOUNFLGFBQVcsTUFEbUM7QUFFOUNGLFVBQVE7QUFGc0MsQ0FBUCxDOztrQkFBcEJELFc7Ozs7Ozs7O2dDQUFBQSxXIiwiZmlsZSI6IlNjcm9sbFN0YXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcblxuaW1wb3J0IHsgUmVjb3JkIH0gZnJvbSAnaW1tdXRhYmxlJztcblxuaW1wb3J0IHsgU0NST0xMX0RJUkVDVElPTlMgfSBmcm9tICcuLi9jb25zdGFudHMnO1xuaW1wb3J0IHR5cGUgeyBTY3JvbGxEaXJlY3Rpb25zIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcblxuLyoqXG4gKiBTY3JvbGxTdGF0ZSByZXByZXNlbnRzIHRoZSBjdXJyZW50IHNjcm9sbGluZyBzdGF0ZVxuICogd2l0aCBvZmZzZXQgYmVpbmcgdGhlIGxhc3Qgb2Zmc2V0IHJlcG9ydGVkXG4gKiBhbmQgZGlyZWN0aW9uIGJhc2VkIG9uIHRoZSBjaGFuZ2UgZnJvbSB0aGF0IG9mZnNldC5cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTY3JvbGxTdGF0ZSBleHRlbmRzIFJlY29yZCh7XG4gIGRpcmVjdGlvbjogJ2Rvd24nLFxuICBvZmZzZXQ6IDAsXG59KSB7XG4gIC8qKlxuICAgKiBTY3JvbGxpbmcgbW9tZW50dW0sIHRoZSBkaXJlY3Rpb24gd2UgdGhpbmsgdGhlIHVzZXIgaXMgc2Nyb2xsaW5nXG4gICAqL1xuICBkaXJlY3Rpb246IFNjcm9sbERpcmVjdGlvbnM7XG4gIC8qKlxuICAgKiBPZmZzZXQgaW4gcm93cyBmcm9tIHRoZSB0b3AuIFswLCBtYXhyb3dzKVxuICAgKi9cbiAgb2Zmc2V0OiBudW1iZXI7XG5cbiAgc2V0T2Zmc2V0KG9mZnNldDogbnVtYmVyKTogU2Nyb2xsU3RhdGUge1xuICAgIGlmICh0aGlzLm9mZnNldCA8IG9mZnNldCkge1xuICAgICAgcmV0dXJuIHRoaXMubWVyZ2Uoe1xuICAgICAgICBkaXJlY3Rpb246IFNDUk9MTF9ESVJFQ1RJT05TLkRPV04sXG4gICAgICAgIG9mZnNldCxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICh0aGlzLm9mZnNldCA+IG9mZnNldCkge1xuICAgICAgcmV0dXJuIHRoaXMubWVyZ2Uoe1xuICAgICAgICBkaXJlY3Rpb246IFNDUk9MTF9ESVJFQ1RJT05TLlVQLFxuICAgICAgICBvZmZzZXQsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuIl19