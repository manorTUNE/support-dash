'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlIconQuestion = function (_React$Component) {
  (0, _inherits3.default)(TxlIconQuestion, _React$Component);

  function TxlIconQuestion() {
    (0, _classCallCheck3.default)(this, TxlIconQuestion);
    return (0, _possibleConstructorReturn3.default)(this, (TxlIconQuestion.__proto__ || (0, _getPrototypeOf2.default)(TxlIconQuestion)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlIconQuestion, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlIconQuestion',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ viewBox: '0 0 13 13' }, attrs),
          _react2.default.createElement('path', { d: 'M5.4 8.9c0-.7.1-1.2.2-1.5.2-.3.5-.7 1.1-1.2.4-.4.7-.7.9-1.1.2-.3.4-.7.4-1.1 0-.5-.1-.9-.4-1.1-.3-.3-.7-.4-1.1-.4-.4 0-.8.1-1 .3-.4.3-.5.6-.5 1.1H3.3c0-.9.3-1.6.9-2.1S5.5 1 6.5 1c1 0 1.8.3 2.4.8.6.5.9 1.3.9 2.2 0 .6-.2 1.2-.5 1.8-.4.5-.8 1-1.4 1.5-.3.2-.5.4-.6.6-.1.2-.1.6-.1 1H5.4zM7.2 12H5.4v-1.7h1.8V12z' })
        )
      );
    }
  }]);
  return TxlIconQuestion;
}(_react2.default.Component);

exports.default = TxlIconQuestion;


TxlIconQuestion.displayName = 'TxlIconQuestion';

TxlIconQuestion.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlIconQuestion.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/Question.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/Question.jsx');

  __REACT_HOT_LOADER__.register(TxlIconQuestion, 'TxlIconQuestion', 'src/icons/Question.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9RdWVzdGlvbi5qc3giXSwibmFtZXMiOlsiSUNPTl9CQVNFX1NUWUxFUyIsImRpc3BsYXkiLCJJQ09OX0JBU0VfU0laRSIsIlR4bEljb25RdWVzdGlvbiIsInByb3BzIiwiY29sb3IiLCJzY2FsZSIsImF0dHJzIiwiZmlsbCIsInN0eWxlIiwiaWNvblN0eWxlcyIsIkNvbXBvbmVudCIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwic3RyaW5nIiwibnVtYmVyIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQTs7OztBQUVBLElBQU1BLG1CQUFtQjtBQUN2QkMsV0FBUztBQURjLENBQXpCOztBQUlBLElBQU1DLGlCQUFpQixFQUF2Qjs7SUFFcUJDLGU7Ozs7Ozs7Ozs7NkJBQ1Y7QUFBQSxtQkFJSCxLQUFLQyxLQUpGO0FBQUEsVUFFTEMsS0FGSyxVQUVMQSxLQUZLO0FBQUEsVUFHTEMsS0FISyxVQUdMQSxLQUhLOzs7QUFNUCxVQUFNQyxRQUFRO0FBQ1pDLGNBQU1ILEtBRE07QUFFWkksZUFBTyxFQUFFUixTQUFTLE9BQVg7QUFGSyxPQUFkOztBQUtBLFVBQU1TLHdDQUNEVixnQkFEQyxFQUVELHFCQUFPRSxpQkFBaUJJLEtBQXhCLENBRkMsQ0FBTjs7QUFLQSxhQUNFO0FBQUE7QUFBQTtBQUNFLDRCQUFlLGlCQURqQjtBQUVFLGlCQUFPSTtBQUZUO0FBSUU7QUFBQTtBQUFBLG1DQUFLLFNBQVEsV0FBYixJQUE2QkgsS0FBN0I7QUFBb0Msa0RBQU0sR0FBRSxtVEFBUjtBQUFwQztBQUpGLE9BREY7QUFRRDs7O0VBekIwQyxnQkFBTUksUzs7a0JBQTlCUixlOzs7QUE0QnJCQSxnQkFBZ0JTLFdBQWhCLEdBQThCLGlCQUE5Qjs7QUFFQVQsZ0JBQWdCVSxTQUFoQixHQUE0QjtBQUMxQlIsU0FBTyxpQkFBVVMsTUFEUztBQUUxQlIsU0FBTyxpQkFBVVM7QUFGUyxDQUE1Qjs7QUFLQVosZ0JBQWdCYSxZQUFoQixHQUErQjtBQUM3QlgsU0FBTyxPQURzQjtBQUU3QkMsU0FBTztBQUZzQixDQUEvQjs7Ozs7Ozs7Z0NBekNNTixnQjs7Z0NBSUFFLGM7O2dDQUVlQyxlIiwiZmlsZSI6IlF1ZXN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgc3F1YXJlIH0gZnJvbSAnLi4vc3R5bGVzL2hlbHBlcnMnO1xuXG5jb25zdCBJQ09OX0JBU0VfU1RZTEVTID0ge1xuICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbn07XG5cbmNvbnN0IElDT05fQkFTRV9TSVpFID0gMTM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR4bEljb25RdWVzdGlvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjb2xvcixcbiAgICAgIHNjYWxlLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgYXR0cnMgPSB7XG4gICAgICBmaWxsOiBjb2xvcixcbiAgICAgIHN0eWxlOiB7IGRpc3BsYXk6ICdibG9jaycgfSxcbiAgICB9O1xuXG4gICAgY29uc3QgaWNvblN0eWxlcyA9IHtcbiAgICAgIC4uLklDT05fQkFTRV9TVFlMRVMsXG4gICAgICAuLi5zcXVhcmUoSUNPTl9CQVNFX1NJWkUgKiBzY2FsZSksXG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8aVxuICAgICAgICBkYXRhLWNvbXBvbmVudD1cIlR4bEljb25RdWVzdGlvblwiXG4gICAgICAgIHN0eWxlPXtpY29uU3R5bGVzfVxuICAgICAgPlxuICAgICAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgMTMgMTNcIiB7Li4uYXR0cnN9PjxwYXRoIGQ9XCJNNS40IDguOWMwLS43LjEtMS4yLjItMS41LjItLjMuNS0uNyAxLjEtMS4yLjQtLjQuNy0uNy45LTEuMS4yLS4zLjQtLjcuNC0xLjEgMC0uNS0uMS0uOS0uNC0xLjEtLjMtLjMtLjctLjQtMS4xLS40LS40IDAtLjguMS0xIC4zLS40LjMtLjUuNi0uNSAxLjFIMy4zYzAtLjkuMy0xLjYuOS0yLjFTNS41IDEgNi41IDFjMSAwIDEuOC4zIDIuNC44LjYuNS45IDEuMy45IDIuMiAwIC42LS4yIDEuMi0uNSAxLjgtLjQuNS0uOCAxLTEuNCAxLjUtLjMuMi0uNS40LS42LjYtLjEuMi0uMS42LS4xIDFINS40ek03LjIgMTJINS40di0xLjdoMS44VjEyelwiLz48L3N2Zz5cbiAgICAgIDwvaT5cbiAgICApO1xuICB9XG59XG5cblR4bEljb25RdWVzdGlvbi5kaXNwbGF5TmFtZSA9ICdUeGxJY29uUXVlc3Rpb24nO1xuXG5UeGxJY29uUXVlc3Rpb24ucHJvcFR5cGVzID0ge1xuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2NhbGU6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5UeGxJY29uUXVlc3Rpb24uZGVmYXVsdFByb3BzID0ge1xuICBjb2xvcjogJ2JsYWNrJyxcbiAgc2NhbGU6IDEsXG59O1xuIl19