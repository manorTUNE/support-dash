'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlIconTvOutline = function (_React$Component) {
  (0, _inherits3.default)(TxlIconTvOutline, _React$Component);

  function TxlIconTvOutline() {
    (0, _classCallCheck3.default)(this, TxlIconTvOutline);
    return (0, _possibleConstructorReturn3.default)(this, (TxlIconTvOutline.__proto__ || (0, _getPrototypeOf2.default)(TxlIconTvOutline)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlIconTvOutline, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlIconTvOutline',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ 'data-name': 'Main Layer', viewBox: '0 0 13 13' }, attrs),
          _react2.default.createElement(
            'g',
            null,
            _react2.default.createElement('path', { d: 'M0 12V5a1 1 0 0 1 1-1h11a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1zm10-7H1v7h9V5zm1.5 0a.5.5 0 0 0-.5.5.5.5 0 0 0 .5.5.5.5 0 0 0 .5-.5.5.5 0 0 0-.5-.5zm0 2a.5.5 0 0 0-.5.5.5.5 0 0 0 .5.5.5.5 0 0 0 .5-.5.5.5 0 0 0-.5-.5z' }),
            _react2.default.createElement('path', { d: 'M11 8.9h1V12h-1V8.9M12 4H1a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1zm-.5 2a.5.5 0 0 1-.5-.5.5.5 0 0 1 1 0 .5.5 0 0 1-.5.5zM1 12V5h9v7H1zm10.5-4a.5.5 0 0 1-.5-.5.5.5 0 0 1 1 0 .5.5 0 0 1-.5.5z' })
          ),
          _react2.default.createElement('path', { d: 'M4 4.3L1.7 2.4a.5.5 0 0 1 .6-.8L5 3.8l2.7-2.2a.5.5 0 0 1 .6.8L6 4.3H4z' })
        )
      );
    }
  }]);
  return TxlIconTvOutline;
}(_react2.default.Component);

exports.default = TxlIconTvOutline;


TxlIconTvOutline.displayName = 'TxlIconTvOutline';

TxlIconTvOutline.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlIconTvOutline.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/TvOutline.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/TvOutline.jsx');

  __REACT_HOT_LOADER__.register(TxlIconTvOutline, 'TxlIconTvOutline', 'src/icons/TvOutline.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9Udk91dGxpbmUuanN4Il0sIm5hbWVzIjpbIklDT05fQkFTRV9TVFlMRVMiLCJkaXNwbGF5IiwiSUNPTl9CQVNFX1NJWkUiLCJUeGxJY29uVHZPdXRsaW5lIiwicHJvcHMiLCJjb2xvciIsInNjYWxlIiwiYXR0cnMiLCJmaWxsIiwic3R5bGUiLCJpY29uU3R5bGVzIiwiQ29tcG9uZW50IiwiZGlzcGxheU5hbWUiLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJudW1iZXIiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUVBOzs7O0FBRUEsSUFBTUEsbUJBQW1CO0FBQ3ZCQyxXQUFTO0FBRGMsQ0FBekI7O0FBSUEsSUFBTUMsaUJBQWlCLEVBQXZCOztJQUVxQkMsZ0I7Ozs7Ozs7Ozs7NkJBQ1Y7QUFBQSxtQkFJSCxLQUFLQyxLQUpGO0FBQUEsVUFFTEMsS0FGSyxVQUVMQSxLQUZLO0FBQUEsVUFHTEMsS0FISyxVQUdMQSxLQUhLOzs7QUFNUCxVQUFNQyxRQUFRO0FBQ1pDLGNBQU1ILEtBRE07QUFFWkksZUFBTyxFQUFFUixTQUFTLE9BQVg7QUFGSyxPQUFkOztBQUtBLFVBQU1TLHdDQUNEVixnQkFEQyxFQUVELHFCQUFPRSxpQkFBaUJJLEtBQXhCLENBRkMsQ0FBTjs7QUFLQSxhQUNFO0FBQUE7QUFBQTtBQUNFLDRCQUFlLGtCQURqQjtBQUVFLGlCQUFPSTtBQUZUO0FBSUU7QUFBQTtBQUFBLG1DQUFLLGFBQVUsWUFBZixFQUE0QixTQUFRLFdBQXBDLElBQW9ESCxLQUFwRDtBQUEyRDtBQUFBO0FBQUE7QUFBRyxvREFBTSxHQUFFLGlPQUFSLEdBQUg7QUFBOE8sb0RBQU0sR0FBRSx1TkFBUjtBQUE5TyxXQUEzRDtBQUE4Z0Isa0RBQU0sR0FBRSx3RUFBUjtBQUE5Z0I7QUFKRixPQURGO0FBUUQ7OztFQXpCMkMsZ0JBQU1JLFM7O2tCQUEvQlIsZ0I7OztBQTRCckJBLGlCQUFpQlMsV0FBakIsR0FBK0Isa0JBQS9COztBQUVBVCxpQkFBaUJVLFNBQWpCLEdBQTZCO0FBQzNCUixTQUFPLGlCQUFVUyxNQURVO0FBRTNCUixTQUFPLGlCQUFVUztBQUZVLENBQTdCOztBQUtBWixpQkFBaUJhLFlBQWpCLEdBQWdDO0FBQzlCWCxTQUFPLE9BRHVCO0FBRTlCQyxTQUFPO0FBRnVCLENBQWhDOzs7Ozs7OztnQ0F6Q01OLGdCOztnQ0FJQUUsYzs7Z0NBRWVDLGdCIiwiZmlsZSI6IlR2T3V0bGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IHNxdWFyZSB9IGZyb20gJy4uL3N0eWxlcy9oZWxwZXJzJztcblxuY29uc3QgSUNPTl9CQVNFX1NUWUxFUyA9IHtcbiAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG59O1xuXG5jb25zdCBJQ09OX0JBU0VfU0laRSA9IDEzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUeGxJY29uVHZPdXRsaW5lIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGNvbG9yLFxuICAgICAgc2NhbGUsXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBhdHRycyA9IHtcbiAgICAgIGZpbGw6IGNvbG9yLFxuICAgICAgc3R5bGU6IHsgZGlzcGxheTogJ2Jsb2NrJyB9LFxuICAgIH07XG5cbiAgICBjb25zdCBpY29uU3R5bGVzID0ge1xuICAgICAgLi4uSUNPTl9CQVNFX1NUWUxFUyxcbiAgICAgIC4uLnNxdWFyZShJQ09OX0JBU0VfU0laRSAqIHNjYWxlKSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxpXG4gICAgICAgIGRhdGEtY29tcG9uZW50PVwiVHhsSWNvblR2T3V0bGluZVwiXG4gICAgICAgIHN0eWxlPXtpY29uU3R5bGVzfVxuICAgICAgPlxuICAgICAgICA8c3ZnIGRhdGEtbmFtZT1cIk1haW4gTGF5ZXJcIiB2aWV3Qm94PVwiMCAwIDEzIDEzXCIgey4uLmF0dHJzfT48Zz48cGF0aCBkPVwiTTAgMTJWNWExIDEgMCAwIDEgMS0xaDExYTEgMSAwIDAgMSAxIDF2N2ExIDEgMCAwIDEtMSAxSDFhMSAxIDAgMCAxLTEtMXptMTAtN0gxdjdoOVY1em0xLjUgMGEuNS41IDAgMCAwLS41LjUuNS41IDAgMCAwIC41LjUuNS41IDAgMCAwIC41LS41LjUuNSAwIDAgMC0uNS0uNXptMCAyYS41LjUgMCAwIDAtLjUuNS41LjUgMCAwIDAgLjUuNS41LjUgMCAwIDAgLjUtLjUuNS41IDAgMCAwLS41LS41elwiLz48cGF0aCBkPVwiTTExIDguOWgxVjEyaC0xVjguOU0xMiA0SDFhMSAxIDAgMCAwLTEgMXY3YTEgMSAwIDAgMCAxIDFoMTFhMSAxIDAgMCAwIDEtMVY1YTEgMSAwIDAgMC0xLTF6bS0uNSAyYS41LjUgMCAwIDEtLjUtLjUuNS41IDAgMCAxIDEgMCAuNS41IDAgMCAxLS41LjV6TTEgMTJWNWg5djdIMXptMTAuNS00YS41LjUgMCAwIDEtLjUtLjUuNS41IDAgMCAxIDEgMCAuNS41IDAgMCAxLS41LjV6XCIvPjwvZz48cGF0aCBkPVwiTTQgNC4zTDEuNyAyLjRhLjUuNSAwIDAgMSAuNi0uOEw1IDMuOGwyLjctMi4yYS41LjUgMCAwIDEgLjYuOEw2IDQuM0g0elwiLz48L3N2Zz5cbiAgICAgIDwvaT5cbiAgICApO1xuICB9XG59XG5cblR4bEljb25Udk91dGxpbmUuZGlzcGxheU5hbWUgPSAnVHhsSWNvblR2T3V0bGluZSc7XG5cblR4bEljb25Udk91dGxpbmUucHJvcFR5cGVzID0ge1xuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2NhbGU6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5UeGxJY29uVHZPdXRsaW5lLmRlZmF1bHRQcm9wcyA9IHtcbiAgY29sb3I6ICdibGFjaycsXG4gIHNjYWxlOiAxLFxufTtcbiJdfQ==