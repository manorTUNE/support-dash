'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Base = require('../base/Base');

var _Base2 = _interopRequireDefault(_Base);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlInfoSolid = function (_TxlBase) {
  (0, _inherits3.default)(TxlInfoSolid, _TxlBase);

  function TxlInfoSolid() {
    (0, _classCallCheck3.default)(this, TxlInfoSolid);
    return (0, _possibleConstructorReturn3.default)(this, (TxlInfoSolid.__proto__ || (0, _getPrototypeOf2.default)(TxlInfoSolid)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlInfoSolid, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlInfoSolid',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ viewBox: '0 0 13 13' }, attrs),
          _react2.default.createElement(
            'defs',
            null,
            _react2.default.createElement('path', { id: 'a', d: 'M6 10h1V6H6v4zm0-5h1V4H6v1zm.5 8c3.59 0 6.5-2.91 6.5-6.5C13 2.911 10.09 0 6.5 0S0 2.911 0 6.5C0 10.09 2.91 13 6.5 13z' })
          ),
          _react2.default.createElement(
            'g',
            { fill: 'none', fillRule: 'evenodd' },
            _react2.default.createElement(
              'mask',
              { id: 'b', fill: '#fff' },
              _react2.default.createElement('use', { xlinkHref: '#a' })
            ),
            _react2.default.createElement('use', { fill: '#000', fillOpacity: '0', xlinkHref: '#a' }),
            _react2.default.createElement('path', (0, _extends3.default)({ fill: 'red', d: 'M0 0h17v17H0z', mask: 'url(#b)' }, attrs))
          )
        )
      );
    }
  }]);
  return TxlInfoSolid;
}(_Base2.default);

exports.default = TxlInfoSolid;


TxlInfoSolid.displayName = 'TxlInfoSolid';

TxlInfoSolid.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlInfoSolid.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/InfoSolid.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/InfoSolid.jsx');

  __REACT_HOT_LOADER__.register(TxlInfoSolid, 'TxlInfoSolid', 'src/icons/InfoSolid.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9JbmZvU29saWQuanN4Il0sIm5hbWVzIjpbIklDT05fQkFTRV9TVFlMRVMiLCJkaXNwbGF5IiwiSUNPTl9CQVNFX1NJWkUiLCJUeGxJbmZvU29saWQiLCJwcm9wcyIsImNvbG9yIiwic2NhbGUiLCJhdHRycyIsImZpbGwiLCJzdHlsZSIsImljb25TdHlsZXMiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsInN0cmluZyIsIm51bWJlciIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7QUFDQTs7OztBQUVBLElBQU1BLG1CQUFtQjtBQUN2QkMsV0FBUztBQURjLENBQXpCOztBQUlBLElBQU1DLGlCQUFpQixFQUF2Qjs7SUFFcUJDLFk7Ozs7Ozs7Ozs7NkJBQ1Y7QUFBQSxtQkFJSCxLQUFLQyxLQUpGO0FBQUEsVUFFTEMsS0FGSyxVQUVMQSxLQUZLO0FBQUEsVUFHTEMsS0FISyxVQUdMQSxLQUhLOzs7QUFNUCxVQUFNQyxRQUFRO0FBQ1pDLGNBQU1ILEtBRE07QUFFWkksZUFBTyxFQUFFUixTQUFTLE9BQVg7QUFGSyxPQUFkOztBQUtBLFVBQU1TLHdDQUNEVixnQkFEQyxFQUVELHFCQUFPRSxpQkFBaUJJLEtBQXhCLENBRkMsQ0FBTjs7QUFLQSxhQUNFO0FBQUE7QUFBQTtBQUNFLDRCQUFlLGNBRGpCO0FBRUUsaUJBQU9JO0FBRlQ7QUFJRTtBQUFBO0FBQUEsbUNBQUssU0FBUSxXQUFiLElBQTZCSCxLQUE3QjtBQUNFO0FBQUE7QUFBQTtBQUNFLG9EQUFNLElBQUcsR0FBVCxFQUFhLEdBQUUsdUhBQWY7QUFERixXQURGO0FBSUU7QUFBQTtBQUFBLGNBQUcsTUFBSyxNQUFSLEVBQWUsVUFBUyxTQUF4QjtBQUNFO0FBQUE7QUFBQSxnQkFBTSxJQUFHLEdBQVQsRUFBYSxNQUFLLE1BQWxCO0FBQ0UscURBQUssV0FBVSxJQUFmO0FBREYsYUFERjtBQUlFLG1EQUFLLE1BQUssTUFBVixFQUFpQixhQUFZLEdBQTdCLEVBQWlDLFdBQVUsSUFBM0MsR0FKRjtBQUtFLDJFQUFNLE1BQUssS0FBWCxFQUFpQixHQUFFLGVBQW5CLEVBQW1DLE1BQUssU0FBeEMsSUFBc0RBLEtBQXREO0FBTEY7QUFKRjtBQUpGLE9BREY7QUFtQkQ7Ozs7O2tCQXBDa0JKLFk7OztBQXVDckJBLGFBQWFRLFdBQWIsR0FBMkIsY0FBM0I7O0FBRUFSLGFBQWFTLFNBQWIsR0FBeUI7QUFDdkJQLFNBQU8saUJBQVVRLE1BRE07QUFFdkJQLFNBQU8saUJBQVVRO0FBRk0sQ0FBekI7O0FBS0FYLGFBQWFZLFlBQWIsR0FBNEI7QUFDMUJWLFNBQU8sT0FEbUI7QUFFMUJDLFNBQU87QUFGbUIsQ0FBNUI7Ozs7Ozs7O2dDQXBETU4sZ0I7O2dDQUlBRSxjOztnQ0FFZUMsWSIsImZpbGUiOiJJbmZvU29saWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHJvcFR5cGVzIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgVHhsQmFzZSBmcm9tICcuLi9iYXNlL0Jhc2UnO1xuaW1wb3J0IHsgc3F1YXJlIH0gZnJvbSAnLi4vc3R5bGVzL2hlbHBlcnMnO1xuXG5jb25zdCBJQ09OX0JBU0VfU1RZTEVTID0ge1xuICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbn07XG5cbmNvbnN0IElDT05fQkFTRV9TSVpFID0gMTM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR4bEluZm9Tb2xpZCBleHRlbmRzIFR4bEJhc2Uge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY29sb3IsXG4gICAgICBzY2FsZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGF0dHJzID0ge1xuICAgICAgZmlsbDogY29sb3IsXG4gICAgICBzdHlsZTogeyBkaXNwbGF5OiAnYmxvY2snIH0sXG4gICAgfTtcblxuICAgIGNvbnN0IGljb25TdHlsZXMgPSB7XG4gICAgICAuLi5JQ09OX0JBU0VfU1RZTEVTLFxuICAgICAgLi4uc3F1YXJlKElDT05fQkFTRV9TSVpFICogc2NhbGUpLFxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGlcbiAgICAgICAgZGF0YS1jb21wb25lbnQ9XCJUeGxJbmZvU29saWRcIlxuICAgICAgICBzdHlsZT17aWNvblN0eWxlc31cbiAgICAgID5cbiAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDEzIDEzXCIgey4uLmF0dHJzfT5cbiAgICAgICAgICA8ZGVmcz5cbiAgICAgICAgICAgIDxwYXRoIGlkPVwiYVwiIGQ9XCJNNiAxMGgxVjZINnY0em0wLTVoMVY0SDZ2MXptLjUgOGMzLjU5IDAgNi41LTIuOTEgNi41LTYuNUMxMyAyLjkxMSAxMC4wOSAwIDYuNSAwUzAgMi45MTEgMCA2LjVDMCAxMC4wOSAyLjkxIDEzIDYuNSAxM3pcIi8+XG4gICAgICAgICAgPC9kZWZzPlxuICAgICAgICAgIDxnIGZpbGw9XCJub25lXCIgZmlsbFJ1bGU9XCJldmVub2RkXCI+XG4gICAgICAgICAgICA8bWFzayBpZD1cImJcIiBmaWxsPVwiI2ZmZlwiPlxuICAgICAgICAgICAgICA8dXNlIHhsaW5rSHJlZj1cIiNhXCIvPlxuICAgICAgICAgICAgPC9tYXNrPlxuICAgICAgICAgICAgPHVzZSBmaWxsPVwiIzAwMFwiIGZpbGxPcGFjaXR5PVwiMFwiIHhsaW5rSHJlZj1cIiNhXCIvPlxuICAgICAgICAgICAgPHBhdGggZmlsbD1cInJlZFwiIGQ9XCJNMCAwaDE3djE3SDB6XCIgbWFzaz1cInVybCgjYilcIiB7Li4uYXR0cnN9IC8+XG4gICAgICAgICAgPC9nPlxuICAgICAgICA8L3N2Zz5cbiAgICAgIDwvaT5cbiAgICApO1xuICB9XG59XG5cblR4bEluZm9Tb2xpZC5kaXNwbGF5TmFtZSA9ICdUeGxJbmZvU29saWQnO1xuXG5UeGxJbmZvU29saWQucHJvcFR5cGVzID0ge1xuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2NhbGU6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5UeGxJbmZvU29saWQuZGVmYXVsdFByb3BzID0ge1xuICBjb2xvcjogJ2JsYWNrJyxcbiAgc2NhbGU6IDEsXG59O1xuIl19