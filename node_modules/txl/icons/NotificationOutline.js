'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlIconNotificationOutline = function (_React$Component) {
  (0, _inherits3.default)(TxlIconNotificationOutline, _React$Component);

  function TxlIconNotificationOutline() {
    (0, _classCallCheck3.default)(this, TxlIconNotificationOutline);
    return (0, _possibleConstructorReturn3.default)(this, (TxlIconNotificationOutline.__proto__ || (0, _getPrototypeOf2.default)(TxlIconNotificationOutline)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlIconNotificationOutline, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlIconNotificationOutline',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ viewBox: '0 0 13 13' }, attrs),
          _react2.default.createElement('path', { d: 'M6.5 1c.2 0 .5.2.5.4l.1.6.6.2c1.2.5 2.1 1.6 2.3 2.9V9c0 1.1.9 2 2 2H7.6l-.3.5c-.1.3-.4.5-.8.5s-.7-.2-.9-.5l-.2-.5H1c1.1 0 2-.9 2-2V5.1c.2-1.3 1.1-2.4 2.4-2.8l.5-.3.1-.6c0-.2.3-.4.5-.4m0-1C5.8 0 5.1.6 5 1.3c-1.6.5-2.8 2-3 3.7v4c0 .6-.4 1-1 1s-1 .4-1 1 .4 1 1 1h3.8c.3.6 1 1 1.7 1s1.4-.4 1.7-1H12c.6 0 1-.4 1-1s-.4-1-1-1-1-.4-1-1V5c-.2-1.7-1.4-3.2-3-3.7C7.9.6 7.2 0 6.5 0z' })
        )
      );
    }
  }]);
  return TxlIconNotificationOutline;
}(_react2.default.Component);

exports.default = TxlIconNotificationOutline;


TxlIconNotificationOutline.displayName = 'TxlIconNotificationOutline';

TxlIconNotificationOutline.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlIconNotificationOutline.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/NotificationOutline.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/NotificationOutline.jsx');

  __REACT_HOT_LOADER__.register(TxlIconNotificationOutline, 'TxlIconNotificationOutline', 'src/icons/NotificationOutline.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9Ob3RpZmljYXRpb25PdXRsaW5lLmpzeCJdLCJuYW1lcyI6WyJJQ09OX0JBU0VfU1RZTEVTIiwiZGlzcGxheSIsIklDT05fQkFTRV9TSVpFIiwiVHhsSWNvbk5vdGlmaWNhdGlvbk91dGxpbmUiLCJwcm9wcyIsImNvbG9yIiwic2NhbGUiLCJhdHRycyIsImZpbGwiLCJzdHlsZSIsImljb25TdHlsZXMiLCJDb21wb25lbnQiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsInN0cmluZyIsIm51bWJlciIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7QUFFQSxJQUFNQSxtQkFBbUI7QUFDdkJDLFdBQVM7QUFEYyxDQUF6Qjs7QUFJQSxJQUFNQyxpQkFBaUIsRUFBdkI7O0lBRXFCQywwQjs7Ozs7Ozs7Ozs2QkFDVjtBQUFBLG1CQUlILEtBQUtDLEtBSkY7QUFBQSxVQUVMQyxLQUZLLFVBRUxBLEtBRks7QUFBQSxVQUdMQyxLQUhLLFVBR0xBLEtBSEs7OztBQU1QLFVBQU1DLFFBQVE7QUFDWkMsY0FBTUgsS0FETTtBQUVaSSxlQUFPLEVBQUVSLFNBQVMsT0FBWDtBQUZLLE9BQWQ7O0FBS0EsVUFBTVMsd0NBQ0RWLGdCQURDLEVBRUQscUJBQU9FLGlCQUFpQkksS0FBeEIsQ0FGQyxDQUFOOztBQUtBLGFBQ0U7QUFBQTtBQUFBO0FBQ0UsNEJBQWUsNEJBRGpCO0FBRUUsaUJBQU9JO0FBRlQ7QUFJRTtBQUFBO0FBQUEsbUNBQUssU0FBUSxXQUFiLElBQTZCSCxLQUE3QjtBQUFvQyxrREFBTSxHQUFFLG9YQUFSO0FBQXBDO0FBSkYsT0FERjtBQVFEOzs7RUF6QnFELGdCQUFNSSxTOztrQkFBekNSLDBCOzs7QUE0QnJCQSwyQkFBMkJTLFdBQTNCLEdBQXlDLDRCQUF6Qzs7QUFFQVQsMkJBQTJCVSxTQUEzQixHQUF1QztBQUNyQ1IsU0FBTyxpQkFBVVMsTUFEb0I7QUFFckNSLFNBQU8saUJBQVVTO0FBRm9CLENBQXZDOztBQUtBWiwyQkFBMkJhLFlBQTNCLEdBQTBDO0FBQ3hDWCxTQUFPLE9BRGlDO0FBRXhDQyxTQUFPO0FBRmlDLENBQTFDOzs7Ozs7OztnQ0F6Q01OLGdCOztnQ0FJQUUsYzs7Z0NBRWVDLDBCIiwiZmlsZSI6Ik5vdGlmaWNhdGlvbk91dGxpbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHJvcFR5cGVzIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBzcXVhcmUgfSBmcm9tICcuLi9zdHlsZXMvaGVscGVycyc7XG5cbmNvbnN0IElDT05fQkFTRV9TVFlMRVMgPSB7XG4gIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxufTtcblxuY29uc3QgSUNPTl9CQVNFX1NJWkUgPSAxMztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHhsSWNvbk5vdGlmaWNhdGlvbk91dGxpbmUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY29sb3IsXG4gICAgICBzY2FsZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGF0dHJzID0ge1xuICAgICAgZmlsbDogY29sb3IsXG4gICAgICBzdHlsZTogeyBkaXNwbGF5OiAnYmxvY2snIH0sXG4gICAgfTtcblxuICAgIGNvbnN0IGljb25TdHlsZXMgPSB7XG4gICAgICAuLi5JQ09OX0JBU0VfU1RZTEVTLFxuICAgICAgLi4uc3F1YXJlKElDT05fQkFTRV9TSVpFICogc2NhbGUpLFxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGlcbiAgICAgICAgZGF0YS1jb21wb25lbnQ9XCJUeGxJY29uTm90aWZpY2F0aW9uT3V0bGluZVwiXG4gICAgICAgIHN0eWxlPXtpY29uU3R5bGVzfVxuICAgICAgPlxuICAgICAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgMTMgMTNcIiB7Li4uYXR0cnN9PjxwYXRoIGQ9XCJNNi41IDFjLjIgMCAuNS4yLjUuNGwuMS42LjYuMmMxLjIuNSAyLjEgMS42IDIuMyAyLjlWOWMwIDEuMS45IDIgMiAySDcuNmwtLjMuNWMtLjEuMy0uNC41LS44LjVzLS43LS4yLS45LS41bC0uMi0uNUgxYzEuMSAwIDItLjkgMi0yVjUuMWMuMi0xLjMgMS4xLTIuNCAyLjQtMi44bC41LS4zLjEtLjZjMC0uMi4zLS40LjUtLjRtMC0xQzUuOCAwIDUuMS42IDUgMS4zYy0xLjYuNS0yLjggMi0zIDMuN3Y0YzAgLjYtLjQgMS0xIDFzLTEgLjQtMSAxIC40IDEgMSAxaDMuOGMuMy42IDEgMSAxLjcgMXMxLjQtLjQgMS43LTFIMTJjLjYgMCAxLS40IDEtMXMtLjQtMS0xLTEtMS0uNC0xLTFWNWMtLjItMS43LTEuNC0zLjItMy0zLjdDNy45LjYgNy4yIDAgNi41IDB6XCIvPjwvc3ZnPlxuICAgICAgPC9pPlxuICAgICk7XG4gIH1cbn1cblxuVHhsSWNvbk5vdGlmaWNhdGlvbk91dGxpbmUuZGlzcGxheU5hbWUgPSAnVHhsSWNvbk5vdGlmaWNhdGlvbk91dGxpbmUnO1xuXG5UeGxJY29uTm90aWZpY2F0aW9uT3V0bGluZS5wcm9wVHlwZXMgPSB7XG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzY2FsZTogUHJvcFR5cGVzLm51bWJlcixcbn07XG5cblR4bEljb25Ob3RpZmljYXRpb25PdXRsaW5lLmRlZmF1bHRQcm9wcyA9IHtcbiAgY29sb3I6ICdibGFjaycsXG4gIHNjYWxlOiAxLFxufTtcbiJdfQ==