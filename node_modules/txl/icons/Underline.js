'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlIconUnderline = function (_React$Component) {
  (0, _inherits3.default)(TxlIconUnderline, _React$Component);

  function TxlIconUnderline() {
    (0, _classCallCheck3.default)(this, TxlIconUnderline);
    return (0, _possibleConstructorReturn3.default)(this, (TxlIconUnderline.__proto__ || (0, _getPrototypeOf2.default)(TxlIconUnderline)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlIconUnderline, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlIconUnderline',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ viewBox: '0 0 13 13' }, attrs),
          _react2.default.createElement('path', { d: 'M1 12h11v1H1z' }),
          _react2.default.createElement('path', { d: 'M10.6.6v6.7c0 .7-.2 1.2-.5 1.7s-.8.9-1.4 1.1c-.6.3-1.3.4-2.1.4-1.2 0-2.2-.3-2.9-.9-.7-.5-1.1-1.2-1.1-2.2V.6h1v6.7c0 .8.3 1.5.8 1.9.5.5 1.3.7 2.2.7s1.7-.2 2.2-.7c.5-.5.8-1.1.8-1.9V.6h1z' })
        )
      );
    }
  }]);
  return TxlIconUnderline;
}(_react2.default.Component);

exports.default = TxlIconUnderline;


TxlIconUnderline.displayName = 'TxlIconUnderline';

TxlIconUnderline.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlIconUnderline.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/Underline.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/Underline.jsx');

  __REACT_HOT_LOADER__.register(TxlIconUnderline, 'TxlIconUnderline', 'src/icons/Underline.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9VbmRlcmxpbmUuanN4Il0sIm5hbWVzIjpbIklDT05fQkFTRV9TVFlMRVMiLCJkaXNwbGF5IiwiSUNPTl9CQVNFX1NJWkUiLCJUeGxJY29uVW5kZXJsaW5lIiwicHJvcHMiLCJjb2xvciIsInNjYWxlIiwiYXR0cnMiLCJmaWxsIiwic3R5bGUiLCJpY29uU3R5bGVzIiwiQ29tcG9uZW50IiwiZGlzcGxheU5hbWUiLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJudW1iZXIiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUVBOzs7O0FBRUEsSUFBTUEsbUJBQW1CO0FBQ3ZCQyxXQUFTO0FBRGMsQ0FBekI7O0FBSUEsSUFBTUMsaUJBQWlCLEVBQXZCOztJQUVxQkMsZ0I7Ozs7Ozs7Ozs7NkJBQ1Y7QUFBQSxtQkFJSCxLQUFLQyxLQUpGO0FBQUEsVUFFTEMsS0FGSyxVQUVMQSxLQUZLO0FBQUEsVUFHTEMsS0FISyxVQUdMQSxLQUhLOzs7QUFNUCxVQUFNQyxRQUFRO0FBQ1pDLGNBQU1ILEtBRE07QUFFWkksZUFBTyxFQUFFUixTQUFTLE9BQVg7QUFGSyxPQUFkOztBQUtBLFVBQU1TLHdDQUNEVixnQkFEQyxFQUVELHFCQUFPRSxpQkFBaUJJLEtBQXhCLENBRkMsQ0FBTjs7QUFLQSxhQUNFO0FBQUE7QUFBQTtBQUNFLDRCQUFlLGtCQURqQjtBQUVFLGlCQUFPSTtBQUZUO0FBSUU7QUFBQTtBQUFBLG1DQUFLLFNBQVEsV0FBYixJQUE2QkgsS0FBN0I7QUFBb0Msa0RBQU0sR0FBRSxlQUFSLEdBQXBDO0FBQTZELGtEQUFNLEdBQUUsMExBQVI7QUFBN0Q7QUFKRixPQURGO0FBUUQ7OztFQXpCMkMsZ0JBQU1JLFM7O2tCQUEvQlIsZ0I7OztBQTRCckJBLGlCQUFpQlMsV0FBakIsR0FBK0Isa0JBQS9COztBQUVBVCxpQkFBaUJVLFNBQWpCLEdBQTZCO0FBQzNCUixTQUFPLGlCQUFVUyxNQURVO0FBRTNCUixTQUFPLGlCQUFVUztBQUZVLENBQTdCOztBQUtBWixpQkFBaUJhLFlBQWpCLEdBQWdDO0FBQzlCWCxTQUFPLE9BRHVCO0FBRTlCQyxTQUFPO0FBRnVCLENBQWhDOzs7Ozs7OztnQ0F6Q01OLGdCOztnQ0FJQUUsYzs7Z0NBRWVDLGdCIiwiZmlsZSI6IlVuZGVybGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IHNxdWFyZSB9IGZyb20gJy4uL3N0eWxlcy9oZWxwZXJzJztcblxuY29uc3QgSUNPTl9CQVNFX1NUWUxFUyA9IHtcbiAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG59O1xuXG5jb25zdCBJQ09OX0JBU0VfU0laRSA9IDEzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUeGxJY29uVW5kZXJsaW5lIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGNvbG9yLFxuICAgICAgc2NhbGUsXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBhdHRycyA9IHtcbiAgICAgIGZpbGw6IGNvbG9yLFxuICAgICAgc3R5bGU6IHsgZGlzcGxheTogJ2Jsb2NrJyB9LFxuICAgIH07XG5cbiAgICBjb25zdCBpY29uU3R5bGVzID0ge1xuICAgICAgLi4uSUNPTl9CQVNFX1NUWUxFUyxcbiAgICAgIC4uLnNxdWFyZShJQ09OX0JBU0VfU0laRSAqIHNjYWxlKSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxpXG4gICAgICAgIGRhdGEtY29tcG9uZW50PVwiVHhsSWNvblVuZGVybGluZVwiXG4gICAgICAgIHN0eWxlPXtpY29uU3R5bGVzfVxuICAgICAgPlxuICAgICAgICA8c3ZnIHZpZXdCb3g9XCIwIDAgMTMgMTNcIiB7Li4uYXR0cnN9PjxwYXRoIGQ9XCJNMSAxMmgxMXYxSDF6XCIvPjxwYXRoIGQ9XCJNMTAuNi42djYuN2MwIC43LS4yIDEuMi0uNSAxLjdzLS44LjktMS40IDEuMWMtLjYuMy0xLjMuNC0yLjEuNC0xLjIgMC0yLjItLjMtMi45LS45LS43LS41LTEuMS0xLjItMS4xLTIuMlYuNmgxdjYuN2MwIC44LjMgMS41LjggMS45LjUuNSAxLjMuNyAyLjIuN3MxLjctLjIgMi4yLS43Yy41LS41LjgtMS4xLjgtMS45Vi42aDF6XCIvPjwvc3ZnPlxuICAgICAgPC9pPlxuICAgICk7XG4gIH1cbn1cblxuVHhsSWNvblVuZGVybGluZS5kaXNwbGF5TmFtZSA9ICdUeGxJY29uVW5kZXJsaW5lJztcblxuVHhsSWNvblVuZGVybGluZS5wcm9wVHlwZXMgPSB7XG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzY2FsZTogUHJvcFR5cGVzLm51bWJlcixcbn07XG5cblR4bEljb25VbmRlcmxpbmUuZGVmYXVsdFByb3BzID0ge1xuICBjb2xvcjogJ2JsYWNrJyxcbiAgc2NhbGU6IDEsXG59O1xuIl19