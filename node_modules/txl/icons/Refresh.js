'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlIconRefresh = function (_React$Component) {
  (0, _inherits3.default)(TxlIconRefresh, _React$Component);

  function TxlIconRefresh() {
    (0, _classCallCheck3.default)(this, TxlIconRefresh);
    return (0, _possibleConstructorReturn3.default)(this, (TxlIconRefresh.__proto__ || (0, _getPrototypeOf2.default)(TxlIconRefresh)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlIconRefresh, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlIconRefresh',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ viewBox: '-161 313.9 13 13' }, attrs),
          _react2.default.createElement('path', { d: 'M-153.6 318.4h2.2c-.6-1-1.8-1.7-3.1-1.7s-2.4.7-3.1 1.7h-1.1c.7-1.6 2.3-2.7 4.2-2.7s3.5 1.1 4.2 2.7h2.3l-2.8 2.8-2.8-2.8zM-158.2 319.8l2.8 2.8h-2.2c.6 1 1.8 1.7 3.1 1.7s2.4-.7 3.1-1.7h1.2c-.7 1.6-2.3 2.7-4.2 2.7-1.9 0-3.6-1.1-4.4-2.7h-2.2l2.8-2.8z' })
        )
      );
    }
  }]);
  return TxlIconRefresh;
}(_react2.default.Component);

exports.default = TxlIconRefresh;


TxlIconRefresh.displayName = 'TxlIconRefresh';

TxlIconRefresh.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlIconRefresh.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/Refresh.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/Refresh.jsx');

  __REACT_HOT_LOADER__.register(TxlIconRefresh, 'TxlIconRefresh', 'src/icons/Refresh.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9SZWZyZXNoLmpzeCJdLCJuYW1lcyI6WyJJQ09OX0JBU0VfU1RZTEVTIiwiZGlzcGxheSIsIklDT05fQkFTRV9TSVpFIiwiVHhsSWNvblJlZnJlc2giLCJwcm9wcyIsImNvbG9yIiwic2NhbGUiLCJhdHRycyIsImZpbGwiLCJzdHlsZSIsImljb25TdHlsZXMiLCJDb21wb25lbnQiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsInN0cmluZyIsIm51bWJlciIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7QUFFQSxJQUFNQSxtQkFBbUI7QUFDdkJDLFdBQVM7QUFEYyxDQUF6Qjs7QUFJQSxJQUFNQyxpQkFBaUIsRUFBdkI7O0lBRXFCQyxjOzs7Ozs7Ozs7OzZCQUNWO0FBQUEsbUJBSUgsS0FBS0MsS0FKRjtBQUFBLFVBRUxDLEtBRkssVUFFTEEsS0FGSztBQUFBLFVBR0xDLEtBSEssVUFHTEEsS0FISzs7O0FBTVAsVUFBTUMsUUFBUTtBQUNaQyxjQUFNSCxLQURNO0FBRVpJLGVBQU8sRUFBRVIsU0FBUyxPQUFYO0FBRkssT0FBZDs7QUFLQSxVQUFNUyx3Q0FDRFYsZ0JBREMsRUFFRCxxQkFBT0UsaUJBQWlCSSxLQUF4QixDQUZDLENBQU47O0FBS0EsYUFDRTtBQUFBO0FBQUE7QUFDRSw0QkFBZSxnQkFEakI7QUFFRSxpQkFBT0k7QUFGVDtBQUlFO0FBQUE7QUFBQSxtQ0FBSyxTQUFRLGtCQUFiLElBQW9DSCxLQUFwQztBQUEyQyxrREFBTSxHQUFFLHdQQUFSO0FBQTNDO0FBSkYsT0FERjtBQVFEOzs7RUF6QnlDLGdCQUFNSSxTOztrQkFBN0JSLGM7OztBQTRCckJBLGVBQWVTLFdBQWYsR0FBNkIsZ0JBQTdCOztBQUVBVCxlQUFlVSxTQUFmLEdBQTJCO0FBQ3pCUixTQUFPLGlCQUFVUyxNQURRO0FBRXpCUixTQUFPLGlCQUFVUztBQUZRLENBQTNCOztBQUtBWixlQUFlYSxZQUFmLEdBQThCO0FBQzVCWCxTQUFPLE9BRHFCO0FBRTVCQyxTQUFPO0FBRnFCLENBQTlCOzs7Ozs7OztnQ0F6Q01OLGdCOztnQ0FJQUUsYzs7Z0NBRWVDLGMiLCJmaWxlIjoiUmVmcmVzaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IHNxdWFyZSB9IGZyb20gJy4uL3N0eWxlcy9oZWxwZXJzJztcblxuY29uc3QgSUNPTl9CQVNFX1NUWUxFUyA9IHtcbiAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG59O1xuXG5jb25zdCBJQ09OX0JBU0VfU0laRSA9IDEzO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUeGxJY29uUmVmcmVzaCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjb2xvcixcbiAgICAgIHNjYWxlLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgYXR0cnMgPSB7XG4gICAgICBmaWxsOiBjb2xvcixcbiAgICAgIHN0eWxlOiB7IGRpc3BsYXk6ICdibG9jaycgfSxcbiAgICB9O1xuXG4gICAgY29uc3QgaWNvblN0eWxlcyA9IHtcbiAgICAgIC4uLklDT05fQkFTRV9TVFlMRVMsXG4gICAgICAuLi5zcXVhcmUoSUNPTl9CQVNFX1NJWkUgKiBzY2FsZSksXG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8aVxuICAgICAgICBkYXRhLWNvbXBvbmVudD1cIlR4bEljb25SZWZyZXNoXCJcbiAgICAgICAgc3R5bGU9e2ljb25TdHlsZXN9XG4gICAgICA+XG4gICAgICAgIDxzdmcgdmlld0JveD1cIi0xNjEgMzEzLjkgMTMgMTNcIiB7Li4uYXR0cnN9PjxwYXRoIGQ9XCJNLTE1My42IDMxOC40aDIuMmMtLjYtMS0xLjgtMS43LTMuMS0xLjdzLTIuNC43LTMuMSAxLjdoLTEuMWMuNy0xLjYgMi4zLTIuNyA0LjItMi43czMuNSAxLjEgNC4yIDIuN2gyLjNsLTIuOCAyLjgtMi44LTIuOHpNLTE1OC4yIDMxOS44bDIuOCAyLjhoLTIuMmMuNiAxIDEuOCAxLjcgMy4xIDEuN3MyLjQtLjcgMy4xLTEuN2gxLjJjLS43IDEuNi0yLjMgMi43LTQuMiAyLjctMS45IDAtMy42LTEuMS00LjQtMi43aC0yLjJsMi44LTIuOHpcIi8+PC9zdmc+XG4gICAgICA8L2k+XG4gICAgKTtcbiAgfVxufVxuXG5UeGxJY29uUmVmcmVzaC5kaXNwbGF5TmFtZSA9ICdUeGxJY29uUmVmcmVzaCc7XG5cblR4bEljb25SZWZyZXNoLnByb3BUeXBlcyA9IHtcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNjYWxlOiBQcm9wVHlwZXMubnVtYmVyLFxufTtcblxuVHhsSWNvblJlZnJlc2guZGVmYXVsdFByb3BzID0ge1xuICBjb2xvcjogJ2JsYWNrJyxcbiAgc2NhbGU6IDEsXG59O1xuIl19