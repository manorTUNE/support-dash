'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlIconMeterSolid = function (_React$Component) {
  (0, _inherits3.default)(TxlIconMeterSolid, _React$Component);

  function TxlIconMeterSolid() {
    (0, _classCallCheck3.default)(this, TxlIconMeterSolid);
    return (0, _possibleConstructorReturn3.default)(this, (TxlIconMeterSolid.__proto__ || (0, _getPrototypeOf2.default)(TxlIconMeterSolid)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlIconMeterSolid, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlIconMeterSolid',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ viewBox: '0 0 13 13' }, attrs),
          _react2.default.createElement('path', { d: 'M6.5 1C2.9 1 0 4 0 7.6 0 9.3.6 11 1.6 12h9.9c1-1 1.6-2.7 1.6-4.4C13 4 10.1 1 6.5 1zm1.9 7.6c-.3.8-1 1.4-1.9 1.4-1.1 0-2-.9-2-2 0-.7.4-1.3.9-1.7L11 3 8.4 8.6z' })
        )
      );
    }
  }]);
  return TxlIconMeterSolid;
}(_react2.default.Component);

exports.default = TxlIconMeterSolid;


TxlIconMeterSolid.displayName = 'TxlIconMeterSolid';

TxlIconMeterSolid.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlIconMeterSolid.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/MeterSolid.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/MeterSolid.jsx');

  __REACT_HOT_LOADER__.register(TxlIconMeterSolid, 'TxlIconMeterSolid', 'src/icons/MeterSolid.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9NZXRlclNvbGlkLmpzeCJdLCJuYW1lcyI6WyJJQ09OX0JBU0VfU1RZTEVTIiwiZGlzcGxheSIsIklDT05fQkFTRV9TSVpFIiwiVHhsSWNvbk1ldGVyU29saWQiLCJwcm9wcyIsImNvbG9yIiwic2NhbGUiLCJhdHRycyIsImZpbGwiLCJzdHlsZSIsImljb25TdHlsZXMiLCJDb21wb25lbnQiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsInN0cmluZyIsIm51bWJlciIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7QUFFQSxJQUFNQSxtQkFBbUI7QUFDdkJDLFdBQVM7QUFEYyxDQUF6Qjs7QUFJQSxJQUFNQyxpQkFBaUIsRUFBdkI7O0lBRXFCQyxpQjs7Ozs7Ozs7Ozs2QkFDVjtBQUFBLG1CQUlILEtBQUtDLEtBSkY7QUFBQSxVQUVMQyxLQUZLLFVBRUxBLEtBRks7QUFBQSxVQUdMQyxLQUhLLFVBR0xBLEtBSEs7OztBQU1QLFVBQU1DLFFBQVE7QUFDWkMsY0FBTUgsS0FETTtBQUVaSSxlQUFPLEVBQUVSLFNBQVMsT0FBWDtBQUZLLE9BQWQ7O0FBS0EsVUFBTVMsd0NBQ0RWLGdCQURDLEVBRUQscUJBQU9FLGlCQUFpQkksS0FBeEIsQ0FGQyxDQUFOOztBQUtBLGFBQ0U7QUFBQTtBQUFBO0FBQ0UsNEJBQWUsbUJBRGpCO0FBRUUsaUJBQU9JO0FBRlQ7QUFJRTtBQUFBO0FBQUEsbUNBQUssU0FBUSxXQUFiLElBQTZCSCxLQUE3QjtBQUFvQyxrREFBTSxHQUFFLCtKQUFSO0FBQXBDO0FBSkYsT0FERjtBQVFEOzs7RUF6QjRDLGdCQUFNSSxTOztrQkFBaENSLGlCOzs7QUE0QnJCQSxrQkFBa0JTLFdBQWxCLEdBQWdDLG1CQUFoQzs7QUFFQVQsa0JBQWtCVSxTQUFsQixHQUE4QjtBQUM1QlIsU0FBTyxpQkFBVVMsTUFEVztBQUU1QlIsU0FBTyxpQkFBVVM7QUFGVyxDQUE5Qjs7QUFLQVosa0JBQWtCYSxZQUFsQixHQUFpQztBQUMvQlgsU0FBTyxPQUR3QjtBQUUvQkMsU0FBTztBQUZ3QixDQUFqQzs7Ozs7Ozs7Z0NBekNNTixnQjs7Z0NBSUFFLGM7O2dDQUVlQyxpQiIsImZpbGUiOiJNZXRlclNvbGlkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgc3F1YXJlIH0gZnJvbSAnLi4vc3R5bGVzL2hlbHBlcnMnO1xuXG5jb25zdCBJQ09OX0JBU0VfU1RZTEVTID0ge1xuICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbn07XG5cbmNvbnN0IElDT05fQkFTRV9TSVpFID0gMTM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR4bEljb25NZXRlclNvbGlkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGNvbG9yLFxuICAgICAgc2NhbGUsXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBhdHRycyA9IHtcbiAgICAgIGZpbGw6IGNvbG9yLFxuICAgICAgc3R5bGU6IHsgZGlzcGxheTogJ2Jsb2NrJyB9LFxuICAgIH07XG5cbiAgICBjb25zdCBpY29uU3R5bGVzID0ge1xuICAgICAgLi4uSUNPTl9CQVNFX1NUWUxFUyxcbiAgICAgIC4uLnNxdWFyZShJQ09OX0JBU0VfU0laRSAqIHNjYWxlKSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxpXG4gICAgICAgIGRhdGEtY29tcG9uZW50PVwiVHhsSWNvbk1ldGVyU29saWRcIlxuICAgICAgICBzdHlsZT17aWNvblN0eWxlc31cbiAgICAgID5cbiAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDEzIDEzXCIgey4uLmF0dHJzfT48cGF0aCBkPVwiTTYuNSAxQzIuOSAxIDAgNCAwIDcuNiAwIDkuMy42IDExIDEuNiAxMmg5LjljMS0xIDEuNi0yLjcgMS42LTQuNEMxMyA0IDEwLjEgMSA2LjUgMXptMS45IDcuNmMtLjMuOC0xIDEuNC0xLjkgMS40LTEuMSAwLTItLjktMi0yIDAtLjcuNC0xLjMuOS0xLjdMMTEgMyA4LjQgOC42elwiLz48L3N2Zz5cbiAgICAgIDwvaT5cbiAgICApO1xuICB9XG59XG5cblR4bEljb25NZXRlclNvbGlkLmRpc3BsYXlOYW1lID0gJ1R4bEljb25NZXRlclNvbGlkJztcblxuVHhsSWNvbk1ldGVyU29saWQucHJvcFR5cGVzID0ge1xuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2NhbGU6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5UeGxJY29uTWV0ZXJTb2xpZC5kZWZhdWx0UHJvcHMgPSB7XG4gIGNvbG9yOiAnYmxhY2snLFxuICBzY2FsZTogMSxcbn07XG4iXX0=