'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlIconNotificationSolid = function (_React$Component) {
  (0, _inherits3.default)(TxlIconNotificationSolid, _React$Component);

  function TxlIconNotificationSolid() {
    (0, _classCallCheck3.default)(this, TxlIconNotificationSolid);
    return (0, _possibleConstructorReturn3.default)(this, (TxlIconNotificationSolid.__proto__ || (0, _getPrototypeOf2.default)(TxlIconNotificationSolid)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlIconNotificationSolid, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlIconNotificationSolid',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ viewBox: '0 0 13 13' }, attrs),
          _react2.default.createElement('path', { d: 'M12 10c-.6 0-1-.4-1-1V5c-.2-1.7-1.4-3.2-3-3.7C7.9.6 7.2 0 6.5 0S5.1.6 5 1.3c-1.6.5-2.8 2-3 3.7v4c0 .6-.4 1-1 1s-1 .4-1 1 .4 1 1 1h3.8c.3.6 1 1 1.7 1s1.4-.4 1.7-1H12c.6 0 1-.4 1-1s-.4-1-1-1z' })
        )
      );
    }
  }]);
  return TxlIconNotificationSolid;
}(_react2.default.Component);

exports.default = TxlIconNotificationSolid;


TxlIconNotificationSolid.displayName = 'TxlIconNotificationSolid';

TxlIconNotificationSolid.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlIconNotificationSolid.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/NotificationSolid.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/NotificationSolid.jsx');

  __REACT_HOT_LOADER__.register(TxlIconNotificationSolid, 'TxlIconNotificationSolid', 'src/icons/NotificationSolid.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9Ob3RpZmljYXRpb25Tb2xpZC5qc3giXSwibmFtZXMiOlsiSUNPTl9CQVNFX1NUWUxFUyIsImRpc3BsYXkiLCJJQ09OX0JBU0VfU0laRSIsIlR4bEljb25Ob3RpZmljYXRpb25Tb2xpZCIsInByb3BzIiwiY29sb3IiLCJzY2FsZSIsImF0dHJzIiwiZmlsbCIsInN0eWxlIiwiaWNvblN0eWxlcyIsIkNvbXBvbmVudCIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwic3RyaW5nIiwibnVtYmVyIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQTs7OztBQUVBLElBQU1BLG1CQUFtQjtBQUN2QkMsV0FBUztBQURjLENBQXpCOztBQUlBLElBQU1DLGlCQUFpQixFQUF2Qjs7SUFFcUJDLHdCOzs7Ozs7Ozs7OzZCQUNWO0FBQUEsbUJBSUgsS0FBS0MsS0FKRjtBQUFBLFVBRUxDLEtBRkssVUFFTEEsS0FGSztBQUFBLFVBR0xDLEtBSEssVUFHTEEsS0FISzs7O0FBTVAsVUFBTUMsUUFBUTtBQUNaQyxjQUFNSCxLQURNO0FBRVpJLGVBQU8sRUFBRVIsU0FBUyxPQUFYO0FBRkssT0FBZDs7QUFLQSxVQUFNUyx3Q0FDRFYsZ0JBREMsRUFFRCxxQkFBT0UsaUJBQWlCSSxLQUF4QixDQUZDLENBQU47O0FBS0EsYUFDRTtBQUFBO0FBQUE7QUFDRSw0QkFBZSwwQkFEakI7QUFFRSxpQkFBT0k7QUFGVDtBQUlFO0FBQUE7QUFBQSxtQ0FBSyxTQUFRLFdBQWIsSUFBNkJILEtBQTdCO0FBQW9DLGtEQUFNLEdBQUUsK0xBQVI7QUFBcEM7QUFKRixPQURGO0FBUUQ7OztFQXpCbUQsZ0JBQU1JLFM7O2tCQUF2Q1Isd0I7OztBQTRCckJBLHlCQUF5QlMsV0FBekIsR0FBdUMsMEJBQXZDOztBQUVBVCx5QkFBeUJVLFNBQXpCLEdBQXFDO0FBQ25DUixTQUFPLGlCQUFVUyxNQURrQjtBQUVuQ1IsU0FBTyxpQkFBVVM7QUFGa0IsQ0FBckM7O0FBS0FaLHlCQUF5QmEsWUFBekIsR0FBd0M7QUFDdENYLFNBQU8sT0FEK0I7QUFFdENDLFNBQU87QUFGK0IsQ0FBeEM7Ozs7Ozs7O2dDQXpDTU4sZ0I7O2dDQUlBRSxjOztnQ0FFZUMsd0IiLCJmaWxlIjoiTm90aWZpY2F0aW9uU29saWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHJvcFR5cGVzIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBzcXVhcmUgfSBmcm9tICcuLi9zdHlsZXMvaGVscGVycyc7XG5cbmNvbnN0IElDT05fQkFTRV9TVFlMRVMgPSB7XG4gIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxufTtcblxuY29uc3QgSUNPTl9CQVNFX1NJWkUgPSAxMztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHhsSWNvbk5vdGlmaWNhdGlvblNvbGlkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGNvbG9yLFxuICAgICAgc2NhbGUsXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBhdHRycyA9IHtcbiAgICAgIGZpbGw6IGNvbG9yLFxuICAgICAgc3R5bGU6IHsgZGlzcGxheTogJ2Jsb2NrJyB9LFxuICAgIH07XG5cbiAgICBjb25zdCBpY29uU3R5bGVzID0ge1xuICAgICAgLi4uSUNPTl9CQVNFX1NUWUxFUyxcbiAgICAgIC4uLnNxdWFyZShJQ09OX0JBU0VfU0laRSAqIHNjYWxlKSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxpXG4gICAgICAgIGRhdGEtY29tcG9uZW50PVwiVHhsSWNvbk5vdGlmaWNhdGlvblNvbGlkXCJcbiAgICAgICAgc3R5bGU9e2ljb25TdHlsZXN9XG4gICAgICA+XG4gICAgICAgIDxzdmcgdmlld0JveD1cIjAgMCAxMyAxM1wiIHsuLi5hdHRyc30+PHBhdGggZD1cIk0xMiAxMGMtLjYgMC0xLS40LTEtMVY1Yy0uMi0xLjctMS40LTMuMi0zLTMuN0M3LjkuNiA3LjIgMCA2LjUgMFM1LjEuNiA1IDEuM2MtMS42LjUtMi44IDItMyAzLjd2NGMwIC42LS40IDEtMSAxcy0xIC40LTEgMSAuNCAxIDEgMWgzLjhjLjMuNiAxIDEgMS43IDFzMS40LS40IDEuNy0xSDEyYy42IDAgMS0uNCAxLTFzLS40LTEtMS0xelwiLz48L3N2Zz5cbiAgICAgIDwvaT5cbiAgICApO1xuICB9XG59XG5cblR4bEljb25Ob3RpZmljYXRpb25Tb2xpZC5kaXNwbGF5TmFtZSA9ICdUeGxJY29uTm90aWZpY2F0aW9uU29saWQnO1xuXG5UeGxJY29uTm90aWZpY2F0aW9uU29saWQucHJvcFR5cGVzID0ge1xuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2NhbGU6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5UeGxJY29uTm90aWZpY2F0aW9uU29saWQuZGVmYXVsdFByb3BzID0ge1xuICBjb2xvcjogJ2JsYWNrJyxcbiAgc2NhbGU6IDEsXG59O1xuIl19