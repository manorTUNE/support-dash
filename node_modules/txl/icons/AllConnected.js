'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ICON_BASE_STYLES = {
  display: 'inline-block'
};

var ICON_BASE_SIZE = 13;

var TxlIconAllConnected = function (_React$Component) {
  (0, _inherits3.default)(TxlIconAllConnected, _React$Component);

  function TxlIconAllConnected() {
    (0, _classCallCheck3.default)(this, TxlIconAllConnected);
    return (0, _possibleConstructorReturn3.default)(this, (TxlIconAllConnected.__proto__ || (0, _getPrototypeOf2.default)(TxlIconAllConnected)).apply(this, arguments));
  }

  (0, _createClass3.default)(TxlIconAllConnected, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          scale = _props.scale;


      var attrs = {
        fill: color,
        style: { display: 'block' }
      };

      var iconStyles = (0, _extends3.default)({}, ICON_BASE_STYLES, (0, _helpers.square)(ICON_BASE_SIZE * scale));

      return _react2.default.createElement(
        'i',
        {
          'data-component': 'TxlIconAllConnected',
          style: iconStyles
        },
        _react2.default.createElement(
          'svg',
          (0, _extends3.default)({ viewBox: '0 0 13 13' }, attrs),
          _react2.default.createElement('path', { d: 'M11 .1c-1.1 0-2 .9-2 2-.1.3 0 .6.1.9L6.4 5.2 3.9 2.9c.1-.2.2-.5.2-.9 0-1.1-.9-2-2-2C.9 0 0 .9 0 2s.9 2 2 2c.4 0 .8-.1 1.1-.3v.1L6 6.2V9c-.8.3-1.6 1-1.6 1.9 0 1.1.9 2 2 2s2-.9 2-2C8.5 10 7.9 9.3 7 9V6.2l2.8-2.3c.3.2.7.3 1.1.3 1.1 0 2-.9 2-2C13 1 12.1.1 11 .1zm-9 3c-.5 0-1-.5-1-1.1 0-.5.5-1 1-1 .6 0 1.1.5 1.1 1 0 .6-.5 1.1-1.1 1.1zm5.6 7.8c0 .6-.5 1.1-1.1 1.1s-1.1-.5-1.1-1.1c0-.5.4-1 .8-1.1h.6c.4.2.8.6.8 1.1zM11 3.3c-.6 0-1.1-.5-1.1-1.1-.1-.7.4-1.2 1.1-1.2.6 0 1.1.5 1.1 1.1 0 .7-.5 1.2-1.1 1.2z' })
        )
      );
    }
  }]);
  return TxlIconAllConnected;
}(_react2.default.Component);

exports.default = TxlIconAllConnected;


TxlIconAllConnected.displayName = 'TxlIconAllConnected';

TxlIconAllConnected.propTypes = {
  color: _react.PropTypes.string,
  scale: _react.PropTypes.number
};

TxlIconAllConnected.defaultProps = {
  color: 'black',
  scale: 1
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLES, 'ICON_BASE_STYLES', 'src/icons/AllConnected.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_SIZE, 'ICON_BASE_SIZE', 'src/icons/AllConnected.jsx');

  __REACT_HOT_LOADER__.register(TxlIconAllConnected, 'TxlIconAllConnected', 'src/icons/AllConnected.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29ucy9BbGxDb25uZWN0ZWQuanN4Il0sIm5hbWVzIjpbIklDT05fQkFTRV9TVFlMRVMiLCJkaXNwbGF5IiwiSUNPTl9CQVNFX1NJWkUiLCJUeGxJY29uQWxsQ29ubmVjdGVkIiwicHJvcHMiLCJjb2xvciIsInNjYWxlIiwiYXR0cnMiLCJmaWxsIiwic3R5bGUiLCJpY29uU3R5bGVzIiwiQ29tcG9uZW50IiwiZGlzcGxheU5hbWUiLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJudW1iZXIiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUVBOzs7O0FBRUEsSUFBTUEsbUJBQW1CO0FBQ3ZCQyxXQUFTO0FBRGMsQ0FBekI7O0FBSUEsSUFBTUMsaUJBQWlCLEVBQXZCOztJQUVxQkMsbUI7Ozs7Ozs7Ozs7NkJBQ1Y7QUFBQSxtQkFJSCxLQUFLQyxLQUpGO0FBQUEsVUFFTEMsS0FGSyxVQUVMQSxLQUZLO0FBQUEsVUFHTEMsS0FISyxVQUdMQSxLQUhLOzs7QUFNUCxVQUFNQyxRQUFRO0FBQ1pDLGNBQU1ILEtBRE07QUFFWkksZUFBTyxFQUFFUixTQUFTLE9BQVg7QUFGSyxPQUFkOztBQUtBLFVBQU1TLHdDQUNEVixnQkFEQyxFQUVELHFCQUFPRSxpQkFBaUJJLEtBQXhCLENBRkMsQ0FBTjs7QUFLQSxhQUNFO0FBQUE7QUFBQTtBQUNFLDRCQUFlLHFCQURqQjtBQUVFLGlCQUFPSTtBQUZUO0FBSUU7QUFBQTtBQUFBLG1DQUFLLFNBQVEsV0FBYixJQUE2QkgsS0FBN0I7QUFBb0Msa0RBQU0sR0FBRSxtZkFBUjtBQUFwQztBQUpGLE9BREY7QUFRRDs7O0VBekI4QyxnQkFBTUksUzs7a0JBQWxDUixtQjs7O0FBNEJyQkEsb0JBQW9CUyxXQUFwQixHQUFrQyxxQkFBbEM7O0FBRUFULG9CQUFvQlUsU0FBcEIsR0FBZ0M7QUFDOUJSLFNBQU8saUJBQVVTLE1BRGE7QUFFOUJSLFNBQU8saUJBQVVTO0FBRmEsQ0FBaEM7O0FBS0FaLG9CQUFvQmEsWUFBcEIsR0FBbUM7QUFDakNYLFNBQU8sT0FEMEI7QUFFakNDLFNBQU87QUFGMEIsQ0FBbkM7Ozs7Ozs7O2dDQXpDTU4sZ0I7O2dDQUlBRSxjOztnQ0FFZUMsbUIiLCJmaWxlIjoiQWxsQ29ubmVjdGVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgc3F1YXJlIH0gZnJvbSAnLi4vc3R5bGVzL2hlbHBlcnMnO1xuXG5jb25zdCBJQ09OX0JBU0VfU1RZTEVTID0ge1xuICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbn07XG5cbmNvbnN0IElDT05fQkFTRV9TSVpFID0gMTM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR4bEljb25BbGxDb25uZWN0ZWQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY29sb3IsXG4gICAgICBzY2FsZSxcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IGF0dHJzID0ge1xuICAgICAgZmlsbDogY29sb3IsXG4gICAgICBzdHlsZTogeyBkaXNwbGF5OiAnYmxvY2snIH0sXG4gICAgfTtcblxuICAgIGNvbnN0IGljb25TdHlsZXMgPSB7XG4gICAgICAuLi5JQ09OX0JBU0VfU1RZTEVTLFxuICAgICAgLi4uc3F1YXJlKElDT05fQkFTRV9TSVpFICogc2NhbGUpLFxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGlcbiAgICAgICAgZGF0YS1jb21wb25lbnQ9XCJUeGxJY29uQWxsQ29ubmVjdGVkXCJcbiAgICAgICAgc3R5bGU9e2ljb25TdHlsZXN9XG4gICAgICA+XG4gICAgICAgIDxzdmcgdmlld0JveD1cIjAgMCAxMyAxM1wiIHsuLi5hdHRyc30+PHBhdGggZD1cIk0xMSAuMWMtMS4xIDAtMiAuOS0yIDItLjEuMyAwIC42LjEuOUw2LjQgNS4yIDMuOSAyLjljLjEtLjIuMi0uNS4yLS45IDAtMS4xLS45LTItMi0yQy45IDAgMCAuOSAwIDJzLjkgMiAyIDJjLjQgMCAuOC0uMSAxLjEtLjN2LjFMNiA2LjJWOWMtLjguMy0xLjYgMS0xLjYgMS45IDAgMS4xLjkgMiAyIDJzMi0uOSAyLTJDOC41IDEwIDcuOSA5LjMgNyA5VjYuMmwyLjgtMi4zYy4zLjIuNy4zIDEuMS4zIDEuMSAwIDItLjkgMi0yQzEzIDEgMTIuMS4xIDExIC4xem0tOSAzYy0uNSAwLTEtLjUtMS0xLjEgMC0uNS41LTEgMS0xIC42IDAgMS4xLjUgMS4xIDEgMCAuNi0uNSAxLjEtMS4xIDEuMXptNS42IDcuOGMwIC42LS41IDEuMS0xLjEgMS4xcy0xLjEtLjUtMS4xLTEuMWMwLS41LjQtMSAuOC0xLjFoLjZjLjQuMi44LjYuOCAxLjF6TTExIDMuM2MtLjYgMC0xLjEtLjUtMS4xLTEuMS0uMS0uNy40LTEuMiAxLjEtMS4yLjYgMCAxLjEuNSAxLjEgMS4xIDAgLjctLjUgMS4yLTEuMSAxLjJ6XCIvPjwvc3ZnPlxuICAgICAgPC9pPlxuICAgICk7XG4gIH1cbn1cblxuVHhsSWNvbkFsbENvbm5lY3RlZC5kaXNwbGF5TmFtZSA9ICdUeGxJY29uQWxsQ29ubmVjdGVkJztcblxuVHhsSWNvbkFsbENvbm5lY3RlZC5wcm9wVHlwZXMgPSB7XG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzY2FsZTogUHJvcFR5cGVzLm51bWJlcixcbn07XG5cblR4bEljb25BbGxDb25uZWN0ZWQuZGVmYXVsdFByb3BzID0ge1xuICBjb2xvcjogJ2JsYWNrJyxcbiAgc2NhbGU6IDEsXG59O1xuIl19