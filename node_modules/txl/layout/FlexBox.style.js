'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ITEM_PROP_TYPES = exports.ITEM_DEFAULT_PROPS = exports.getItemStyle = exports.getContainerStyle = exports.CONTAINER_PROP_TYPES = exports.CONTAINER_DEFAULT_PROPS = undefined;

var _react = require('react');

// start of flex style enum
var FLEX_START = 'flex-start'; /**
                                * FlexBox.style contains various resuable style generation for flex-specific style implementation.
                                * Since each browser interprets flex style differently, it is probably good idea to
                                * have single point of flex style generation.
                                *
                                * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/
                                */

var FLEX_END = 'flex-end';
var CENTER = 'center';
var AUTO = 'auto';
var BASELINE = 'baseline';
var STRETCH = 'stretch';
var SPACE_BETWEEN = 'space-between';
var SPACE_AROUND = 'space-around';
var NOWRAP = 'nowrap';
var WRAP = 'wrap';
var WRAP_REVERSE = 'wrap-reverse';
var ROW = 'row';
var ROW_REVERSE = 'row-reverse';
var COLUMN = 'column';
var COLUMN_REVERSE = 'column-reverse';
// end of flex style enums

/**
 * returns flex-container specific style object
 * As of now, there isn't much thing to add.
 *
 * @param  {FlexContainerStyle} style   FlexContainerStyle style object which
 *                                      contains flex-container specific properties.
 * @return {FlexContainerStyle}         New FlexContainerStyle with flex display property
 */
function getContainerStyle(style) {
  var flexWrap = style.flexWrap,
      flexDirection = style.flexDirection,
      justifyContent = style.justifyContent,
      alignItems = style.alignItems,
      alignContent = style.alignContent;


  return {
    alignContent: alignContent,
    alignItems: alignItems,
    display: 'flex',
    flexDirection: flexDirection,
    flexWrap: flexWrap,
    justifyContent: justifyContent
  };
}

/**
 * returns flex-item specific style object.
 * This function reduces flexGrow, flexShirnk, and flexBasis into single "flex" property. IE does
 * not know how to inteprete above properties, correctly.
 *
 * returned object can be used for IE, too.
 * @param  {FlexItemProps} style  FlexItemStyle object
 * @return {FlexItemStyle}       style
 */
function getItemStyle(style) {
  return {
    alignSelf: style.alignSelf,
    flex: style.flexGrow + ' ' + style.flexShrink + ' ' + style.flexBasis,
    order: style.order
  };
}

var ALIGN_CONTENT_TYPE = _react.PropTypes.oneOf([FLEX_START, FLEX_END, CENTER, SPACE_BETWEEN, SPACE_AROUND, STRETCH]);

var ALIGN_ITEMS_TYPE = _react.PropTypes.oneOf([FLEX_START, FLEX_END, CENTER, BASELINE, STRETCH]);

var FLEX_DIRECTION_TYPE = _react.PropTypes.oneOf([ROW, ROW_REVERSE, COLUMN, COLUMN_REVERSE]);

var FLEX_WRAP_TYPE = _react.PropTypes.oneOf([NOWRAP, WRAP, WRAP_REVERSE]);

var JUSTIFY_CONTENT_TYPE = _react.PropTypes.oneOf([FLEX_START, FLEX_END, CENTER, SPACE_BETWEEN, SPACE_AROUND]);

var ALIGN_SELF_TYPE = _react.PropTypes.oneOf([AUTO, FLEX_START, FLEX_END, CENTER, BASELINE]);

/**
 * type FlexContainerPropTypes
 *
 * @type {Object}
 */
var CONTAINER_PROP_TYPES = {
  alignContent: ALIGN_CONTENT_TYPE,
  alignItems: ALIGN_ITEMS_TYPE,
  children: _react.PropTypes.node,
  flexDirection: FLEX_DIRECTION_TYPE,
  flexWrap: FLEX_WRAP_TYPE,
  justifyContent: JUSTIFY_CONTENT_TYPE,
  style: _react.PropTypes.object,
  tagName: _react.PropTypes.string
};

/**
 * type FlexItemPropTypes
 *
 * @type {Object}
 */
var ITEM_PROP_TYPES = {
  alignSelf: ALIGN_SELF_TYPE,
  children: _react.PropTypes.node,
  flexBasis: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  flexGrow: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  flexShrink: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  order: _react.PropTypes.number,
  style: _react.PropTypes.object,
  tagName: _react.PropTypes.string
};

var CONTAINER_DEFAULT_PROPS = {
  alignContent: STRETCH,
  alignItems: FLEX_START,
  flexDirection: ROW,
  flexWrap: NOWRAP,
  justifyContent: FLEX_START,
  tagName: 'div'
};

var ITEM_DEFAULT_PROPS = {
  flexBasis: 'auto',
  flexGrow: 0,
  flexShrink: 0,
  tagName: 'div'
};

exports.CONTAINER_DEFAULT_PROPS = CONTAINER_DEFAULT_PROPS;
exports.CONTAINER_PROP_TYPES = CONTAINER_PROP_TYPES;
exports.getContainerStyle = getContainerStyle;
exports.getItemStyle = getItemStyle;
exports.ITEM_DEFAULT_PROPS = ITEM_DEFAULT_PROPS;
exports.ITEM_PROP_TYPES = ITEM_PROP_TYPES;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(FLEX_START, 'FLEX_START', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(FLEX_END, 'FLEX_END', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(CENTER, 'CENTER', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(AUTO, 'AUTO', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(BASELINE, 'BASELINE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(STRETCH, 'STRETCH', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(SPACE_BETWEEN, 'SPACE_BETWEEN', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(SPACE_AROUND, 'SPACE_AROUND', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(NOWRAP, 'NOWRAP', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(WRAP, 'WRAP', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(WRAP_REVERSE, 'WRAP_REVERSE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(ROW, 'ROW', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(ROW_REVERSE, 'ROW_REVERSE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(COLUMN, 'COLUMN', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(COLUMN_REVERSE, 'COLUMN_REVERSE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(getContainerStyle, 'getContainerStyle', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(getItemStyle, 'getItemStyle', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(ALIGN_CONTENT_TYPE, 'ALIGN_CONTENT_TYPE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(ALIGN_ITEMS_TYPE, 'ALIGN_ITEMS_TYPE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(FLEX_DIRECTION_TYPE, 'FLEX_DIRECTION_TYPE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(FLEX_WRAP_TYPE, 'FLEX_WRAP_TYPE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(JUSTIFY_CONTENT_TYPE, 'JUSTIFY_CONTENT_TYPE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(ALIGN_SELF_TYPE, 'ALIGN_SELF_TYPE', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(CONTAINER_PROP_TYPES, 'CONTAINER_PROP_TYPES', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(ITEM_PROP_TYPES, 'ITEM_PROP_TYPES', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(CONTAINER_DEFAULT_PROPS, 'CONTAINER_DEFAULT_PROPS', 'src/layout/FlexBox.style.js');

  __REACT_HOT_LOADER__.register(ITEM_DEFAULT_PROPS, 'ITEM_DEFAULT_PROPS', 'src/layout/FlexBox.style.js');
}();

;
//# sourceMappingURL=data:application/json;base64,