'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFlexItemStyle = exports.getFlexContainerStyle = exports.FLEX_ITEM_TYPES = exports.FLEX_ITEM_DEFAULT_PROPS = exports.FLEX_CONTAINER_TYPES = exports.FLEX_CONTAINER_DEFAULT_PROPS = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FLEX_START = 'flex-start';
var FLEX_END = 'flex-end';
var CENTER = 'center';
var BASE_LINE = 'baseline';
var STRETCH = 'stretch';
var SPACE_BETWEEN = 'space-between';
var SPACE_AROUND = 'space-around';
var NOWRAP = 'nowrap';
var WRAP = 'wrap';
var WRAP_REVERSE = 'wrap-reverse';
var ROW = 'row';
var ROW_REVERSE = 'row-reverse';
var COLUMN = 'column';
var COLUMN_REVERSE = 'column-reverse';

// PropTypes for FlexContainer
var AlignContentType = _react.PropTypes.oneOf([FLEX_START, FLEX_END, CENTER, SPACE_BETWEEN, SPACE_AROUND, STRETCH]);

var AlignItemsType = _react.PropTypes.oneOf([FLEX_START, FLEX_END, CENTER, BASE_LINE, STRETCH]);

var FlexDirectionType = _react.PropTypes.oneOf([ROW, ROW_REVERSE, COLUMN, COLUMN_REVERSE]);
var FlexWrapType = _react.PropTypes.oneOf([NOWRAP, WRAP, WRAP_REVERSE]);
var JustifyContentType = _react.PropTypes.oneOf([FLEX_START, FLEX_END, CENTER, SPACE_BETWEEN, SPACE_AROUND]);

function getFlexContainerStyle(props) {
  var inline = props.inline,
      flexWrap = props.flexWrap,
      flexDirection = props.flexDirection,
      justifyContent = props.justifyContent,
      alignItems = props.alignItems,
      alignContent = props.alignContent,
      _props$style = props.style,
      style = _props$style === undefined ? {} : _props$style;


  return (0, _extends3.default)({
    alignContent: alignContent,
    alignItems: alignItems,
    display: inline ? 'inline-flex' : 'flex',
    flexDirection: flexDirection,
    flexWrap: flexWrap,
    justifyContent: justifyContent
  }, style);
}

function getFlexItemStyle(props) {
  var style = props.style || {};
  return (0, _extends3.default)({}, style, {
    flex: props.flexGrow + ' ' + props.flexShrink + ' ' + props.flexBasis
  });
}

var FLEX_CONTAINER_TYPES = {
  alignContent: AlignContentType,
  alignItems: AlignItemsType,
  flexDirection: FlexDirectionType,
  flexWrap: FlexWrapType,
  inline: _react.PropTypes.bool,
  justifyContent: JustifyContentType
};

var FLEX_CONTAINER_DEFAULT_PROPS = {
  alignContent: STRETCH,
  alignItems: FLEX_START,
  flexDirection: ROW,
  flexWrap: NOWRAP,
  justifyContent: FLEX_START
};

var FLEX_ITEM_TYPES = {
  flexBasis: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  flexGrow: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  flexShrink: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
};

var FLEX_ITEM_DEFAULT_PROPS = {
  flexBasis: 'auto',
  flexGrow: 0,
  flexShrink: 0
};

exports.FLEX_CONTAINER_DEFAULT_PROPS = FLEX_CONTAINER_DEFAULT_PROPS;
exports.FLEX_CONTAINER_TYPES = FLEX_CONTAINER_TYPES;
exports.FLEX_ITEM_DEFAULT_PROPS = FLEX_ITEM_DEFAULT_PROPS;
exports.FLEX_ITEM_TYPES = FLEX_ITEM_TYPES;
exports.getFlexContainerStyle = getFlexContainerStyle;
exports.getFlexItemStyle = getFlexItemStyle;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(FLEX_START, 'FLEX_START', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(FLEX_END, 'FLEX_END', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(CENTER, 'CENTER', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(BASE_LINE, 'BASE_LINE', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(STRETCH, 'STRETCH', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(SPACE_BETWEEN, 'SPACE_BETWEEN', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(SPACE_AROUND, 'SPACE_AROUND', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(NOWRAP, 'NOWRAP', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(WRAP, 'WRAP', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(WRAP_REVERSE, 'WRAP_REVERSE', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(ROW, 'ROW', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(ROW_REVERSE, 'ROW_REVERSE', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(COLUMN, 'COLUMN', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(COLUMN_REVERSE, 'COLUMN_REVERSE', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(AlignContentType, 'AlignContentType', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(AlignItemsType, 'AlignItemsType', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(FlexDirectionType, 'FlexDirectionType', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(FlexWrapType, 'FlexWrapType', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(JustifyContentType, 'JustifyContentType', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(getFlexContainerStyle, 'getFlexContainerStyle', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(getFlexItemStyle, 'getFlexItemStyle', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(FLEX_CONTAINER_TYPES, 'FLEX_CONTAINER_TYPES', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(FLEX_CONTAINER_DEFAULT_PROPS, 'FLEX_CONTAINER_DEFAULT_PROPS', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(FLEX_ITEM_TYPES, 'FLEX_ITEM_TYPES', 'src/layout/FlexPropTypes.js');

  __REACT_HOT_LOADER__.register(FLEX_ITEM_DEFAULT_PROPS, 'FLEX_ITEM_DEFAULT_PROPS', 'src/layout/FlexPropTypes.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sYXlvdXQvRmxleFByb3BUeXBlcy5qcyJdLCJuYW1lcyI6WyJGTEVYX1NUQVJUIiwiRkxFWF9FTkQiLCJDRU5URVIiLCJCQVNFX0xJTkUiLCJTVFJFVENIIiwiU1BBQ0VfQkVUV0VFTiIsIlNQQUNFX0FST1VORCIsIk5PV1JBUCIsIldSQVAiLCJXUkFQX1JFVkVSU0UiLCJST1ciLCJST1dfUkVWRVJTRSIsIkNPTFVNTiIsIkNPTFVNTl9SRVZFUlNFIiwiQWxpZ25Db250ZW50VHlwZSIsIm9uZU9mIiwiQWxpZ25JdGVtc1R5cGUiLCJGbGV4RGlyZWN0aW9uVHlwZSIsIkZsZXhXcmFwVHlwZSIsIkp1c3RpZnlDb250ZW50VHlwZSIsImdldEZsZXhDb250YWluZXJTdHlsZSIsInByb3BzIiwiaW5saW5lIiwiZmxleFdyYXAiLCJmbGV4RGlyZWN0aW9uIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwiYWxpZ25Db250ZW50Iiwic3R5bGUiLCJkaXNwbGF5IiwiZ2V0RmxleEl0ZW1TdHlsZSIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhTaHJpbmsiLCJmbGV4QmFzaXMiLCJGTEVYX0NPTlRBSU5FUl9UWVBFUyIsImJvb2wiLCJGTEVYX0NPTlRBSU5FUl9ERUZBVUxUX1BST1BTIiwiRkxFWF9JVEVNX1RZUEVTIiwib25lT2ZUeXBlIiwic3RyaW5nIiwibnVtYmVyIiwiRkxFWF9JVEVNX0RFRkFVTFRfUFJPUFMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxhQUFhLFlBQW5CO0FBQ0EsSUFBTUMsV0FBVyxVQUFqQjtBQUNBLElBQU1DLFNBQVMsUUFBZjtBQUNBLElBQU1DLFlBQVksVUFBbEI7QUFDQSxJQUFNQyxVQUFVLFNBQWhCO0FBQ0EsSUFBTUMsZ0JBQWdCLGVBQXRCO0FBQ0EsSUFBTUMsZUFBZSxjQUFyQjtBQUNBLElBQU1DLFNBQVMsUUFBZjtBQUNBLElBQU1DLE9BQU8sTUFBYjtBQUNBLElBQU1D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O0FBSFUsQ0FBeEI7O0FBTUEsSUFBTUMsMEJBQTBCO0FBQzlCUixhQUFXLE1BRG1CO0FBRTlCRixZQUFVLENBRm9CO0FBRzlCQyxjQUFZO0FBSGtCLENBQWhDOztRQU9FSSw0QixHQUFBQSw0QjtRQUNBRixvQixHQUFBQSxvQjtRQUNBTyx1QixHQUFBQSx1QjtRQUNBSixlLEdBQUFBLGU7UUFDQWxCLHFCLEdBQUFBLHFCO1FBQ0FVLGdCLEdBQUFBLGdCOzs7Ozs7OztnQ0E3R0k5QixVOztnQ0FDQUMsUTs7Z0NBQ0FDLE07O2dDQUNBQyxTOztnQ0FDQUMsTzs7Z0NBQ0FDLGE7O2dDQUNBQyxZOztnQ0FDQUMsTTs7Z0NBQ0FDLEk7O2dDQUNBQyxZOztnQ0FDQUMsRzs7Z0NBQ0FDLFc7O2dDQUNBQyxNOztnQ0FDQUMsYzs7Z0NBR0FDLGdCOztnQ0FTQUUsYzs7Z0NBUUFDLGlCOztnQ0FDQUMsWTs7Z0NBQ0FDLGtCOztnQ0FTR0MscUI7O2dDQXNCQVUsZ0I7O2dDQVFISyxvQjs7Z0NBU0FFLDRCOztnQ0FRQUMsZTs7Z0NBTUFJLHVCIiwiZmlsZSI6IkZsZXhQcm9wVHlwZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IEZMRVhfU1RBUlQgPSAnZmxleC1zdGFydCc7XG5jb25zdCBGTEVYX0VORCA9ICdmbGV4LWVuZCc7XG5jb25zdCBDRU5URVIgPSAnY2VudGVyJztcbmNvbnN0IEJBU0VfTElORSA9ICdiYXNlbGluZSc7XG5jb25zdCBTVFJFVENIID0gJ3N0cmV0Y2gnO1xuY29uc3QgU1BBQ0VfQkVUV0VFTiA9ICdzcGFjZS1iZXR3ZWVuJztcbmNvbnN0IFNQQUNFX0FST1VORCA9ICdzcGFjZS1hcm91bmQnO1xuY29uc3QgTk9XUkFQID0gJ25vd3JhcCc7XG5jb25zdCBXUkFQID0gJ3dyYXAnO1xuY29uc3QgV1JBUF9SRVZFUlNFID0gJ3dyYXAtcmV2ZXJzZSc7XG5jb25zdCBST1cgPSAncm93JztcbmNvbnN0IFJPV19SRVZFUlNFID0gJ3Jvdy1yZXZlcnNlJztcbmNvbnN0IENPTFVNTiA9ICdjb2x1bW4nO1xuY29uc3QgQ09MVU1OX1JFVkVSU0UgPSAnY29sdW1uLXJldmVyc2UnO1xuXG4vLyBQcm9wVHlwZXMgZm9yIEZsZXhDb250YWluZXJcbmNvbnN0IEFsaWduQ29udGVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1xuICBGTEVYX1NUQVJULFxuICBGTEVYX0VORCxcbiAgQ0VOVEVSLFxuICBTUEFDRV9CRVRXRUVOLFxuICBTUEFDRV9BUk9VTkQsXG4gIFNUUkVUQ0gsXG5dKTtcblxuY29uc3QgQWxpZ25JdGVtc1R5cGUgPSBQcm9wVHlwZXMub25lT2YoW1xuICBGTEVYX1NUQVJULFxuICBGTEVYX0VORCxcbiAgQ0VOVEVSLFxuICBCQVNFX0xJTkUsXG4gIFNUUkVUQ0gsXG5dKTtcblxuY29uc3QgRmxleERpcmVjdGlvblR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1JPVywgUk9XX1JFVkVSU0UsIENPTFVNTiwgQ09MVU1OX1JFVkVSU0VdKTtcbmNvbnN0IEZsZXhXcmFwVHlwZSA9IFByb3BUeXBlcy5vbmVPZihbTk9XUkFQLCBXUkFQLCBXUkFQX1JFVkVSU0VdKTtcbmNvbnN0IEp1c3RpZnlDb250ZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXG4gIEZMRVhfU1RBUlQsXG4gIEZMRVhfRU5ELFxuICBDRU5URVIsXG4gIFNQQUNFX0JFVFdFRU4sXG4gIFNQQUNFX0FST1VORCxcbl0pO1xuXG5cbmZ1bmN0aW9uIGdldEZsZXhDb250YWluZXJTdHlsZShwcm9wcykge1xuICBjb25zdCB7XG4gICAgaW5saW5lLFxuICAgIGZsZXhXcmFwLFxuICAgIGZsZXhEaXJlY3Rpb24sXG4gICAganVzdGlmeUNvbnRlbnQsXG4gICAgYWxpZ25JdGVtcyxcbiAgICBhbGlnbkNvbnRlbnQsXG4gICAgc3R5bGUgPSB7fSxcbiAgfSA9IHByb3BzO1xuXG4gIHJldHVybiB7XG4gICAgYWxpZ25Db250ZW50LFxuICAgIGFsaWduSXRlbXMsXG4gICAgZGlzcGxheTogaW5saW5lID8gJ2lubGluZS1mbGV4JyA6ICdmbGV4JyxcbiAgICBmbGV4RGlyZWN0aW9uLFxuICAgIGZsZXhXcmFwLFxuICAgIGp1c3RpZnlDb250ZW50LFxuICAgIC4uLnN0eWxlLFxuICB9O1xufVxuXG5mdW5jdGlvbiBnZXRGbGV4SXRlbVN0eWxlKHByb3BzKSB7XG4gIGNvbnN0IHN0eWxlID0gcHJvcHMuc3R5bGUgfHwge307XG4gIHJldHVybiB7XG4gICAgLi4uc3R5bGUsXG4gICAgZmxleDogYCR7cHJvcHMuZmxleEdyb3d9ICR7cHJvcHMuZmxleFNocmlua30gJHtwcm9wcy5mbGV4QmFzaXN9YCxcbiAgfTtcbn1cblxuY29uc3QgRkxFWF9DT05UQUlORVJfVFlQRVMgPSB7XG4gIGFsaWduQ29udGVudDogQWxpZ25Db250ZW50VHlwZSxcbiAgYWxpZ25JdGVtczogQWxpZ25JdGVtc1R5cGUsXG4gIGZsZXhEaXJlY3Rpb246IEZsZXhEaXJlY3Rpb25UeXBlLFxuICBmbGV4V3JhcDogRmxleFdyYXBUeXBlLFxuICBpbmxpbmU6IFByb3BUeXBlcy5ib29sLFxuICBqdXN0aWZ5Q29udGVudDogSnVzdGlmeUNvbnRlbnRUeXBlLFxufTtcblxuY29uc3QgRkxFWF9DT05UQUlORVJfREVGQVVMVF9QUk9QUyA9IHtcbiAgYWxpZ25Db250ZW50OiBTVFJFVENILFxuICBhbGlnbkl0ZW1zOiBGTEVYX1NUQVJULFxuICBmbGV4RGlyZWN0aW9uOiBST1csXG4gIGZsZXhXcmFwOiBOT1dSQVAsXG4gIGp1c3RpZnlDb250ZW50OiBGTEVYX1NUQVJULFxufTtcblxuY29uc3QgRkxFWF9JVEVNX1RZUEVTID0ge1xuICBmbGV4QmFzaXM6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbiAgZmxleEdyb3c6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbiAgZmxleFNocmluazogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLFxufTtcblxuY29uc3QgRkxFWF9JVEVNX0RFRkFVTFRfUFJPUFMgPSB7XG4gIGZsZXhCYXNpczogJ2F1dG8nLFxuICBmbGV4R3JvdzogMCxcbiAgZmxleFNocmluazogMCxcbn07XG5cbmV4cG9ydCB7XG4gIEZMRVhfQ09OVEFJTkVSX0RFRkFVTFRfUFJPUFMsXG4gIEZMRVhfQ09OVEFJTkVSX1RZUEVTLFxuICBGTEVYX0lURU1fREVGQVVMVF9QUk9QUyxcbiAgRkxFWF9JVEVNX1RZUEVTLFxuICBnZXRGbGV4Q29udGFpbmVyU3R5bGUsXG4gIGdldEZsZXhJdGVtU3R5bGUsXG59O1xuIl19