'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Base = require('../base/Base');

var _DateTimeRangePicker = require('./DateTimeRangePicker.style');

var _TimeZones = require('../constants/_TimeZones');

var _theme = require('../styles/theme');

var _ButtonSelect = require('../dropdowns/ButtonSelect');

var _ButtonSelect2 = _interopRequireDefault(_ButtonSelect);

var _ArrowDown = require('../icons/ArrowDown');

var _ArrowDown2 = _interopRequireDefault(_ArrowDown);

var _ArrowUp = require('../icons/ArrowUp');

var _ArrowUp2 = _interopRequireDefault(_ArrowUp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var TxlTimezonePicker = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlTimezonePicker, _React$Component);

  function TxlTimezonePicker() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, TxlTimezonePicker);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlTimezonePicker.__proto__ || (0, _getPrototypeOf2.default)(TxlTimezonePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = { timezoneSearch: '' }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(TxlTimezonePicker, [{
    key: '_getTimezones',
    value: function _getTimezones() {
      var timezoneSearch = this.state.timezoneSearch;
      var items = this.props.items;
      // extract minutes regexp, like ':00'

      var re = /:\d{2}/;
      var match = items.locale.value.match(re);
      var minuteOffset = void 0;
      if (match) {
        minuteOffset = match[0];
      }
      return _TimeZones.TIME_ZONE_LIST_ITEMS.reduce(function (prev, tz) {
        // filter out minute offsets that don't match
        if (minuteOffset && tz.value.indexOf(minuteOffset) === -1) {
          return prev;
        }
        var searchTerm = timezoneSearch.toLowerCase();
        var labelCheck = tz.label.toLowerCase().includes(searchTerm);
        var timezoneCheck = tz.timeZone.toLowerCase().includes(searchTerm);
        if (labelCheck || timezoneCheck) {
          return prev.concat(tz);
        }
        return prev;
      }, []);
    }
  }, {
    key: '_toggleTimezone',
    value: function _toggleTimezone() {
      this.props.updateDropdown({ open: !this.props.open });
    }
  }, {
    key: '_handleTimezoneSearch',
    value: function _handleTimezoneSearch(search) {
      this.setState({ timezoneSearch: search.value });
    }
  }, {
    key: '_handleTimezoneSelect',
    value: function _handleTimezoneSelect(tz) {
      var _props = this.props,
          items = _props.items,
          onChange = _props.onChange;

      var newItems = items;
      newItems.locale = tz;
      onChange(newItems);
      this._toggleTimezone();
    }
  }, {
    key: 'renderIcon',
    value: function renderIcon() {
      return this.props.open ? _react2.default.createElement(_ArrowDown2.default, { color: _theme.COLOR_NEUTRAL[400] }) : _react2.default.createElement(_ArrowUp2.default, { color: _theme.COLOR_NEUTRAL[400] });
    }
  }, {
    key: 'render',
    value: function render() {
      var timezoneSearch = this.state.timezoneSearch;
      var _props2 = this.props,
          items = _props2.items,
          open = _props2.open;


      return _react2.default.createElement(
        'div',
        { 'data-component': 'TxlTimezonePicker' },
        _react2.default.createElement(
          'div',
          { style: _DateTimeRangePicker.TIMEZONE_WRAPPER },
          _react2.default.createElement(
            'div',
            { style: _DateTimeRangePicker.TIMEZONE_SELECT },
            _react2.default.createElement(_ButtonSelect2.default, {
              buttonText: items.locale.timeZone,
              dropdownWidth: '350px',
              dropdownAttachmentLocation: 'right',
              items: this._getTimezones(),
              onItemSelect: this._handleTimezoneSelect,
              onSearchChange: this._handleTimezoneSearch,
              open: open,
              searchPlaceholder: 'Search Timezone',
              searchValue: timezoneSearch,
              showSearch: true,
              value: items.locale.value
            })
          ),
          _react2.default.createElement(
            'div',
            {
              style: _DateTimeRangePicker.TIMEZONE,
              onClick: this._toggleTimezone
            },
            items.locale.label,
            _react2.default.createElement(
              'span',
              { style: _DateTimeRangePicker.BUTTON },
              this.renderIcon()
            )
          )
        )
      );
    }
  }]);
  return TxlTimezonePicker;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_getTimezones', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_getTimezones'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_toggleTimezone', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_toggleTimezone'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleTimezoneSearch', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleTimezoneSearch'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleTimezoneSelect', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleTimezoneSelect'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, 'renderIcon', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, 'renderIcon'), _class2.prototype)), _class2)) || _class;

TxlTimezonePicker.propTypes = {
  items: require('react').PropTypes.object.isRequired,
  onChange: require('react').PropTypes.func.isRequired,
  open: require('react').PropTypes.bool,
  updateDropdown: require('react').PropTypes.func.isRequired
};
exports.default = TxlTimezonePicker;


TxlTimezonePicker.defaultProps = {
  items: {},
  onChange: _Base.NOOP,
  updateDropdown: _Base.NOOP
};
;

var _temp2 = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(TxlTimezonePicker, 'TxlTimezonePicker', 'src/_date-time-range-picker/_TimezonePicker.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,