'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CUSTOM_PRESETS = exports.DATE_RANGE_PRESETS = undefined;

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DATE_RANGE_PRESETS = exports.DATE_RANGE_PRESETS = function DATE_RANGE_PRESETS() {
  return [{
    endDate: (0, _moment2.default)().endOf('day'),
    key: 'today',
    label: 'Today',
    startDate: (0, _moment2.default)().startOf('day')
  }, {
    endDate: (0, _moment2.default)().endOf('day').subtract(1, 'day'),
    key: 'yesterday',
    label: 'Yesterday',
    startDate: (0, _moment2.default)().startOf('day').subtract(1, 'day')
  }, {
    endDate: (0, _moment2.default)().endOf('day').subtract(1, 'day'),
    key: 'last7Days',
    label: 'Last 7 days',
    startDate: (0, _moment2.default)().startOf('day').subtract(7, 'day')
  }, {
    endDate: (0, _moment2.default)().subtract(1, 'week').endOf('week'),
    key: 'prevWeek',
    label: 'Previous week (Sun - Sat)',
    startDate: (0, _moment2.default)().subtract(1, 'week').startOf('week')
  }, {
    endDate: (0, _moment2.default)().endOf('day'),
    key: 'monthToDate',
    label: 'Month to date',
    startDate: (0, _moment2.default)().startOf('month')
  }, {
    endDate: (0, _moment2.default)().endOf('day').subtract(1, 'day'),
    key: 'last30Days',
    label: 'Last 30 days',
    startDate: (0, _moment2.default)().startOf('day').subtract(30, 'day')
  }, {
    endDate: (0, _moment2.default)().subtract(1, 'month').endOf('month'),
    key: 'lastMonth',
    label: 'Previous month',
    startDate: (0, _moment2.default)().subtract(1, 'month').startOf('month')
  }, {
    endDate: (0, _moment2.default)().endOf('day'),
    key: 'custom',
    label: 'Custom date range',
    startDate: (0, _moment2.default)().startOf('day')
  }];
};

var CUSTOM_PRESETS = exports.CUSTOM_PRESETS = [{
  endDate: (0, _moment2.default)().endOf('day'),
  key: 'today',
  label: 'Today',
  startDate: (0, _moment2.default)().startOf('day')
}, {
  endDate: (0, _moment2.default)().endOf('day').subtract(1, 'day'),
  key: 'yesterday',
  label: 'Yesterday',
  startDate: (0, _moment2.default)().startOf('day').subtract(1, 'day')
}, {
  endDate: (0, _moment2.default)().endOf('day'),
  key: 'monthToDate',
  label: 'Month to date',
  startDate: (0, _moment2.default)().startOf('month')
}, {
  endDate: (0, _moment2.default)().endOf('day').subtract(1, 'day'),
  key: 'last30Days',
  label: 'Last 30 days',
  startDate: (0, _moment2.default)().startOf('day').subtract(30, 'day')
}, {
  endDate: (0, _moment2.default)().subtract(1, 'month').endOf('month'),
  key: 'lastMonth',
  label: 'Previous month',
  startDate: (0, _moment2.default)().subtract(1, 'month').startOf('month')
}, {
  endDate: (0, _moment2.default)().endOf('day'),
  key: 'custom',
  label: 'Custom date range',
  startDate: (0, _moment2.default)().startOf('day')
}];
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DATE_RANGE_PRESETS, 'DATE_RANGE_PRESETS', 'src/_date-time-range-picker/_DateTimeConstants.js');

  __REACT_HOT_LOADER__.register(CUSTOM_PRESETS, 'CUSTOM_PRESETS', 'src/_date-time-range-picker/_DateTimeConstants.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fZGF0ZS10aW1lLXJhbmdlLXBpY2tlci9fRGF0ZVRpbWVDb25zdGFudHMuanMiXSwibmFtZXMiOlsiREFURV9SQU5HRV9QUkVTRVRTIiwiZW5kRGF0ZSIsImVuZE9mIiwia2V5IiwibGFiZWwiLCJzdGFydERhdGUiLCJzdGFydE9mIiwic3VidHJhY3QiLCJDVVNUT01fUFJFU0VUUyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFTyxJQUFNQSxrREFBcUIsU0FBckJBLGtCQUFxQjtBQUFBLFNBQU0sQ0FBQztBQUN2Q0MsYUFBUyx3QkFBU0MsS0FBVCxDQUFlLEtBQWYsQ0FEOEI7QUFFdkNDLFNBQUssT0FGa0M7QUFHdkNDLFdBQU8sT0FIZ0M7QUFJdkNDLGVBQVcsd0JBQVNDLE9BQVQsQ0FBaUIsS0FBakI7QUFKNEIsR0FBRCxFQUtyQztBQUNETCxhQUFTLHdCQUFTQyxLQUFULENBQWUsS0FBZixFQUFzQkssUUFBdEIsQ0FBK0IsQ0FBL0IsRUFBa0MsS0FBbEMsQ0FEUjtBQUVESixTQUFLLFdBRko7QUFHREMsV0FBTyxXQUhOO0FBSURDLGVBQVcsd0JBQVNDLE9BQVQsQ0FBaUIsS0FBakIsRUFBd0JDLFFBQXhCLENBQWlDLENBQWpDLEVBQW9DLEtBQXBDO0FBSlYsR0FMcUMsRUFVckM7QUFDRE4sYUFBUyx3QkFBU0MsS0FBVCxDQUFlLEtBQWYsRUFBc0JLLFFBQXRCLENBQStCLENBQS9CLEVBQWtDLEtBQWxDLENBRFI7QUFFREosU0FBSyxXQUZKO0FBR0RDLFdBQU8sYUFITjtBQUlEQyxlQUFXLHdCQUFTQyxPQUFULENBQWlCLEtBQWpCLEVBQXdCQyxRQUF4QixDQUFpQyxDQUFqQyxFQUFvQyxLQUFwQztBQUpWLEdBVnFDLEVBZXJDO0FBQ0ROLGFBQVMsd0JBQVNNLFFBQVQsQ0FBa0IsQ0FBbEIsRUFBcUIsTUFBckIsRUFBNkJMLEtBQTdCLENBQW1DLE1BQW5DLENBRFI7QUFFREMsU0FBSyxVQUZKO0FBR0RDLFdBQU8sMkJB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LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuXG5leHBvcnQgY29uc3QgREFURV9SQU5HRV9QUkVTRVRTID0gKCkgPT4gW3tcbiAgZW5kRGF0ZTogbW9tZW50KCkuZW5kT2YoJ2RheScpLFxuICBrZXk6ICd0b2RheScsXG4gIGxhYmVsOiAnVG9kYXknLFxuICBzdGFydERhdGU6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLFxufSwge1xuICBlbmREYXRlOiBtb21lbnQoKS5lbmRPZignZGF5Jykuc3VidHJhY3QoMSwgJ2RheScpLFxuICBrZXk6ICd5ZXN0ZXJkYXknLFxuICBsYWJlbDogJ1llc3RlcmRheScsXG4gIHN0YXJ0RGF0ZTogbW9tZW50KCkuc3RhcnRPZignZGF5Jykuc3VidHJhY3QoMSwgJ2RheScpLFxufSwge1xuICBlbmREYXRlOiBtb21lbnQoKS5lbmRPZignZGF5Jykuc3VidHJhY3QoMSwgJ2RheScpLFxuICBrZXk6ICdsYXN0N0RheXMnLFxuICBsYWJlbDogJ0xhc3QgNyBkYXlzJyxcbiAgc3RhcnREYXRlOiBtb21lbnQoKS5zdGFydE9mKCdkYXknKS5zdWJ0cmFjdCg3LCAnZGF5JyksXG59LCB7XG4gIGVuZERhdGU6IG1vbWVudCgpLnN1YnRyYWN0KDEsICd3ZWVrJykuZW5kT2YoJ3dlZWsnKSxcbiAga2V5OiAncHJldldlZWsnLFxuICBsYWJlbDogJ1ByZXZpb3VzIHdlZWsgKFN1biAtIFNhdCknLFxuICBzdGFydERhdGU6IG1vbWVudCgpLnN1YnRyYWN0KDEsICd3ZWVrJykuc3RhcnRPZignd2VlaycpLFxufSwge1xuICBlbmREYXRlOiBtb21lbnQoKS5lbmRPZignZGF5JyksXG4gIGtleTogJ21vbnRoVG9EYXRlJyxcbiAgbGFiZWw6ICdNb250aCB0byBkYXRlJyxcbiAgc3RhcnREYXRlOiBtb21lbnQoKS5zdGFydE9mKCdtb250aCcpLFxufSwge1xuICBlbmREYXRlOiBtb21lbnQoKS5lbmRPZignZGF5Jykuc3VidHJhY3QoMSwgJ2RheScpLFxuICBrZXk6ICdsYXN0MzBEYXlzJyxcbiAgbGFiZWw6ICdMYXN0IDMwIGRheXMnLFxuICBzdGFydERhdGU6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLnN1YnRyYWN0KDMwLCAnZGF5JyksXG59LCB7XG4gIGVuZERhdGU6IG1vbWVudCgpLnN1YnRyYWN0KDEsICdtb250aCcpLmVuZE9mKCdtb250aCcpLFxuICBrZXk6ICdsYXN0TW9udGgnLFxuICBsYWJlbDogJ1ByZXZpb3VzIG1vbnRoJyxcbiAgc3RhcnREYXRlOiBtb21lbnQoKS5zdWJ0cmFjdCgxLCAnbW9udGgnKS5zdGFydE9mKCdtb250aCcpLFxufSwge1xuICBlbmREYXRlOiBtb21lbnQoKS5lbmRPZignZGF5JyksXG4gIGtleTogJ2N1c3RvbScsXG4gIGxhYmVsOiAnQ3VzdG9tIGRhdGUgcmFuZ2UnLFxuICBzdGFydERhdGU6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLFxufV07XG5cbmV4cG9ydCBjb25zdCBDVVNUT01fUFJFU0VUUyA9IFt7XG4gIGVuZERhdGU6IG1vbWVudCgpLmVuZE9mKCdkYXknKSxcbiAga2V5OiAndG9kYXknLFxuICBsYWJlbDogJ1RvZGF5JyxcbiAgc3RhcnREYXRlOiBtb21lbnQoKS5zdGFydE9mKCdkYXknKSxcbn0sIHtcbiAgZW5kRGF0ZTogbW9tZW50KCkuZW5kT2YoJ2RheScpLnN1YnRyYWN0KDEsICdkYXknKSxcbiAga2V5OiAneWVzdGVyZGF5JyxcbiAgbGFiZWw6ICdZZXN0ZXJkYXknLFxuICBzdGFydERhdGU6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLnN1YnRyYWN0KDEsICdkYXknKSxcbn0sIHtcbiAgZW5kRGF0ZTogbW9tZW50KCkuZW5kT2YoJ2RheScpLFxuICBrZXk6ICdtb250aFRvRGF0ZScsXG4gIGxhYmVsOiAnTW9udGggdG8gZGF0ZScsXG4gIHN0YXJ0RGF0ZTogbW9tZW50KCkuc3RhcnRPZignbW9udGgnKSxcbn0sIHtcbiAgZW5kRGF0ZTogbW9tZW50KCkuZW5kT2YoJ2RheScpLnN1YnRyYWN0KDEsICdkYXknKSxcbiAga2V5OiAnbGFzdDMwRGF5cycsXG4gIGxhYmVsOiAnTGFzdCAzMCBkYXlzJyxcbiAgc3RhcnREYXRlOiBtb21lbnQoKS5zdGFydE9mKCdkYXknKS5zdWJ0cmFjdCgzMCwgJ2RheScpLFxufSwge1xuICBlbmREYXRlOiBtb21lbnQoKS5zdWJ0cmFjdCgxLCAnbW9udGgnKS5lbmRPZignbW9udGgnKSxcbiAga2V5OiAnbGFzdE1vbnRoJyxcbiAgbGFiZWw6ICdQcmV2aW91cyBtb250aCcsXG4gIHN0YXJ0RGF0ZTogbW9tZW50KCkuc3VidHJhY3QoMSwgJ21vbnRoJykuc3RhcnRPZignbW9udGgnKSxcbn0sIHtcbiAgZW5kRGF0ZTogbW9tZW50KCkuZW5kT2YoJ2RheScpLFxuICBrZXk6ICdjdXN0b20nLFxuICBsYWJlbDogJ0N1c3RvbSBkYXRlIHJhbmdlJyxcbiAgc3RhcnREYXRlOiBtb21lbnQoKS5zdGFydE9mKCdkYXknKSxcbn1dO1xuIl19