'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _debounce = require('lodash/debounce');

var _debounce2 = _interopRequireDefault(_debounce);

var _Base = require('../base/Base');

var _ReactUtils = require('../ReactUtils');

var _helpers = require('../styles/helpers');

var _LoadingIndicator = require('../progress-indicators/LoadingIndicator');

var _LoadingIndicator2 = _interopRequireDefault(_LoadingIndicator);

var _SummaryContainer = require('./SummaryContainer.style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var DEFAULT_TITLE = 'Totals';
var DEFAULT_MAX_VISIBLE = 6;
// assumedWidth - gutters / default max visible at assumed width (900 - 150) / 6
var MIN_ITEM_WIDTH = 125;

var TxlSummaryContainer = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlSummaryContainer, _React$Component);

  function TxlSummaryContainer() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlSummaryContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlSummaryContainer.__proto__ || (0, _getPrototypeOf2.default)(TxlSummaryContainer)).call.apply(_ref, [this].concat(args)));

    _this._minItemWidth = MIN_ITEM_WIDTH + _SummaryContainer.ITEM_GUTTER_RAW;
    _this._itemsWrap = null;
    _this._debouncedResize = (0, _debounce2.default)(_this._resizeHandler, 200);

    _this.state = { maxVisibleItems: DEFAULT_MAX_VISIBLE };
    return _this;
  }

  (0, _createClass3.default)(TxlSummaryContainer, [{
    key: '_resizeHandler',
    value: function _resizeHandler() {
      this.setState({
        maxVisibleItems: Math.floor(this._itemsWrap.offsetWidth / this._minItemWidth)
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._itemsWrap = (0, _ReactUtils.findDOMNode)(this.refs['items-wrap']);
      window.addEventListener('resize', this._debouncedResize);
      this._resizeHandler();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this._debouncedResize);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var visibleItems = this.state.maxVisibleItems;

      var ITEM_STYLE = (0, _extends3.default)({}, _SummaryContainer.ITEM_CONTAINER, {
        minWidth: 'calc((100% - (' + (visibleItems - 1) + ' * ' + _SummaryContainer.ITEM_GUTTER + ')) / ' + visibleItems + ')'
      });

      var ITEM_STYLE_LAST = (0, _extends3.default)({}, _SummaryContainer.ITEM_CONTAINER_LAST, {
        minWidth: 'calc((100% - (' + (visibleItems - 1) + ' * ' + _SummaryContainer.ITEM_GUTTER + ') + (' + visibleItems + '\n        * ' + _SummaryContainer.CONTAINER_PADDING + ')) / ' + visibleItems + ')'
      });

      return _react2.default.createElement(
        'div',
        {
          id: this.props.id,
          'data-component': 'TxlSummaryContainer',
          style: _SummaryContainer.CONTAINER_STYLES
        },
        _react2.default.createElement(
          'div',
          {
            'data-test-main-title': true,
            style: _SummaryContainer.MAIN_HEADING
          },
          this.props.title
        ),
        _react2.default.createElement(
          'div',
          {
            style: _SummaryContainer.ITEMS_WRAPPER,
            ref: 'items-wrap'
          },
          this.props.loading ? _react2.default.createElement(
            'div',
            { style: _SummaryContainer.LOADING_WRAPPER },
            _react2.default.createElement(_LoadingIndicator2.default, { size: 'medium' })
          ) : this.props.items.map(function (item, index) {
            var CURRENT_ITEM_STYLE = (0, _helpers.combineStyles)(ITEM_STYLE, index === _this2.props.items.length - 1 && ITEM_STYLE_LAST);

            return _react2.default.createElement(
              'div',
              {
                'data-test-item': '' + (index + 1),
                key: index,
                style: CURRENT_ITEM_STYLE
              },
              _react2.default.createElement(
                'div',
                {
                  'data-test-item-heading': true,
                  style: _SummaryContainer.HEADING_STYLE
                },
                item.label
              ),
              _react2.default.createElement(
                'div',
                {
                  'data-test-item-value': true,
                  style: _SummaryContainer.VALUE_STYLE
                },
                item.value
              )
            );
          })
        )
      );
    }
  }]);
  return TxlSummaryContainer;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_resizeHandler', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_resizeHandler'), _class2.prototype)), _class2)) || _class;

exports.default = TxlSummaryContainer;


TxlSummaryContainer.propTypes = {
  id: _react.PropTypes.string,
  items: _react.PropTypes.arrayOf(_react.PropTypes.shape({
    label: _react.PropTypes.node,
    value: _react.PropTypes.node
  })),
  loading: _react.PropTypes.bool,
  title: _react.PropTypes.node
};

TxlSummaryContainer.defaultProps = {
  loading: false,
  title: DEFAULT_TITLE
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DEFAULT_TITLE, 'DEFAULT_TITLE', 'src/containers/SummaryContainer.jsx');

  __REACT_HOT_LOADER__.register(DEFAULT_MAX_VISIBLE, 'DEFAULT_MAX_VISIBLE', 'src/containers/SummaryContainer.jsx');

  __REACT_HOT_LOADER__.register(MIN_ITEM_WIDTH, 'MIN_ITEM_WIDTH', 'src/containers/SummaryContainer.jsx');

  __REACT_HOT_LOADER__.register(TxlSummaryContainer, 'TxlSummaryContainer', 'src/containers/SummaryContainer.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,