'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _desc, _value, _class;

var _Base = require('../base/Base');

var _constants = require('../styles/constants');

var _PositionerHelpers = require('./_PositionerHelpers');

var _jsStyleHelpers = require('../styles/_helpers/jsStyleHelpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var Positioner = (_class = function () {
  function Positioner(overlay) {
    (0, _classCallCheck3.default)(this, Positioner);

    this._overlay = overlay;
    this._initialize();
  }

  (0, _createClass3.default)(Positioner, [{
    key: '_initialize',
    value: function _initialize() {
      this._initializeOverlayStyles();
      this.updatePositioningData();
      this._initialized = true;
    }
  }, {
    key: '_getTranslateX',
    value: function _getTranslateX(xCoord) {
      return xCoord - (this._width / 2 + this._left);
    }
  }, {
    key: '_getTranslateY',
    value: function _getTranslateY(yCoord) {
      return yCoord - (this._height + this._top);
    }
  }, {
    key: '_getTransformStyleFromCoords',
    value: function _getTransformStyleFromCoords(xCoord, yCoord) {
      var translateY = this._getTranslateY(yCoord);
      var translateX = this._getTranslateX(xCoord);

      translateX = (0, _PositionerHelpers.correctOverlappingTranslateX)(this._left, this._right, translateX);

      return (0, _PositionerHelpers.getPrefixedTransformStyleObject)(translateX, translateY);
    }
  }, {
    key: '_initializeOverlayStyles',
    value: function _initializeOverlayStyles() {
      var overlayStyles = {
        display: 'inline-flex',
        left: '-9999px',
        position: 'absolute',
        top: 0,
        zIndex: _constants.Z_INDEXES.popover
      };

      (0, _jsStyleHelpers.setStylesForNode)(this._overlay, overlayStyles);
    }
  }, {
    key: '_resetOverlayTransform',
    value: function _resetOverlayTransform() {
      var resetStyleObject = (0, _PositionerHelpers.getPrefixedTransformStyleObject)(0, 0);
      (0, _jsStyleHelpers.setStylesForNode)(this._overlay, resetStyleObject);
    }
  }, {
    key: 'updatePositioningData',
    value: function updatePositioningData() {
      if (this._initialized) {
        // Since we're reading from getBoundingClientRect, we need to reset the transform
        // applied to the overlay before reading the value so we know the perspective of
        // subsequent transforms.
        this._resetOverlayTransform();
      }

      var boundingRect = this._overlay.getBoundingClientRect();

      this._left = boundingRect.left;
      this._right = boundingRect.right;
      this._top = boundingRect.top;
      this._width = boundingRect.width;
      this._height = boundingRect.height;
    }
  }, {
    key: 'positionOverlayToCoords',
    value: function positionOverlayToCoords(xCoord, yCoord) {
      var transformStyleObject = this._getTransformStyleFromCoords(xCoord, yCoord);
      (0, _jsStyleHelpers.setStylesForNode)(this._overlay, transformStyleObject);
    }
  }]);
  return Positioner;
}(), (_applyDecoratedDescriptor(_class.prototype, '_initialize', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_initialize'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_getTranslateX', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_getTranslateX'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_getTranslateY', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_getTranslateY'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_getTransformStyleFromCoords', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_getTransformStyleFromCoords'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_initializeOverlayStyles', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_initializeOverlayStyles'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_resetOverlayTransform', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_resetOverlayTransform'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'updatePositioningData', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'updatePositioningData'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'positionOverlayToCoords', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'positionOverlayToCoords'), _class.prototype)), _class);
exports.default = Positioner;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(Positioner, 'Positioner', 'src/_tooltips/_Positioner.js');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fdG9vbHRpcHMvX1Bvc2l0aW9uZXIuanMiXSwibmFtZXMiOlsiUG9zaXRpb25lciIsIm92ZXJsYXkiLCJfb3ZlcmxheSIsIl9pbml0aWFsaXplIiwiX2luaXRpYWxpemVPdmVybGF5U3R5bGVzIiwidXBkYXRlUG9zaXRpb25pbmdEYXRhIiwiX2luaXRpYWxpemVkIiwieENvb3JkIiwiX3dpZHRoIiwiX2xlZnQiLCJ5Q29vcmQiLCJfaGVpZ2h0IiwiX3RvcCIsInRyYW5zbGF0ZVkiLCJfZ2V0VHJhbnNsYXRlWSIsInRyYW5zbGF0ZVgiLCJfZ2V0VHJhbnNsYXRlWCIsIl9yaWdodCIsIm92ZXJsYXlTdHlsZXMiLCJkaXNwbGF5IiwibGVmdCIsInBvc2l0aW9uIiwidG9wIiwiekluZGV4IiwicG9wb3ZlciIsInJlc2V0U3R5bGVPYmplY3QiLCJfcmVzZXRPdmVybGF5VHJhbnNmb3JtIiwiYm91bmRpbmdSZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicmlnaHQiLCJ3aWR0aCIsImhlaWdodCIsInRyYW5zZm9ybVN0eWxlT2JqZWN0IiwiX2dldFRyYW5zZm9ybVN0eWxlRnJvbUNvb3JkcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsVTtBQUNuQixzQkFBWUMsT0FBWixFQUFxQjtBQUFBOztBQUNuQixTQUFLQyxRQUFMLEdBQWdCRCxPQUFoQjtBQUNBLFNBQUtFLFdBQUw7QUFDRDs7OztrQ0FHYTtBQUNaLFdBQUtDLHdCQUFMO0FBQ0EsV0FBS0MscUJBQUw7QUFDQSxXQUFLQyxZQUFMLEdBQW9CLElBQXBCO0FBQ0Q7OzttQ0FHY0MsTSxFQUFRO0FBQ3JCLGFBQU9BLFVBQVcsS0FBS0MsTUFBTCxHQUFjLENBQWYsR0FBb0IsS0FBS0MsS0FBbkMsQ0FBUDtBQUNEOzs7bUNBR2NDLE0sRUFBUTtBQUNyQixhQUFPQSxVQUFVLEtBQUtDLE9BQUwsR0FBZSxLQUFLQyxJQUE5QixDQUFQO0FBQ0Q7OztpREFHNEJMLE0sRUFBUUcsTSxFQUFRO0FBQzNDLFVBQU1HLGFBQWEsS0FBS0MsY0FBTCxDQUFvQkosTUFBcEIsQ0FBbkI7QUFDQSxVQUFJSyxhQUFhLEtBQUtDLGNBQUwsQ0FBb0JULE1BQXBCLENBQWpCOztBQUVBUSxtQkFBYSxxREFBNkIsS0FBS04sS0FBbEMsRUFBeUMsS0FBS1EsTUFBOUMsRUFBc0RGLFVBQXRELENBQWI7O0FBRUEsYUFBTyx3REFBZ0NBLFVBQWhDLEVBQTRDRixVQUE1QyxDQUFQO0FBQ0Q7OzsrQ0FHMEI7QUFDekIsVUFBTUssZ0JBQWdCO0FBQ3BCQyxpQkFBUyxhQURXO0FBRXBCQyxjQUFNLFNBRmM7QUFHcEJDLGtCQUFVLFVBSFU7QUFJcEJDLGFBQUssQ0FKZTtBQUtwQkMsZ0JBQVEscUJBQVVDO0FBTEUsT0FBdEI7O0FBUUEsNENBQWlCLEtBQUt0QixRQUF0QixFQUFnQ2dCLGFBQWhDO0FBQ0Q7Ozs2Q0FHd0I7QUFDdkIsVUFBTU8sbUJBQW1CLHdEQUFnQyxDQUFoQyxFQUFtQyxDQUFuQyxDQUF6QjtBQUNBLDRDQUFpQixLQUFLdkIsUUFBdEIsRUFBZ0N1QixnQkFBaEM7QUFDRDs7OzRDQUd1QjtBQUN0QixVQUFJLEtBQUtuQixZQUFULEVBQXVCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGFBQUtvQixzQkFBTDtBQUNEOztBQUVELFVBQU1DLGVBQWUsS0FBS3pCLFFBQUwsQ0FBYzBCLHFCQUFkLEVBQXJCOztBQUVBLFdBQUtuQixLQUFMLEdBQWFrQixhQUFhUCxJQUExQjtBQUNBLFdBQUtILE1BQUwsR0FBY1UsYUFBYUUsS0FBM0I7QUFDQSxXQUFLakIsSUFBTCxHQUFZZSxhQUFhTCxHQUF6QjtBQUNBLFdBQUtkLE1BQUwsR0FBY21CLGFBQWFHLEtBQTNCO0FBQ0EsV0FBS25CLE9BQUwsR0FBZWdCLGFBQWFJLE1BQTVCO0FBQ0Q7Ozs0Q0FHdUJ4QixNLEVBQVFHLE0sRUFBUTtBQUN0QyxVQUFNc0IsdUJBQXVCLEtBQUtDLDRCQUFMLENBQWtDMUIsTUFBbEMsRUFBMENHLE1BQTFDLENBQTdCO0FBQ0EsNENBQWlCLEtBQUtSLFFBQXRCLEVBQWdDOEIsb0JBQWhDO0FBQ0Q7Ozs7a0JBMUVrQmhDLFU7Ozs7Ozs7O2dDQUFBQSxVIiwiZmlsZSI6Il9Qb3NpdGlvbmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXV0b2JpbmQgfSBmcm9tICcuLi9iYXNlL0Jhc2UnO1xuaW1wb3J0IHsgWl9JTkRFWEVTIH0gZnJvbSAnLi4vc3R5bGVzL2NvbnN0YW50cyc7XG5pbXBvcnQge1xuICBjb3JyZWN0T3ZlcmxhcHBpbmdUcmFuc2xhdGVYLFxuICBnZXRQcmVmaXhlZFRyYW5zZm9ybVN0eWxlT2JqZWN0LFxufSBmcm9tICcuL19Qb3NpdGlvbmVySGVscGVycyc7XG5pbXBvcnQgeyBzZXRTdHlsZXNGb3JOb2RlIH0gZnJvbSAnLi4vc3R5bGVzL19oZWxwZXJzL2pzU3R5bGVIZWxwZXJzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9zaXRpb25lciB7XG4gIGNvbnN0cnVjdG9yKG92ZXJsYXkpIHtcbiAgICB0aGlzLl9vdmVybGF5ID0gb3ZlcmxheTtcbiAgICB0aGlzLl9pbml0aWFsaXplKCk7XG4gIH1cblxuICBAYXV0b2JpbmRcbiAgX2luaXRpYWxpemUoKSB7XG4gICAgdGhpcy5faW5pdGlhbGl6ZU92ZXJsYXlTdHlsZXMoKTtcbiAgICB0aGlzLnVwZGF0ZVBvc2l0aW9uaW5nRGF0YSgpO1xuICAgIHRoaXMuX2luaXRpYWxpemVkID0gdHJ1ZTtcbiAgfVxuXG4gIEBhdXRvYmluZFxuICBfZ2V0VHJhbnNsYXRlWCh4Q29vcmQpIHtcbiAgICByZXR1cm4geENvb3JkIC0gKCh0aGlzLl93aWR0aCAvIDIpICsgdGhpcy5fbGVmdCk7XG4gIH1cblxuICBAYXV0b2JpbmRcbiAgX2dldFRyYW5zbGF0ZVkoeUNvb3JkKSB7XG4gICAgcmV0dXJuIHlDb29yZCAtICh0aGlzLl9oZWlnaHQgKyB0aGlzLl90b3ApO1xuICB9XG5cbiAgQGF1dG9iaW5kXG4gIF9nZXRUcmFuc2Zvcm1TdHlsZUZyb21Db29yZHMoeENvb3JkLCB5Q29vcmQpIHtcbiAgICBjb25zdCB0cmFuc2xhdGVZID0gdGhpcy5fZ2V0VHJhbnNsYXRlWSh5Q29vcmQpO1xuICAgIGxldCB0cmFuc2xhdGVYID0gdGhpcy5fZ2V0VHJhbnNsYXRlWCh4Q29vcmQpO1xuXG4gICAgdHJhbnNsYXRlWCA9IGNvcnJlY3RPdmVybGFwcGluZ1RyYW5zbGF0ZVgodGhpcy5fbGVmdCwgdGhpcy5fcmlnaHQsIHRyYW5zbGF0ZVgpO1xuXG4gICAgcmV0dXJuIGdldFByZWZpeGVkVHJhbnNmb3JtU3R5bGVPYmplY3QodHJhbnNsYXRlWCwgdHJhbnNsYXRlWSk7XG4gIH1cblxuICBAYXV0b2JpbmRcbiAgX2luaXRpYWxpemVPdmVybGF5U3R5bGVzKCkge1xuICAgIGNvbnN0IG92ZXJsYXlTdHlsZXMgPSB7XG4gICAgICBkaXNwbGF5OiAnaW5saW5lLWZsZXgnLFxuICAgICAgbGVmdDogJy05OTk5cHgnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB0b3A6IDAsXG4gICAgICB6SW5kZXg6IFpfSU5ERVhFUy5wb3BvdmVyLFxuICAgIH07XG5cbiAgICBzZXRTdHlsZXNGb3JOb2RlKHRoaXMuX292ZXJsYXksIG92ZXJsYXlTdHlsZXMpO1xuICB9XG5cbiAgQGF1dG9iaW5kXG4gIF9yZXNldE92ZXJsYXlUcmFuc2Zvcm0oKSB7XG4gICAgY29uc3QgcmVzZXRTdHlsZU9iamVjdCA9IGdldFByZWZpeGVkVHJhbnNmb3JtU3R5bGVPYmplY3QoMCwgMCk7XG4gICAgc2V0U3R5bGVzRm9yTm9kZSh0aGlzLl9vdmVybGF5LCByZXNldFN0eWxlT2JqZWN0KTtcbiAgfVxuXG4gIEBhdXRvYmluZFxuICB1cGRhdGVQb3NpdGlvbmluZ0RhdGEoKSB7XG4gICAgaWYgKHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAvLyBTaW5jZSB3ZSdyZSByZWFkaW5nIGZyb20gZ2V0Qm91bmRpbmdDbGllbnRSZWN0LCB3ZSBuZWVkIHRvIHJlc2V0IHRoZSB0cmFuc2Zvcm1cbiAgICAgIC8vIGFwcGxpZWQgdG8gdGhlIG92ZXJsYXkgYmVmb3JlIHJlYWRpbmcgdGhlIHZhbHVlIHNvIHdlIGtub3cgdGhlIHBlcnNwZWN0aXZlIG9mXG4gICAgICAvLyBzdWJzZXF1ZW50IHRyYW5zZm9ybXMuXG4gICAgICB0aGlzLl9yZXNldE92ZXJsYXlUcmFuc2Zvcm0oKTtcbiAgICB9XG5cbiAgICBjb25zdCBib3VuZGluZ1JlY3QgPSB0aGlzLl9vdmVybGF5LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgdGhpcy5fbGVmdCA9IGJvdW5kaW5nUmVjdC5sZWZ0O1xuICAgIHRoaXMuX3JpZ2h0ID0gYm91bmRpbmdSZWN0LnJpZ2h0O1xuICAgIHRoaXMuX3RvcCA9IGJvdW5kaW5nUmVjdC50b3A7XG4gICAgdGhpcy5fd2lkdGggPSBib3VuZGluZ1JlY3Qud2lkdGg7XG4gICAgdGhpcy5faGVpZ2h0ID0gYm91bmRpbmdSZWN0LmhlaWdodDtcbiAgfVxuXG4gIEBhdXRvYmluZFxuICBwb3NpdGlvbk92ZXJsYXlUb0Nvb3Jkcyh4Q29vcmQsIHlDb29yZCkge1xuICAgIGNvbnN0IHRyYW5zZm9ybVN0eWxlT2JqZWN0ID0gdGhpcy5fZ2V0VHJhbnNmb3JtU3R5bGVGcm9tQ29vcmRzKHhDb29yZCwgeUNvb3JkKTtcbiAgICBzZXRTdHlsZXNGb3JOb2RlKHRoaXMuX292ZXJsYXksIHRyYW5zZm9ybVN0eWxlT2JqZWN0KTtcbiAgfVxufVxuIl19