'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _desc, _value, _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _helpers = require('../styles/helpers');

var _layers = require('../styles/mixins/layers');

var _Base = require('../base/Base');

var _createDropdown = require('../dropdowns/_createDropdown');

var _createDropdown2 = _interopRequireDefault(_createDropdown);

var _DropdownList = require('../dropdowns/_DropdownList');

var _DropdownList2 = _interopRequireDefault(_DropdownList);

var _FlyoutTargetBase = require('../dropdowns/_FlyoutTargetBase');

var _FlyoutTargetBase2 = _interopRequireDefault(_FlyoutTargetBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var FILL_COLOR = 'white';

var WRAPPER_STYLE = (0, _extends3.default)({}, (0, _helpers.square)((0, _helpers.gridUnits)(7)), {
  alignItems: 'center',
  cursor: 'pointer',
  display: 'flex',
  justifyContent: 'center',
  position: 'relative'
});

var SVG_STYLE = {
  display: 'block'
};

var ICON_BASE_STYLE = (0, _extends3.default)({}, (0, _helpers.square)('13px'), {
  display: 'block'
});

var FLYOUT_STYLE = (0, _extends3.default)({}, _layers.LAYER_2, {
  minWidth: (0, _helpers.gridUnits)(20)
});

var FLYOUT_CONTENT_STYLE = {
  backgroundColor: 'white',
  zIndex: 3
};

var RESTING_HOVER_OPACITY = 0.75;
var RESTING_OPACITY = 0.2;
var SORTED_DIRECTION_OPACITY = 1;

var TYPE_OPTIONS = {
  age: {
    asc: 'Oldest to Newest',
    desc: 'Newest to Oldest'
  },
  alpha: {
    asc: 'A-Z',
    desc: 'Z-A'
  },
  number: {
    asc: 'Ascending',
    desc: 'Descending'
  }
};

function getSortMenu(type) {
  var TYPES = TYPE_OPTIONS[type];
  if (type === 'age') {
    return [{
      label: TYPES.desc,
      value: 'DESC'
    }, {
      label: TYPES.asc,
      value: 'ASC'
    }];
  }
  return [{
    label: TYPES.asc,
    value: 'ASC'
  }, {
    label: TYPES.desc,
    value: 'DESC'
  }];
}

// @TODO: Should probably rename this file / component class to represent that
// this is a flyout and not a dropdown.
var TXLDataGridSortDropdown = (_class = function (_React$Component) {
  (0, _inherits3.default)(TXLDataGridSortDropdown, _React$Component);

  function TXLDataGridSortDropdown() {
    var _ref;

    (0, _classCallCheck3.default)(this, TXLDataGridSortDropdown);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TXLDataGridSortDropdown.__proto__ || (0, _getPrototypeOf2.default)(TXLDataGridSortDropdown)).call.apply(_ref, [this].concat(args)));

    _this.state = (0, _extends3.default)({}, _this.state, {
      hovered: false
    });
    return _this;
  }

  (0, _createClass3.default)(TXLDataGridSortDropdown, [{
    key: '_toggleDropdown',
    value: function _toggleDropdown() {
      this.props.updateDropdown({ open: !this.props.open });
    }
  }, {
    key: '_handleMouseEnter',
    value: function _handleMouseEnter() {
      this.setState({ hovered: true });
    }
  }, {
    key: '_handleMouseLeave',
    value: function _handleMouseLeave() {
      this.setState({ hovered: false });
    }
  }, {
    key: '_handleItemClick',
    value: function _handleItemClick(obj) {
      var direction = obj.value;
      this.props.onSortRequested({ direction: direction });
      this.props.updateDropdown({ open: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var restingOpacity = this.state.hovered ? RESTING_HOVER_OPACITY : RESTING_OPACITY;

      var topOpacity = this.props.direction === 'ASC' ? SORTED_DIRECTION_OPACITY : restingOpacity;

      var bottomOpacity = this.props.direction === 'DESC' ? SORTED_DIRECTION_OPACITY : restingOpacity;

      var dropdownItems = getSortMenu(this.props.type);

      var flyoutContent = _react2.default.createElement(
        'div',
        { style: FLYOUT_STYLE },
        _react2.default.createElement(
          'div',
          { style: FLYOUT_CONTENT_STYLE },
          _react2.default.createElement(_DropdownList2.default, {
            items: dropdownItems,
            onClick: this._handleItemClick,
            selectedValues: [this.props.direction]
          })
        )
      );

      return _react2.default.createElement(
        _FlyoutTargetBase2.default,
        {
          onClick: this._toggleDropdown,
          onMouseEnter: this._handleMouseEnter,
          onMouseLeave: this._handleMouseLeave,
          componentName: 'TxlDataGrid_SortFlyout',
          id: this.props.id,
          style: WRAPPER_STYLE,
          visible: this.props.open,
          content: flyoutContent
        },
        _react2.default.createElement(
          'i',
          { style: ICON_BASE_STYLE },
          _react2.default.createElement(
            'svg',
            {
              style: SVG_STYLE,
              viewBox: '0 0 13 13'
            },
            _react2.default.createElement('path', {
              fill: FILL_COLOR,
              fillOpacity: bottomOpacity,
              d: 'M6.5 13l3.9-4.3H2.6z'
            }),
            _react2.default.createElement('path', {
              fill: FILL_COLOR,
              fillOpacity: topOpacity,
              d: 'M6.5 0L2.6 4.3h7.8z'
            })
          )
        )
      );
    }
  }]);
  return TXLDataGridSortDropdown;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, '_toggleDropdown', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_toggleDropdown'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_handleMouseEnter', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_handleMouseEnter'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_handleMouseLeave', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_handleMouseLeave'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_handleItemClick', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_handleItemClick'), _class.prototype)), _class);


TXLDataGridSortDropdown.propTypes = {
  direction: _react.PropTypes.oneOf(['ASC', 'DESC']),
  id: _react.PropTypes.string,
  onSortRequested: _react.PropTypes.func.isRequired,
  open: _react.PropTypes.bool,
  type: _react.PropTypes.oneOf((0, _keys2.default)(TYPE_OPTIONS)).isRequired,
  updateDropdown: _react.PropTypes.func
};

TXLDataGridSortDropdown.defaultProps = {
  onSortRequested: _Base.NOOP,
  updateDropdown: _Base.NOOP
};

var _default = (0, _createDropdown2.default)(TXLDataGridSortDropdown);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(FILL_COLOR, 'FILL_COLOR', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(WRAPPER_STYLE, 'WRAPPER_STYLE', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(SVG_STYLE, 'SVG_STYLE', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(ICON_BASE_STYLE, 'ICON_BASE_STYLE', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(FLYOUT_STYLE, 'FLYOUT_STYLE', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(FLYOUT_CONTENT_STYLE, 'FLYOUT_CONTENT_STYLE', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(RESTING_HOVER_OPACITY, 'RESTING_HOVER_OPACITY', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(RESTING_OPACITY, 'RESTING_OPACITY', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(SORTED_DIRECTION_OPACITY, 'SORTED_DIRECTION_OPACITY', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(TYPE_OPTIONS, 'TYPE_OPTIONS', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(getSortMenu, 'getSortMenu', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(TXLDataGridSortDropdown, 'TXLDataGridSortDropdown', 'src/_data-grid/_SortDropdown.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/_data-grid/_SortDropdown.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,