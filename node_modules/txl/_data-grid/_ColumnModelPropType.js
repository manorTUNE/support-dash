'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var propTypes = _react.PropTypes.shape({
  cell: _react.PropTypes.func.isRequired,
  cellStyle: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.object]),
  growRatio: _react.PropTypes.number,
  header: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.func]).isRequired,
  headerCentered: _react.PropTypes.bool,
  headerSimple: _react.PropTypes.string, // FIXME: unused?
  key: _react.PropTypes.string.isRequired,
  maxWidth: _react.PropTypes.number,
  minWidth: _react.PropTypes.number,
  pinned: _react.PropTypes.bool,
  resizeable: _react.PropTypes.bool, // FIXME: unused?
  sortType: _react.PropTypes.string, // required when passing sortable
  width: _react.PropTypes.number
});

// Flow types for DataGrid

/* global React$Element:false, React$Component:false */

Object.defineProperty(module.exports, 'babelPluginFlowReactPropTypes_proptype_HeaderProps', require('react').PropTypes.shape({
  model: require('react').PropTypes.any.isRequired
}));
Object.defineProperty(module.exports, 'babelPluginFlowReactPropTypes_proptype_RowProps', require('react').PropTypes.shape({
  row: require('react').PropTypes.object.isRequired
}));
Object.defineProperty(module.exports, 'babelPluginFlowReactPropTypes_proptype_Column', require('react').PropTypes.shape({
  cell: require('react').PropTypes.func.isRequired,
  cellStyle: require('react').PropTypes.oneOfType([require('react').PropTypes.object, require('react').PropTypes.func]),
  growRatio: require('react').PropTypes.number,
  header: require('react').PropTypes.any.isRequired,
  headerCentered: require('react').PropTypes.bool,
  headerSimple: require('react').PropTypes.string,
  key: require('react').PropTypes.string.isRequired,
  maxWidth: require('react').PropTypes.number,
  minWidth: require('react').PropTypes.number,
  pinned: require('react').PropTypes.bool,
  resizeable: require('react').PropTypes.bool,
  sortType: require('react').PropTypes.string,
  width: require('react').PropTypes.number
}));
Object.defineProperty(module.exports, 'babelPluginFlowReactPropTypes_proptype_ColumnGroup', require('react').PropTypes.shape({
  columns: require('react').PropTypes.arrayOf(require('react').PropTypes.shape({
    cell: require('react').PropTypes.func.isRequired,
    cellStyle: require('react').PropTypes.oneOfType([require('react').PropTypes.object, require('react').PropTypes.func]),
    growRatio: require('react').PropTypes.number,
    header: require('react').PropTypes.any.isRequired,
    headerCentered: require('react').PropTypes.bool,
    headerSimple: require('react').PropTypes.string,
    key: require('react').PropTypes.string.isRequired,
    maxWidth: require('react').PropTypes.number,
    minWidth: require('react').PropTypes.number,
    pinned: require('react').PropTypes.bool,
    resizeable: require('react').PropTypes.bool,
    sortType: require('react').PropTypes.string,
    width: require('react').PropTypes.number
  })).isRequired,
  header: require('react').PropTypes.any,
  pinned: require('react').PropTypes.bool
}));
var _default = propTypes;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(propTypes, 'propTypes', 'src/_data-grid/_ColumnModelPropType.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/_data-grid/_ColumnModelPropType.js');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fZGF0YS1ncmlkL19Db2x1bW5Nb2RlbFByb3BUeXBlLmpzIl0sIm5hbWVzIjpbInByb3BUeXBlcyIsInNoYXBlIiwiY2VsbCIsImZ1bmMiLCJpc1JlcXVpcmVkIiwiY2VsbFN0eWxlIiwib25lT2ZUeXBlIiwib2JqZWN0IiwiZ3Jvd1JhdGlvIiwibnVtYmVyIiwiaGVhZGVyIiwibm9kZSIsImhlYWRlckNlbnRlcmVkIiwiYm9vbCIsImhlYWRlclNpbXBsZSIsInN0cmluZyIsImtleSIsIm1heFdpZHRoIiwibWluV2lkdGgiLCJwaW5uZWQiLCJyZXNpemVhYmxlIiwic29ydFR5cGUiLCJ3aWR0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBSUE7O0FBRUEsSUFBTUEsWUFBWSxpQkFBVUMsS0FBVixDQUFnQjtBQUNoQ0MsUUFBTSxpQkFBVUMsSUFBVixDQUFlQyxVQURXO0FBRWhDQyxhQUFXLGlCQUFVQyxTQUFWLENBQW9CLENBQUMsaUJBQVVILElBQVgsRUFBaUIsaUJBQVVJLE1BQTNCLENBQXBCLENBRnFCO0FBR2hDQyxhQUFXLGlCQUFVQyxNQUhXO0FBSWhDQyxVQUFRLGlCQUFVSixTQUFWLENBQW9CLENBQzFCLGlCQUFVSyxJQURnQixFQUUxQixpQkFBVVIsSUFGZ0IsQ0FBcEIsRUFHTEMsVUFQNkI7QUFRaENRLGtCQUFnQixpQkFBVUMsSUFSTTtBQVNoQ0MsZ0JBQWMsaUJBQVVDLE1BVFEsRUFTQTtBQUNoQ0MsT0FBSyxpQkFBVUQsTUFBVixDQUFpQlgsVUFWVTtBQVdoQ2EsWUFBVSxpQkFBVVIsTUFYWTtBQVloQ1MsWUFBVSxpQkFBVVQsTUFaWTtBQWFoQ1UsVUFBUSxpQkFBVU4sSUFiYztBQWNoQ08sY0FBWSxpQkFBVVAsSUFkVSxFQWNKO0FBQzVCUSxZQUFVLGlCQUFVTixNQWZZLEVBZUo7QUFDNUJPLFNBQU8saUJBQVViO0FBaEJlLENBQWhCLENBQWxCOztBQW1CQTs7QUF2QkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQThEZVQsUzs7Ozs7Ozs7O2dDQTFEVEEsUyIsImZpbGUiOiJfQ29sdW1uTW9kZWxQcm9wVHlwZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbi8qIGdsb2JhbCBSZWFjdCRFbGVtZW50OmZhbHNlLCBSZWFjdCRDb21wb25lbnQ6ZmFsc2UgKi9cblxuaW1wb3J0IHsgUHJvcFR5cGVzIH0gZnJvbSAncmVhY3QnO1xuXG5jb25zdCBwcm9wVHlwZXMgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBjZWxsOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBjZWxsU3R5bGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSksXG4gIGdyb3dSYXRpbzogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVhZGVyOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICBQcm9wVHlwZXMubm9kZSxcbiAgICBQcm9wVHlwZXMuZnVuYyxcbiAgXSkuaXNSZXF1aXJlZCxcbiAgaGVhZGVyQ2VudGVyZWQ6IFByb3BUeXBlcy5ib29sLFxuICBoZWFkZXJTaW1wbGU6IFByb3BUeXBlcy5zdHJpbmcsIC8vIEZJWE1FOiB1bnVzZWQ/XG4gIGtleTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBtYXhXaWR0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgbWluV2lkdGg6IFByb3BUeXBlcy5udW1iZXIsXG4gIHBpbm5lZDogUHJvcFR5cGVzLmJvb2wsXG4gIHJlc2l6ZWFibGU6IFByb3BUeXBlcy5ib29sLCAvLyBGSVhNRTogdW51c2VkP1xuICBzb3J0VHlwZTogUHJvcFR5cGVzLnN0cmluZywgLy8gcmVxdWlyZWQgd2hlbiBwYXNzaW5nIHNvcnRhYmxlXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxufSk7XG5cbi8vIEZsb3cgdHlwZXMgZm9yIERhdGFHcmlkXG5cbmV4cG9ydCB0eXBlIEhlYWRlclByb3BzID0ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgbW9kZWw6IENvbHVtbk1vZGVsO1xufTtcblxuZXhwb3J0IHR5cGUgSGVhZGVyID0gUmVhY3QkRWxlbWVudDwqPlxuICB8IFJlYWN0JENvbXBvbmVudDxIZWFkZXJQcm9wcz5cbiAgfCAoKHByb3BzOiBIZWFkZXJQcm9wcykgPT4gP1JlYWN0JEVsZW1lbnQ8Kj4pO1xuXG5leHBvcnQgdHlwZSBSb3dQcm9wcyA9IHtcbiAgcm93OiBPYmplY3Q7XG59XG5cbmV4cG9ydCB0eXBlIENvbHVtbiA9IHtcbiAgY2VsbDogKHByb3BzOiBSb3dQcm9wcykgPT4gP21peGVkO1xuICBjZWxsU3R5bGU/OiBPYmplY3QgfCAoeDogeyBpbmRleDogbnVtYmVyLCBtb2RlbDogT2JqZWN0LCByb3c6IE9iamVjdCB9KSA9PiBPYmplY3Q7XG4gIGdyb3dSYXRpbz86IG51bWJlcjtcbiAgaGVhZGVyOiBIZWFkZXI7XG4gIGhlYWRlckNlbnRlcmVkPzogYm9vbGVhbjtcbiAgaGVhZGVyU2ltcGxlPzogc3RyaW5nOyAvLyBGSVhNRTogdW51c2VkP1xuICBrZXk6IHN0cmluZztcbiAgbWF4V2lkdGg/OiBudW1iZXI7XG4gIG1pbldpZHRoPzogbnVtYmVyO1xuICBwaW5uZWQ/OiBib29sZWFuO1xuICByZXNpemVhYmxlPzogYm9vbGVhbjsgLy8gRklYTUU6IHVudXNlZD9cbiAgc29ydFR5cGU/OiBzdHJpbmc7XG4gIHdpZHRoPzogbnVtYmVyO1xufVxuXG5leHBvcnQgdHlwZSBDb2x1bW5Hcm91cCA9IHtcbiAgY29sdW1uczogQXJyYXk8Q29sdW1uPjtcbiAgaGVhZGVyPzogSGVhZGVyO1xuICBwaW5uZWQ/OiBib29sZWFuO1xufVxuXG5leHBvcnQgdHlwZSBDb2x1bW5Nb2RlbCA9IENvbHVtbiB8IENvbHVtbkdyb3VwO1xuXG5leHBvcnQgZGVmYXVsdCBwcm9wVHlwZXM7XG4iXX0=