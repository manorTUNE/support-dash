'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _debounce = require('lodash/debounce');

var _debounce2 = _interopRequireDefault(_debounce);

var _ReactUtils = require('../ReactUtils');

var _Base = require('../base/Base');

var _DataGridStyles = require('./DataGridStyles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var DEFAULT_COLUMN_WIDTH = 100;
var DEFAULT_GROW_RATIO = 0;
var DEFAULT_SHRINK_RATIO = 0;
var DEFAULT_MIN_WIDTH = 30;
var DEFAULT_MAX_WIDTH = 'none';

var DATA_GRID_ROW_SIZER_STYLES = (0, _extends3.default)({}, _DataGridStyles.BODY_ROW_STYLES, { height: '0px' });

var TxlDataGridRowSizer = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlDataGridRowSizer, _React$Component);

  function TxlDataGridRowSizer() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlDataGridRowSizer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlDataGridRowSizer.__proto__ || (0, _getPrototypeOf2.default)(TxlDataGridRowSizer)).call.apply(_ref, [this].concat(args)));

    _this._debouncedOnSizeUpdate = (0, _debounce2.default)(_this._onSizeUpdate, 70);
    return _this;
  }

  (0, _createClass3.default)(TxlDataGridRowSizer, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._onSizeUpdate();
      window.addEventListener('resize', this._debouncedOnSizeUpdate);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this._debouncedOnSizeUpdate);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._onSizeUpdate();
    }
  }, {
    key: '_onSizeUpdate',
    value: function _onSizeUpdate() {
      var _this2 = this;

      var widths = this.props.columnModel.map(function (model, index) {
        return (0, _ReactUtils.findDOMNode)(_this2.refs['column-' + index]).offsetWidth;
      });
      this.props.onRowSizeChange(widths);
    }
  }, {
    key: 'render',
    value: function render() {
      var columnModel = this.props.columnModel;


      var cells = columnModel.map(function (model, index) {
        var styles = {
          flexBasis: model.width || DEFAULT_COLUMN_WIDTH,
          flexGrow: model.growRatio || DEFAULT_GROW_RATIO,
          flexShrink: DEFAULT_SHRINK_RATIO,
          maxWidth: model.maxWidth || DEFAULT_MAX_WIDTH,
          minWidth: model.minWidth || DEFAULT_MIN_WIDTH
        };

        return _react2.default.createElement('div', {
          style: styles,
          key: model.key,
          ref: 'column-' + index
        });
      });

      return _react2.default.createElement(
        'div',
        {
          'data-component': 'TxlDataGridRowSizer',
          style: DATA_GRID_ROW_SIZER_STYLES
        },
        cells
      );
    }
  }]);
  return TxlDataGridRowSizer;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_onSizeUpdate', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_onSizeUpdate'), _class2.prototype)), _class2)) || _class;

exports.default = TxlDataGridRowSizer;


TxlDataGridRowSizer.propTypes = {
  columnModel: _react.PropTypes.any.isRequired, // is validated higher up
  onRowSizeChange: _react.PropTypes.func.isRequired
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DEFAULT_COLUMN_WIDTH, 'DEFAULT_COLUMN_WIDTH', 'src/_data-grid/_DataGridRowSizer.jsx');

  __REACT_HOT_LOADER__.register(DEFAULT_GROW_RATIO, 'DEFAULT_GROW_RATIO', 'src/_data-grid/_DataGridRowSizer.jsx');

  __REACT_HOT_LOADER__.register(DEFAULT_SHRINK_RATIO, 'DEFAULT_SHRINK_RATIO', 'src/_data-grid/_DataGridRowSizer.jsx');

  __REACT_HOT_LOADER__.register(DEFAULT_MIN_WIDTH, 'DEFAULT_MIN_WIDTH', 'src/_data-grid/_DataGridRowSizer.jsx');

  __REACT_HOT_LOADER__.register(DEFAULT_MAX_WIDTH, 'DEFAULT_MAX_WIDTH', 'src/_data-grid/_DataGridRowSizer.jsx');

  __REACT_HOT_LOADER__.register(DATA_GRID_ROW_SIZER_STYLES, 'DATA_GRID_ROW_SIZER_STYLES', 'src/_data-grid/_DataGridRowSizer.jsx');

  __REACT_HOT_LOADER__.register(TxlDataGridRowSizer, 'TxlDataGridRowSizer', 'src/_data-grid/_DataGridRowSizer.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fZGF0YS1ncmlkL19EYXRhR3JpZFJvd1NpemVyLmpzeCJdLCJuYW1lcyI6WyJERUZBVUxUX0NPTFVNTl9XSURUSCIsIkRFRkFVTFRfR1JPV19SQVRJTyIsIkRFRkFVTFRfU0hSSU5LX1JBVElPIiwiREVGQVVMVF9NSU5fV0lEVEgiLCJERUZBVUxUX01BWF9XSURUSCIsIkRBVEFfR1JJRF9ST1dfU0laRVJfU1RZTEVTIiwiaGVpZ2h0IiwiVHhsRGF0YUdyaWRSb3dTaXplciIsImFyZ3MiLCJfZGVib3VuY2VkT25TaXplVXBkYXRlIiwiX29uU2l6ZVVwZGF0ZSIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwid2lkdGhzIiwicHJvcHMiLCJjb2x1bW5Nb2RlbCIsIm1hcCIsIm1vZGVsIiwiaW5kZXgiLCJyZWZzIiwib2Zmc2V0V2lkdGgiLCJvblJvd1NpemVDaGFuZ2UiLCJjZWxscyIsInN0eWxlcyIsImZsZXhCYXNpcyIsIndpZHRoIiwiZmxleEdyb3ciLCJncm93UmF0aW8iLCJmbGV4U2hyaW5rIiwibWF4V2lkdGgiLCJtaW5XaWR0aCIsImtleSIsIkNvbXBvbmVudCIsInByb3BUeXBlcyIsImFueSIsImlzUmVxdWlyZWQiLCJmdW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUlBLElBQU1BLHVCQUF1QixHQUE3QjtBQUNBLElBQU1DLHFCQUFxQixDQUEzQjtBQUNBLElBQU1DLHVCQUF1QixDQUE3QjtBQUNBLElBQU1DLG9CQUFvQixFQUExQjtBQUNBLElBQU1DLG9CQUFvQixNQUExQjs7QUFFQSxJQUFNQyx5RkFFRCxFQUFFQyxRQUFRLEtBQVYsRUFGQyxDQUFOOztJQU1xQkMsbUI7OztBQUNuQixpQ0FBcUI7QUFBQTs7QUFBQTs7QUFBQSxzQ0FBTkMsSUFBTTtBQUFOQSxVQUFNO0FBQUE7O0FBQUEsMkxBQ1ZBLElBRFU7O0FBR25CLFVBQUtDLHNCQUFMLEdBQThCLHdCQUFTLE1BQUtDLGFBQWQsRUFBNkIsRUFBN0IsQ0FBOUI7QUFIbUI7QUFJcEI7Ozs7d0NBRW1CO0FBQ2xCLFdBQUtBLGFBQUw7QUFDQUMsYUFBT0MsZ0JBQVAsQ0FBd0IsUUFBeEIsRUFBa0MsS0FBS0gsc0JBQXZDO0FBQ0Q7OzsyQ0FFc0I7QUFDckJFLGFBQU9FLG1CQUFQLENBQTJCLFFBQTNCLEVBQXFDLEtBQUtKLHNCQUExQztBQUNEOzs7eUNBRW9CO0FBQ25CLFdBQUtDLGFBQUw7QUFDRDs7O29DQUdlO0FBQUE7O0FBQ2QsVUFBTUksU0FBUyxLQUFLQyxLQUFMLENBQVdDLFdBQVgsQ0FBdUJDLEdBQXZCLENBQTJCLFVBQUNDLEtBQUQsRUFBUUMsS0FBUjtBQUFBLGVBQ3hDLDZCQUFZLE9BQUtDLElBQUwsYUFBb0JELEtBQXBCLENBQVosRUFBMENFLFdBREY7QUFBQSxPQUEzQixDQUFmO0FBR0EsV0FBS04sS0FBTCxDQUFXTyxlQUFYLENBQTJCUixNQUEzQjtBQUNEOzs7NkJBRVE7QUFBQSxVQUNDRSxXQURELEdBQ2lCLEtBQUtELEtBRHRCLENBQ0NDLFdBREQ7OztBQUdQLFVBQU1PLFFBQVFQLFlBQVlDLEdBQVosQ0FBZ0IsVUFBQ0MsS0FBRCxFQUFRQyxLQUFSLEVBQWtCO0FBQzlDLFlBQU1LLFNBQVM7QUFDYkMscUJBQVdQLE1BQU1RLEtBQU4sSUFBZTFCLG9CQURiO0FBRWIyQixvQkFBVVQsTUFBTVUsU0FBTixJQUFtQjNCLGtCQUZoQjtBQUdiNEIsc0JBQVkzQixvQkFIQztBQUliNEIsb0JBQVVaLE1BQU1ZLFFBQU4sSUFBa0IxQixpQkFKZjtBQUtiMkIsb0JBQVViLE1BQU1hLFFBQU4sSUFBa0I1QjtBQUxmLFNBQWY7O0FBUUEsZUFDRTtBQUNFLGlCQUFPcUIsTUFEVDtBQUVFLGVBQUtOLE1BQU1jLEdBRmI7QUFHRSwyQkFBZWI7QUFIakIsVUFERjtBQU9ELE9BaEJhLENBQWQ7O0FBa0JBLGFBQ0U7QUFBQTtBQUFBO0FBQ0UsNEJBQWUscUJBRGpCO0FBRUUsaUJBQU9kO0FBRlQ7QUFJR2tCO0FBSkgsT0FERjtBQVFEOzs7RUF6RDhDLGdCQUFNVSxTOztrQkFBbEMxQixtQjs7O0FBNERyQkEsb0JBQW9CMkIsU0FBcEIsR0FBZ0M7QUFDOUJsQixlQUFhLGlCQUFVbUIsR0FBVixDQUFjQyxVQURHLEVBQ1M7QUFDdkNkLG1CQUFpQixpQkFBVWUsSUFBVixDQUFlRDtBQUZGLENBQWhDOzs7Ozs7OztnQ0F4RU1wQyxvQjs7Z0NBQ0FDLGtCOztnQ0FDQUMsb0I7O2dDQUNBQyxpQjs7Z0NBQ0FDLGlCOztnQ0FFQUMsMEI7O2dDQU1lRSxtQiIsImZpbGUiOiJfRGF0YUdyaWRSb3dTaXplci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmFkaXVtIGZyb20gJ3JhZGl1bSc7XG5pbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoL2RlYm91bmNlJztcblxuaW1wb3J0IHsgZmluZERPTU5vZGUgfSBmcm9tICcuLi9SZWFjdFV0aWxzJztcbmltcG9ydCB7IGF1dG9iaW5kIH0gZnJvbSAnLi4vYmFzZS9CYXNlJztcbmltcG9ydCB7XG4gIEJPRFlfUk9XX1NUWUxFUyxcbn0gZnJvbSAnLi9EYXRhR3JpZFN0eWxlcyc7XG5cbmNvbnN0IERFRkFVTFRfQ09MVU1OX1dJRFRIID0gMTAwO1xuY29uc3QgREVGQVVMVF9HUk9XX1JBVElPID0gMDtcbmNvbnN0IERFRkFVTFRfU0hSSU5LX1JBVElPID0gMDtcbmNvbnN0IERFRkFVTFRfTUlOX1dJRFRIID0gMzA7XG5jb25zdCBERUZBVUxUX01BWF9XSURUSCA9ICdub25lJztcblxuY29uc3QgREFUQV9HUklEX1JPV19TSVpFUl9TVFlMRVMgPSB7XG4gIC4uLkJPRFlfUk9XX1NUWUxFUyxcbiAgLi4ueyBoZWlnaHQ6ICcwcHgnIH0sXG59O1xuXG5AUmFkaXVtXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUeGxEYXRhR3JpZFJvd1NpemVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuXG4gICAgdGhpcy5fZGVib3VuY2VkT25TaXplVXBkYXRlID0gZGVib3VuY2UodGhpcy5fb25TaXplVXBkYXRlLCA3MCk7XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9vblNpemVVcGRhdGUoKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fZGVib3VuY2VkT25TaXplVXBkYXRlKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9kZWJvdW5jZWRPblNpemVVcGRhdGUpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIHRoaXMuX29uU2l6ZVVwZGF0ZSgpO1xuICB9XG5cbiAgQGF1dG9iaW5kXG4gIF9vblNpemVVcGRhdGUoKSB7XG4gICAgY29uc3Qgd2lkdGhzID0gdGhpcy5wcm9wcy5jb2x1bW5Nb2RlbC5tYXAoKG1vZGVsLCBpbmRleCkgPT4gKFxuICAgICAgZmluZERPTU5vZGUodGhpcy5yZWZzW2Bjb2x1bW4tJHtpbmRleH1gXSkub2Zmc2V0V2lkdGhcbiAgICApKTtcbiAgICB0aGlzLnByb3BzLm9uUm93U2l6ZUNoYW5nZSh3aWR0aHMpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY29sdW1uTW9kZWwgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBjZWxscyA9IGNvbHVtbk1vZGVsLm1hcCgobW9kZWwsIGluZGV4KSA9PiB7XG4gICAgICBjb25zdCBzdHlsZXMgPSB7XG4gICAgICAgIGZsZXhCYXNpczogbW9kZWwud2lkdGggfHwgREVGQVVMVF9DT0xVTU5fV0lEVEgsXG4gICAgICAgIGZsZXhHcm93OiBtb2RlbC5ncm93UmF0aW8gfHwgREVGQVVMVF9HUk9XX1JBVElPLFxuICAgICAgICBmbGV4U2hyaW5rOiBERUZBVUxUX1NIUklOS19SQVRJTyxcbiAgICAgICAgbWF4V2lkdGg6IG1vZGVsLm1heFdpZHRoIHx8IERFRkFVTFRfTUFYX1dJRFRILFxuICAgICAgICBtaW5XaWR0aDogbW9kZWwubWluV2lkdGggfHwgREVGQVVMVF9NSU5fV0lEVEgsXG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgc3R5bGU9e3N0eWxlc31cbiAgICAgICAgICBrZXk9e21vZGVsLmtleX1cbiAgICAgICAgICByZWY9e2Bjb2x1bW4tJHtpbmRleH1gfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGRhdGEtY29tcG9uZW50PVwiVHhsRGF0YUdyaWRSb3dTaXplclwiXG4gICAgICAgIHN0eWxlPXtEQVRBX0dSSURfUk9XX1NJWkVSX1NUWUxFU31cbiAgICAgID5cbiAgICAgICAge2NlbGxzfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5UeGxEYXRhR3JpZFJvd1NpemVyLnByb3BUeXBlcyA9IHtcbiAgY29sdW1uTW9kZWw6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZCwgLy8gaXMgdmFsaWRhdGVkIGhpZ2hlciB1cFxuICBvblJvd1NpemVDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuIl19