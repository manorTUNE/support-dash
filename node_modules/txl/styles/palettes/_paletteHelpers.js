'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _clone = require('lodash/clone');

var _clone2 = _interopRequireDefault(_clone);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DARK_CONTRAST_COLOR = '#1B222E';
var LIGHT_CONTRAST_COLOR = '#FFFFFF';

var getContrastColor = function getContrastColor(shade, lightShades) {
  return lightShades.indexOf(shade) >= 0 ? LIGHT_CONTRAST_COLOR : DARK_CONTRAST_COLOR;
};

var generatePalette = function generatePalette(paletteIn) {
  var paletteOut = (0, _clone2.default)(paletteIn);
  var lightShades = paletteIn.contrastLightColors;

  delete paletteOut.contrastLightColors;
  delete paletteOut.contrastDarkColors;

  (0, _keys2.default)(paletteOut).forEach(function (shade) {
    paletteOut[shade + 'c'] = getContrastColor(shade, lightShades);
  });
  return paletteOut;
};
var _default = generatePalette;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DARK_CONTRAST_COLOR, 'DARK_CONTRAST_COLOR', 'src/styles/palettes/_paletteHelpers.js');

  __REACT_HOT_LOADER__.register(LIGHT_CONTRAST_COLOR, 'LIGHT_CONTRAST_COLOR', 'src/styles/palettes/_paletteHelpers.js');

  __REACT_HOT_LOADER__.register(getContrastColor, 'getContrastColor', 'src/styles/palettes/_paletteHelpers.js');

  __REACT_HOT_LOADER__.register(generatePalette, 'generatePalette', 'src/styles/palettes/_paletteHelpers.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/styles/palettes/_paletteHelpers.js');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZXMvcGFsZXR0ZXMvX3BhbGV0dGVIZWxwZXJzLmpzIl0sIm5hbWVzIjpbIkRBUktfQ09OVFJBU1RfQ09MT1IiLCJMSUdIVF9DT05UUkFTVF9DT0xPUiIsImdldENvbnRyYXN0Q29sb3IiLCJzaGFkZSIsImxpZ2h0U2hhZGVzIiwiaW5kZXhPZiIsImdlbmVyYXRlUGFsZXR0ZSIsInBhbGV0dGVJbiIsInBhbGV0dGVPdXQiLCJjb250cmFzdExpZ2h0Q29sb3JzIiwiY29udHJhc3REYXJrQ29sb3JzIiwiZm9yRWFjaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7QUFFQSxJQUFNQSxzQkFBc0IsU0FBNUI7QUFDQSxJQUFNQyx1QkFBdUIsU0FBN0I7O0FBRUEsSUFBTUMsbUJBQW1CLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsS0FBRCxFQUFRQyxXQUFSO0FBQUEsU0FDdkJBLFlBQVlDLE9BQVosQ0FBb0JGLEtBQXBCLEtBQThCLENBQTlCLEdBQWtDRixvQkFBbEMsR0FBeURELG1CQURsQztBQUFBLENBQXpCOztBQUlBLElBQU1NLGtCQUFrQixTQUFsQkEsZUFBa0IsQ0FBQ0MsU0FBRCxFQUFlO0FBQ3JDLE1BQU1DLGFBQWEscUJBQU1ELFNBQU4sQ0FBbkI7QUFDQSxNQUFNSCxjQUFjRyxVQUFVRSxtQkFBOUI7O0FBRUEsU0FBT0QsV0FBV0MsbUJBQWxCO0FBQ0EsU0FBT0QsV0FBV0Usa0JBQWxCOztBQUVBLHNCQUFZRixVQUFaLEVBQXdCRyxPQUF4QixDQUFnQyxVQUFDUixLQUFELEVBQVc7QUFDekNLLGVBQWNMLEtBQWQsVUFBMEJELGlCQUFpQkMsS0FBakIsRUFBd0JDLFdBQXhCLENBQTFCO0FBQ0QsR0FGRDtBQUdBLFNBQU9JLFVBQVA7QUFDRCxDQVhEO2VBWWVGLGU7Ozs7Ozs7OztnQ0FuQlROLG1COztnQ0FDQUMsb0I7O2dDQUVBQyxnQjs7Z0NBSUFJLGUiLCJmaWxlIjoiX3BhbGV0dGVIZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsb25lIGZyb20gJ2xvZGFzaC9jbG9uZSc7XG5cbmNvbnN0IERBUktfQ09OVFJBU1RfQ09MT1IgPSAnIzFCMjIyRSc7XG5jb25zdCBMSUdIVF9DT05UUkFTVF9DT0xPUiA9ICcjRkZGRkZGJztcblxuY29uc3QgZ2V0Q29udHJhc3RDb2xvciA9IChzaGFkZSwgbGlnaHRTaGFkZXMpID0+IChcbiAgbGlnaHRTaGFkZXMuaW5kZXhPZihzaGFkZSkgPj0gMCA/IExJR0hUX0NPTlRSQVNUX0NPTE9SIDogREFSS19DT05UUkFTVF9DT0xPUlxuKTtcblxuY29uc3QgZ2VuZXJhdGVQYWxldHRlID0gKHBhbGV0dGVJbikgPT4ge1xuICBjb25zdCBwYWxldHRlT3V0ID0gY2xvbmUocGFsZXR0ZUluKTtcbiAgY29uc3QgbGlnaHRTaGFkZXMgPSBwYWxldHRlSW4uY29udHJhc3RMaWdodENvbG9ycztcblxuICBkZWxldGUgcGFsZXR0ZU91dC5jb250cmFzdExpZ2h0Q29sb3JzO1xuICBkZWxldGUgcGFsZXR0ZU91dC5jb250cmFzdERhcmtDb2xvcnM7XG5cbiAgT2JqZWN0LmtleXMocGFsZXR0ZU91dCkuZm9yRWFjaCgoc2hhZGUpID0+IHtcbiAgICBwYWxldHRlT3V0W2Ake3NoYWRlfWNgXSA9IGdldENvbnRyYXN0Q29sb3Ioc2hhZGUsIGxpZ2h0U2hhZGVzKTtcbiAgfSk7XG4gIHJldHVybiBwYWxldHRlT3V0O1xufTtcbmV4cG9ydCBkZWZhdWx0IGdlbmVyYXRlUGFsZXR0ZTtcbiJdfQ==