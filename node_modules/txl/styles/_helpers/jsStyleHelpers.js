'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPrefixedStyle = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

exports.getPrefixedCssRuleset = getPrefixedCssRuleset;
exports.setStylesForNode = setStylesForNode;
exports.deleteRulesetBySelector = deleteRulesetBySelector;

var _prefixer = require('radium/lib/prefixer');

var _findIndex = require('lodash/findIndex');

var _findIndex2 = _interopRequireDefault(_findIndex);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getPrefixedCssRuleset(selector, rules) {
  var rulesPrefixed = (0, _prefixer.getPrefixedStyle)(rules);
  var rulesTmp = [];
  (0, _keys2.default)(rulesPrefixed).forEach(function (rule) {
    rulesTmp.push(rule + ' : ' + rulesPrefixed[rule] + ';');
  });
  return selector + ' {' + rulesTmp.join('') + '}';
}

function setStylesForNode(elem, styles) {
  var prefixedStyles = (0, _prefixer.getPrefixedStyle)(styles);
  (0, _keys2.default)(prefixedStyles).forEach(function (style) {
    elem.style[style] = prefixedStyles[style]; // eslint-disable-line no-param-reassign
  });
}

function deleteRulesetBySelector(stylesheet, selector) {
  if (!(stylesheet && stylesheet.rules)) {
    return;
  }

  var rules = stylesheet.rules;
  var fIndex = (0, _findIndex2.default)((0, _keys2.default)(rules), function (key) {
    return selector === rules[key].selectorText;
  });
  if (fIndex === -1) {
    return;
  }
  stylesheet.deleteRule(fIndex);
}

exports.getPrefixedStyle = _prefixer.getPrefixedStyle;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(getPrefixedCssRuleset, 'getPrefixedCssRuleset', 'src/styles/_helpers/jsStyleHelpers.js');

  __REACT_HOT_LOADER__.register(setStylesForNode, 'setStylesForNode', 'src/styles/_helpers/jsStyleHelpers.js');

  __REACT_HOT_LOADER__.register(deleteRulesetBySelector, 'deleteRulesetBySelector', 'src/styles/_helpers/jsStyleHelpers.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZXMvX2hlbHBlcnMvanNTdHlsZUhlbHBlcnMuanMiXSwibmFtZXMiOlsiZ2V0UHJlZml4ZWRDc3NSdWxlc2V0Iiwic2V0U3R5bGVzRm9yTm9kZSIsImRlbGV0ZVJ1bGVzZXRCeVNlbGVjdG9yIiwic2VsZWN0b3IiLCJydWxlcyIsInJ1bGVzUHJlZml4ZWQiLCJydWxlc1RtcCIsImZvckVhY2giLCJydWxlIiwicHVzaCIsImpvaW4iLCJlbGVtIiwic3R5bGVzIiwicHJlZml4ZWRTdHlsZXMiLCJzdHlsZSIsInN0eWxlc2hlZXQiLCJmSW5kZXgiLCJrZXkiLCJzZWxlY3RvclRleHQiLCJkZWxldGVSdWxlIiwiZ2V0UHJlZml4ZWRTdHlsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7UUFHZ0JBLHFCLEdBQUFBLHFCO1FBU0FDLGdCLEdBQUFBLGdCO1FBT0FDLHVCLEdBQUFBLHVCOztBQW5CaEI7O0FBQ0E7Ozs7OztBQUVPLFNBQVNGLHFCQUFULENBQStCRyxRQUEvQixFQUF5Q0MsS0FBekMsRUFBZ0Q7QUFDckQsTUFBTUMsZ0JBQWdCLGdDQUFpQkQsS0FBakIsQ0FBdEI7QUFDQSxNQUFNRSxXQUFXLEVBQWpCO0FBQ0Esc0JBQVlELGFBQVosRUFBMkJFLE9BQTNCLENBQW1DLFVBQUNDLElBQUQsRUFBVTtBQUMzQ0YsYUFBU0csSUFBVCxDQUFpQkQsSUFBakIsV0FBMkJILGNBQWNHLElBQWQsQ0FBM0I7QUFDRCxHQUZEO0FBR0EsU0FBVUwsUUFBVixVQUF1QkcsU0FBU0ksSUFBVCxDQUFjLEVBQWQsQ0FBdkI7QUFDRDs7QUFFTSxTQUFTVCxnQkFBVCxDQUEwQlUsSUFBMUIsRUFBZ0NDLE1BQWhDLEVBQXdDO0FBQzdDLE1BQU1DLGlCQUFpQixnQ0FBaUJELE1BQWpCLENBQXZCO0FBQ0Esc0JBQVlDLGNBQVosRUFBNEJOLE9BQTVCLENBQW9DLFVBQUNPLEtBQUQsRUFBVztBQUM3Q0gsU0FBS0csS0FBTCxDQUFXQSxLQUFYLElBQW9CRCxlQUFlQyxLQUFmLENBQXBCLENBRDZDLENBQ0Y7QUFDNUMsR0FGRDtBQUdEOztBQUVNLFNBQVNaLHVCQUFULENBQWlDYSxVQUFqQyxFQUE2Q1osUUFBN0MsRUFBdUQ7QUFDNUQsTUFBSSxFQUFFWSxjQUFjQSxXQUFXWCxLQUEzQixDQUFKLEVBQXVDO0FBQUU7QUFBUzs7QUFFbEQsTUFBTUEsUUFBUVcsV0FBV1gsS0FBekI7QUFDQSxNQUFNWSxTQUFTLHlCQUFVLG9CQUFZWixLQUFaLENBQVYsRUFBOEI7QUFBQSxXQUFPRCxhQUFhQyxNQUFNYSxHQUFOLEVBQVdDLFlBQS9CO0FBQUEsR0FBOUIsQ0FBZjtBQUNBLE1BQUlGLFdBQVcsQ0FBQyxDQUFoQixFQUFtQjtBQUFFO0FBQVM7QUFDOUJELGFBQVdJLFVBQVgsQ0FBc0JILE1BQXRCO0FBQ0Q7O1FBR0NJLGdCOzs7Ozs7OztnQ0ExQmNwQixxQjs7Z0NBU0FDLGdCOztnQ0FPQUMsdUIiLCJmaWxlIjoianNTdHlsZUhlbHBlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRQcmVmaXhlZFN0eWxlIH0gZnJvbSAncmFkaXVtL2xpYi9wcmVmaXhlcic7XG5pbXBvcnQgZmluZEluZGV4IGZyb20gJ2xvZGFzaC9maW5kSW5kZXgnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJlZml4ZWRDc3NSdWxlc2V0KHNlbGVjdG9yLCBydWxlcykge1xuICBjb25zdCBydWxlc1ByZWZpeGVkID0gZ2V0UHJlZml4ZWRTdHlsZShydWxlcyk7XG4gIGNvbnN0IHJ1bGVzVG1wID0gW107XG4gIE9iamVjdC5rZXlzKHJ1bGVzUHJlZml4ZWQpLmZvckVhY2goKHJ1bGUpID0+IHtcbiAgICBydWxlc1RtcC5wdXNoKGAke3J1bGV9IDogJHtydWxlc1ByZWZpeGVkW3J1bGVdfTtgKTtcbiAgfSk7XG4gIHJldHVybiBgJHtzZWxlY3Rvcn0geyR7cnVsZXNUbXAuam9pbignJyl9fWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRTdHlsZXNGb3JOb2RlKGVsZW0sIHN0eWxlcykge1xuICBjb25zdCBwcmVmaXhlZFN0eWxlcyA9IGdldFByZWZpeGVkU3R5bGUoc3R5bGVzKTtcbiAgT2JqZWN0LmtleXMocHJlZml4ZWRTdHlsZXMpLmZvckVhY2goKHN0eWxlKSA9PiB7XG4gICAgZWxlbS5zdHlsZVtzdHlsZV0gPSBwcmVmaXhlZFN0eWxlc1tzdHlsZV07IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVSdWxlc2V0QnlTZWxlY3RvcihzdHlsZXNoZWV0LCBzZWxlY3Rvcikge1xuICBpZiAoIShzdHlsZXNoZWV0ICYmIHN0eWxlc2hlZXQucnVsZXMpKSB7IHJldHVybjsgfVxuXG4gIGNvbnN0IHJ1bGVzID0gc3R5bGVzaGVldC5ydWxlcztcbiAgY29uc3QgZkluZGV4ID0gZmluZEluZGV4KE9iamVjdC5rZXlzKHJ1bGVzKSwga2V5ID0+IHNlbGVjdG9yID09PSBydWxlc1trZXldLnNlbGVjdG9yVGV4dCk7XG4gIGlmIChmSW5kZXggPT09IC0xKSB7IHJldHVybjsgfVxuICBzdHlsZXNoZWV0LmRlbGV0ZVJ1bGUoZkluZGV4KTtcbn1cblxuZXhwb3J0IHtcbiAgZ2V0UHJlZml4ZWRTdHlsZSxcbn07XG4iXX0=