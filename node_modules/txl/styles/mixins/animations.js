'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PULSE_DURATION = exports.SPIN_DURATION = exports.PLACEHOLDER_ANIMATION_NAME = undefined;
exports.getSpinStyles = getSpinStyles;
exports.getPulseStyles = getPulseStyles;

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @NOTE: See https://github.com/FormidableLabs/radium/tree/v0.18.1/docs/api#keyframes
 * Radium needs a default shorthand animation property, which it will
 * then go through and replace with a newly generated name that maps to the
 * keyframes generated and inserted into the style block generated by StyleRoot.
 */
var PLACEHOLDER_ANIMATION_NAME = exports.PLACEHOLDER_ANIMATION_NAME = 'placeholder';

var SPIN_DURATION = exports.SPIN_DURATION = 650;

var SPIN_KEYFRAME = _radium2.default.keyframes({
  '0%': { transform: 'rotate(0deg)' },
  '100%': { transform: 'rotate(360deg)' }
}, 'spin');

var PULSE_DURATION = exports.PULSE_DURATION = 1300;

var PULSE_KEYFRAME = _radium2.default.keyframes({
  '0%': {
    opacity: 1,
    transform: 'scale(1)'
  },
  '100%': {
    opacity: 0,
    transform: 'scale(.3)'
  }
}, 'pulse');

function getSpinStyles() {
  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SPIN_DURATION;

  return {
    animation: PLACEHOLDER_ANIMATION_NAME,
    animationDirection: 'normal',
    animationDuration: duration + 'ms',
    animationIterationCount: 'infinite',
    animationName: SPIN_KEYFRAME,
    animationTimingFunction: 'linear'
  };
}

function getPulseStyles() {
  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PULSE_DURATION;

  return {
    animation: PLACEHOLDER_ANIMATION_NAME,
    animationDirection: 'normal',
    animationDuration: duration + 'ms',
    animationIterationCount: 'infinite',
    animationName: PULSE_KEYFRAME
  };
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(PLACEHOLDER_ANIMATION_NAME, 'PLACEHOLDER_ANIMATION_NAME', 'src/styles/mixins/animations.js');

  __REACT_HOT_LOADER__.register(SPIN_DURATION, 'SPIN_DURATION', 'src/styles/mixins/animations.js');

  __REACT_HOT_LOADER__.register(SPIN_KEYFRAME, 'SPIN_KEYFRAME', 'src/styles/mixins/animations.js');

  __REACT_HOT_LOADER__.register(PULSE_DURATION, 'PULSE_DURATION', 'src/styles/mixins/animations.js');

  __REACT_HOT_LOADER__.register(PULSE_KEYFRAME, 'PULSE_KEYFRAME', 'src/styles/mixins/animations.js');

  __REACT_HOT_LOADER__.register(getSpinStyles, 'getSpinStyles', 'src/styles/mixins/animations.js');

  __REACT_HOT_LOADER__.register(getPulseStyles, 'getPulseStyles', 'src/styles/mixins/animations.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZXMvbWl4aW5zL2FuaW1hdGlvbnMuanMiXSwibmFtZXMiOlsiZ2V0U3BpblN0eWxlcyIsImdldFB1bHNlU3R5bGVzIiwiUExBQ0VIT0xERVJfQU5JTUFUSU9OX05BTUUiLCJTUElOX0RVUkFUSU9OIiwiU1BJTl9LRVlGUkFNRSIsImtleWZyYW1lcyIsInRyYW5zZm9ybSIsIlBVTFNFX0RVUkFUSU9OIiwiUFVMU0VfS0VZRlJBTUUiLCJvcGFjaXR5IiwiZHVyYXRpb24iLCJhbmltYXRpb24iLCJhbmltYXRpb25EaXJlY3Rpb24iLCJhbmltYXRpb25EdXJhdGlvbiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYW5pbWF0aW9uTmFtZSIsImFuaW1hdGlvblRpbWluZ0Z1bmN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7UUE4QmdCQSxhLEdBQUFBLGE7UUFXQUMsYyxHQUFBQSxjOztBQXpDaEI7Ozs7OztBQUVBOzs7Ozs7QUFNTyxJQUFNQyxrRUFBNkIsYUFBbkM7O0FBRUEsSUFBTUMsd0NBQWdCLEdBQXRCOztBQUVQLElBQU1DLGdCQUFnQixpQkFBT0MsU0FBUCxDQUFpQjtBQUNyQyxRQUFNLEVBQUVDLFdBQVcsY0FBYixFQUQrQjtBQUVyQyxVQUFRLEVBQUVBLFdBQVcsZ0JBQWI7QUFGNkIsQ0FBakIsRUFHbkIsTUFIbUIsQ0FBdEI7O0FBS08sSUFBTUMsMENBQWlCLElBQXZCOztBQUVQLElBQU1DLGlCQUFpQixpQkFBT0gsU0FBUCxDQUFpQjtBQUN0QyxRQUFNO0FBQ0pJLGFBQVMsQ0FETDtBQUVKSCxlQUFXO0FBRlAsR0FEZ0M7QUFLdEMsVUFBUTtBQUNORyxhQUFTLENBREg7QUFFTkgsZUFBVztBQUZMO0FBTDhCLENBQWpCLEVBU3BCLE9BVG9CLENBQXZCOztBQVdPLFNBQVNOLGFBQVQsR0FBaUQ7QUFBQSxNQUExQlUsUUFBMEIsdUVBQWZQLGFBQWU7O0FBQ3RELFNBQU87QUFDTFEsZUFBV1QsMEJBRE47QUFFTFUsd0JBQW9CLFFBRmY7QUFHTEMsdUJBQXNCSCxRQUF0QixPQUhLO0FBSUxJLDZCQUF5QixVQUpwQjtBQUtMQyxtQkFBZVgsYUFMVjtBQU1MWSw2QkFBeUI7QUFOcEIsR0FBUDtBQVFEOztBQUVNLFNBQVNmLGNBQVQsR0FBbUQ7QUFBQSxNQUEzQlMsUUFBMkIsdUVBQWhCSCxjQUFnQjs7QUFDeEQsU0FBTztBQUNMSSxlQUFXVCwwQkFETjtBQUVMVSx3QkFBb0IsUUFGZjtBQUdMQyx1QkFBc0JILFFBQXRCLE9BSEs7QUFJTEksNkJBQXlCLFVBSnBCO0FBS0xDLG1CQUFlUDtBQUxWLEdBQVA7QUFPRDs7Ozs7Ozs7Z0NBekNZTiwwQjs7Z0NBRUFDLGE7O2dDQUVQQyxhOztnQ0FLT0csYzs7Z0NBRVBDLGM7O2dDQVdVUixhOztnQ0FXQUMsYyIsImZpbGUiOiJhbmltYXRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJhZGl1bSBmcm9tICdyYWRpdW0nO1xuXG4vKipcbiAqIEBOT1RFOiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0Zvcm1pZGFibGVMYWJzL3JhZGl1bS90cmVlL3YwLjE4LjEvZG9jcy9hcGkja2V5ZnJhbWVzXG4gKiBSYWRpdW0gbmVlZHMgYSBkZWZhdWx0IHNob3J0aGFuZCBhbmltYXRpb24gcHJvcGVydHksIHdoaWNoIGl0IHdpbGxcbiAqIHRoZW4gZ28gdGhyb3VnaCBhbmQgcmVwbGFjZSB3aXRoIGEgbmV3bHkgZ2VuZXJhdGVkIG5hbWUgdGhhdCBtYXBzIHRvIHRoZVxuICoga2V5ZnJhbWVzIGdlbmVyYXRlZCBhbmQgaW5zZXJ0ZWQgaW50byB0aGUgc3R5bGUgYmxvY2sgZ2VuZXJhdGVkIGJ5IFN0eWxlUm9vdC5cbiAqL1xuZXhwb3J0IGNvbnN0IFBMQUNFSE9MREVSX0FOSU1BVElPTl9OQU1FID0gJ3BsYWNlaG9sZGVyJztcblxuZXhwb3J0IGNvbnN0IFNQSU5fRFVSQVRJT04gPSA2NTA7XG5cbmNvbnN0IFNQSU5fS0VZRlJBTUUgPSBSYWRpdW0ua2V5ZnJhbWVzKHtcbiAgJzAlJzogeyB0cmFuc2Zvcm06ICdyb3RhdGUoMGRlZyknIH0sXG4gICcxMDAlJzogeyB0cmFuc2Zvcm06ICdyb3RhdGUoMzYwZGVnKScgfSxcbn0sICdzcGluJyk7XG5cbmV4cG9ydCBjb25zdCBQVUxTRV9EVVJBVElPTiA9IDEzMDA7XG5cbmNvbnN0IFBVTFNFX0tFWUZSQU1FID0gUmFkaXVtLmtleWZyYW1lcyh7XG4gICcwJSc6IHtcbiAgICBvcGFjaXR5OiAxLFxuICAgIHRyYW5zZm9ybTogJ3NjYWxlKDEpJyxcbiAgfSxcbiAgJzEwMCUnOiB7XG4gICAgb3BhY2l0eTogMCxcbiAgICB0cmFuc2Zvcm06ICdzY2FsZSguMyknLFxuICB9LFxufSwgJ3B1bHNlJyk7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTcGluU3R5bGVzKGR1cmF0aW9uID0gU1BJTl9EVVJBVElPTikge1xuICByZXR1cm4ge1xuICAgIGFuaW1hdGlvbjogUExBQ0VIT0xERVJfQU5JTUFUSU9OX05BTUUsXG4gICAgYW5pbWF0aW9uRGlyZWN0aW9uOiAnbm9ybWFsJyxcbiAgICBhbmltYXRpb25EdXJhdGlvbjogYCR7ZHVyYXRpb259bXNgLFxuICAgIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAnaW5maW5pdGUnLFxuICAgIGFuaW1hdGlvbk5hbWU6IFNQSU5fS0VZRlJBTUUsXG4gICAgYW5pbWF0aW9uVGltaW5nRnVuY3Rpb246ICdsaW5lYXInLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHVsc2VTdHlsZXMoZHVyYXRpb24gPSBQVUxTRV9EVVJBVElPTikge1xuICByZXR1cm4ge1xuICAgIGFuaW1hdGlvbjogUExBQ0VIT0xERVJfQU5JTUFUSU9OX05BTUUsXG4gICAgYW5pbWF0aW9uRGlyZWN0aW9uOiAnbm9ybWFsJyxcbiAgICBhbmltYXRpb25EdXJhdGlvbjogYCR7ZHVyYXRpb259bXNgLFxuICAgIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAnaW5maW5pdGUnLFxuICAgIGFuaW1hdGlvbk5hbWU6IFBVTFNFX0tFWUZSQU1FLFxuICB9O1xufVxuIl19