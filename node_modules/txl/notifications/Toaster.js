'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Base = require('../base/Base');

var _Toast = require('./Toast');

var _Toast2 = _interopRequireDefault(_Toast);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var TOASTER_STYLE = {
  display: 'inline-flex',
  height: '0',
  // @TODO: Merge from prop (offset?) into calc when component is updated
  left: '50%',
  overflow: 'visible',
  // @TODO: When this component is updated to not req positioned container, change to position fixed
  position: 'absolute',
  width: '100%'
};

// @NOTE: Safari will do bad things if the order of the translate x/y is changed
var POPUP_KEYFRAME = _radium2.default.keyframes({
  '0%': {
    // 18gu is 2x the height of a toast
    transform: 'translateX(-50%) translateY(' + (0, _helpers.gridUnits)(18) + ')'
  },
  '100%': {
    transform: 'translateX(-50%)'
  }
});

var getPopupStyles = function getPopupStyles() {
  return {
    animation: POPUP_KEYFRAME,
    animationDirection: 'normal',
    animationDuration: '100ms',
    animationFillMode: 'forwards',
    animationIterationCount: '1',
    animationTimingFunction: 'ease-out'
  };
};

var TxlToaster = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlToaster, _React$Component);

  function TxlToaster() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlToaster);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlToaster.__proto__ || (0, _getPrototypeOf2.default)(TxlToaster)).call.apply(_ref, [this].concat(args)));

    _this._notificationQueue = [];
    _this._busy = false;

    _this.state = {
      currentNotification: null
    };
    return _this;
  }

  (0, _createClass3.default)(TxlToaster, [{
    key: 'push',
    value: function push(toast) {
      if (!toast.message || !toast.lifetime) {
        // eslint-disable-next-line no-console
        // console.warn('TxlToaster: Toast is missing message or lifetime data and will be ignored');
        // is this warning important? if so use invariant
        return;
      }

      var toastPositionStyles = (0, _extends3.default)({}, getPopupStyles(), {
        bottom: (0, _helpers.gridUnits)(2),
        position: 'absolute',
        transform: 'translateX(-50%)'
      });

      this._notificationQueue.push(_react2.default.createElement(
        _Toast2.default,
        {
          _style: toastPositionStyles,
          lifetime: toast.lifetime,
          onUndo: toast.onUndo,
          onExpire: this._onToastExpire
        },
        toast.message
      ));
      this._pullFromQueue();
    }
  }, {
    key: '_pullFromQueue',
    value: function _pullFromQueue() {
      if (!this._notificationQueue.length || this._busy) {
        return;
      }
      this._busy = true;
      this.setState({ currentNotification: this._notificationQueue.shift() });
    }
  }, {
    key: '_onToastExpire',
    value: function _onToastExpire() {
      var _this2 = this;

      this.setState({ currentNotification: null }, function () {
        _this2._busy = false;
        _this2._pullFromQueue();
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        {
          'data-component': 'TxlToaster',
          style: TOASTER_STYLE
        },
        this.state.currentNotification
      );
    }
  }]);
  return TxlToaster;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, 'push', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, 'push'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_pullFromQueue', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_pullFromQueue'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_onToastExpire', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_onToastExpire'), _class2.prototype)), _class2)) || _class;

exports.default = TxlToaster;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(TOASTER_STYLE, 'TOASTER_STYLE', 'src/notifications/Toaster.jsx');

  __REACT_HOT_LOADER__.register(POPUP_KEYFRAME, 'POPUP_KEYFRAME', 'src/notifications/Toaster.jsx');

  __REACT_HOT_LOADER__.register(getPopupStyles, 'getPopupStyles', 'src/notifications/Toaster.jsx');

  __REACT_HOT_LOADER__.register(TxlToaster, 'TxlToaster', 'src/notifications/Toaster.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub3RpZmljYXRpb25zL1RvYXN0ZXIuanN4Il0sIm5hbWVzIjpbIlRPQVNURVJfU1RZTEUiLCJkaXNwbGF5IiwiaGVpZ2h0IiwibGVmdCIsIm92ZXJmbG93IiwicG9zaXRpb24iLCJ3aWR0aCIsIlBPUFVQX0tFWUZSQU1FIiwia2V5ZnJhbWVzIiwidHJhbnNmb3JtIiwiZ2V0UG9wdXBTdHlsZXMiLCJhbmltYXRpb24iLCJhbmltYXRpb25EaXJlY3Rpb24iLCJhbmltYXRpb25EdXJhdGlvbiIsImFuaW1hdGlvbkZpbGxNb2RlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJhbmltYXRpb25UaW1pbmdGdW5jdGlvbiIsIlR4bFRvYXN0ZXIiLCJhcmdzIiwiX25vdGlmaWNhdGlvblF1ZXVlIiwiX2J1c3kiLCJzdGF0ZSIsImN1cnJlbnROb3RpZmljYXRpb24iLCJ0b2FzdCIsIm1lc3NhZ2UiLCJsaWZldGltZSIsInRvYXN0UG9zaXRpb25TdHlsZXMiLCJib3R0b20iLCJwdXNoIiwib25VbmRvIiwiX29uVG9hc3RFeHBpcmUiLCJfcHVsbEZyb21RdWV1ZSIsImxlbmd0aCIsInNldFN0YXRlIiwic2hpZnQiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUE7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsZ0JBQWdCO0FBQ3BCQyxXQUFTLGFBRFc7QUFFcEJDLFVBQVEsR0FGWTtBQUdwQjtBQUNBQyxRQUFNLEtBSmM7QUFLcEJDLFlBQVUsU0FMVTtBQU1wQjtBQUNBQyxZQUFVLFVBUFU7QUFRcEJDLFNBQU87QUFSYSxDQUF0Qjs7QUFXQTtBQUNBLElBQU1DLGlCQUFpQixpQkFBT0MsU0FBUCxDQUFpQjtBQUN0QyxRQUFNO0FBQ0o7QUFDQUMsZ0RBQTBDLHdCQUFHLEVBQUgsQ0FBMUM7QUFGSSxHQURnQztBQUt0QyxVQUFRO0FBQ05BLGVBQVc7QUFETDtBQUw4QixDQUFqQixDQUF2Qjs7QUFVQSxJQUFNQyxpQkFBaUIsU0FBakJBLGNBQWlCO0FBQUEsU0FBTztBQUM1QkMsZUFBV0osY0FEaUI7QUFFNUJLLHdCQUFvQixRQUZRO0FBRzVCQyx1QkFBbUIsT0FIUztBQUk1QkMsdUJBQW1CLFVBSlM7QUFLNUJDLDZCQUF5QixHQUxHO0FBTTVCQyw2QkFBeUI7QUFORyxHQUFQO0FBQUEsQ0FBdkI7O0lBVXFCQyxVOzs7QUFDbkIsd0JBQXFCO0FBQUE7O0FBQUE7O0FBQUEsc0NBQU5DLElBQU07QUFBTkEsVUFBTTtBQUFBOztBQUFBLHlLQUNWQSxJQURVOztBQUVuQixVQUFLQyxrQkFBTCxHQUEwQixFQUExQjtBQUNBLFVBQUtDLEtBQUwsR0FBYSxLQUFiOztBQUVBLFVBQUtDLEtBQUwsR0FBYTtBQUNYQywyQkFBcUI7QUFEVixLQUFiO0FBTG1CO0FBUXBCOzs7O3lCQUdJQyxLLEVBQU87QUFDVixVQUFJLENBQUNBLE1BQU1DLE9BQVAsSUFBa0IsQ0FBQ0QsTUFBTUUsUUFBN0IsRUFBdUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDRDs7QUFFRCxVQUFNQyxpREFDRGhCLGdCQURDO0FBRUppQixnQkFBUSx3QkFBRyxDQUFILENBRko7QUFHSnRCLGtCQUFVLFVBSE47QUFJSkksbUJBQVc7QUFKUCxRQUFOOztBQU9BLFdBQUtVLGtCQUFMLENBQXdCUyxJQUF4QixDQUNFO0FBQUE7QUFBQTtBQUNFLGtCQUFRRixtQkFEVjtBQUVFLG9CQUFVSCxNQUFNRSxRQUZsQjtBQUdFLGtCQUFRRixNQUFNTSxNQUhoQjtBQUlFLG9CQUFVLEtBQUtDO0FBSmpCO0FBTUdQLGNBQU1DO0FBTlQsT0FERjtBQVVBLFdBQUtPLGNBQUw7QUFDRDs7O3FDQUdnQjtBQUNmLFVBQUksQ0FBQyxLQUFLWixrQkFBTCxDQUF3QmEsTUFBekIsSUFBbUMsS0FBS1osS0FBNUMsRUFBbUQ7QUFBRTtBQUFTO0FBQzlELFdBQUtBLEtBQUwsR0FBYSxJQUFiO0FBQ0EsV0FBS2EsUUFBTCxDQUFjLEVBQUVYLHFCQUFxQixLQUFLSCxrQkFBTCxDQUF3QmUsS0FBeEIsRUFBdkIsRUFBZDtBQUNEOzs7cUNBR2dCO0FBQUE7O0FBQ2YsV0FBS0QsUUFBTCxDQUFjLEVBQUVYLHFCQUFxQixJQUF2QixFQUFkLEVBQTZDLFlBQU07QUFDakQsZUFBS0YsS0FBTCxHQUFhLEtBQWI7QUFDQSxlQUFLVyxjQUFMO0FBQ0QsT0FIRDtBQUlEOzs7NkJBRVE7QUFDUCxhQUNFO0FBQUE7QUFBQTtBQUNFLDRCQUFlLFlBRGpCO0FBRUUsaUJBQU8vQjtBQUZUO0FBSUcsYUFBS3FCLEtBQUwsQ0FBV0M7QUFKZCxPQURGO0FBUUQ7OztFQWhFcUMsZ0JBQU1hLFM7O2tCQUF6QmxCLFU7Ozs7Ozs7O2dDQWhDZmpCLGE7O2dDQVlBTyxjOztnQ0FVQUcsYzs7Z0NBVWVPLFUiLCJmaWxlIjoiVG9hc3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmFkaXVtIGZyb20gJ3JhZGl1bSc7XG5cbmltcG9ydCB7IGF1dG9iaW5kIH0gZnJvbSAnLi4vYmFzZS9CYXNlJztcbmltcG9ydCBUb2FzdCBmcm9tICcuL1RvYXN0JztcbmltcG9ydCB7IGdyaWRVbml0cyBhcyBndSB9IGZyb20gJy4uL3N0eWxlcy9oZWxwZXJzJztcblxuY29uc3QgVE9BU1RFUl9TVFlMRSA9IHtcbiAgZGlzcGxheTogJ2lubGluZS1mbGV4JyxcbiAgaGVpZ2h0OiAnMCcsXG4gIC8vIEBUT0RPOiBNZXJnZSBmcm9tIHByb3AgKG9mZnNldD8pIGludG8gY2FsYyB3aGVuIGNvbXBvbmVudCBpcyB1cGRhdGVkXG4gIGxlZnQ6ICc1MCUnLFxuICBvdmVyZmxvdzogJ3Zpc2libGUnLFxuICAvLyBAVE9ETzogV2hlbiB0aGlzIGNvbXBvbmVudCBpcyB1cGRhdGVkIHRvIG5vdCByZXEgcG9zaXRpb25lZCBjb250YWluZXIsIGNoYW5nZSB0byBwb3NpdGlvbiBmaXhlZFxuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgd2lkdGg6ICcxMDAlJyxcbn07XG5cbi8vIEBOT1RFOiBTYWZhcmkgd2lsbCBkbyBiYWQgdGhpbmdzIGlmIHRoZSBvcmRlciBvZiB0aGUgdHJhbnNsYXRlIHgveSBpcyBjaGFuZ2VkXG5jb25zdCBQT1BVUF9LRVlGUkFNRSA9IFJhZGl1bS5rZXlmcmFtZXMoe1xuICAnMCUnOiB7XG4gICAgLy8gMThndSBpcyAyeCB0aGUgaGVpZ2h0IG9mIGEgdG9hc3RcbiAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoJHtndSgxOCl9KWAsXG4gIH0sXG4gICcxMDAlJzoge1xuICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTUwJSknLFxuICB9LFxufSk7XG5cbmNvbnN0IGdldFBvcHVwU3R5bGVzID0gKCkgPT4gKHtcbiAgYW5pbWF0aW9uOiBQT1BVUF9LRVlGUkFNRSxcbiAgYW5pbWF0aW9uRGlyZWN0aW9uOiAnbm9ybWFsJyxcbiAgYW5pbWF0aW9uRHVyYXRpb246ICcxMDBtcycsXG4gIGFuaW1hdGlvbkZpbGxNb2RlOiAnZm9yd2FyZHMnLFxuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogJzEnLFxuICBhbmltYXRpb25UaW1pbmdGdW5jdGlvbjogJ2Vhc2Utb3V0Jyxcbn0pO1xuXG5AUmFkaXVtXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUeGxUb2FzdGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgIHRoaXMuX25vdGlmaWNhdGlvblF1ZXVlID0gW107XG4gICAgdGhpcy5fYnVzeSA9IGZhbHNlO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGN1cnJlbnROb3RpZmljYXRpb246IG51bGwsXG4gICAgfTtcbiAgfVxuXG4gIEBhdXRvYmluZFxuICBwdXNoKHRvYXN0KSB7XG4gICAgaWYgKCF0b2FzdC5tZXNzYWdlIHx8ICF0b2FzdC5saWZldGltZSkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIC8vIGNvbnNvbGUud2FybignVHhsVG9hc3RlcjogVG9hc3QgaXMgbWlzc2luZyBtZXNzYWdlIG9yIGxpZmV0aW1lIGRhdGEgYW5kIHdpbGwgYmUgaWdub3JlZCcpO1xuICAgICAgLy8gaXMgdGhpcyB3YXJuaW5nIGltcG9ydGFudD8gaWYgc28gdXNlIGludmFyaWFudFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHRvYXN0UG9zaXRpb25TdHlsZXMgPSB7XG4gICAgICAuLi5nZXRQb3B1cFN0eWxlcygpLFxuICAgICAgYm90dG9tOiBndSgyKSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTAlKScsXG4gICAgfTtcblxuICAgIHRoaXMuX25vdGlmaWNhdGlvblF1ZXVlLnB1c2goXG4gICAgICA8VG9hc3RcbiAgICAgICAgX3N0eWxlPXt0b2FzdFBvc2l0aW9uU3R5bGVzfVxuICAgICAgICBsaWZldGltZT17dG9hc3QubGlmZXRpbWV9XG4gICAgICAgIG9uVW5kbz17dG9hc3Qub25VbmRvfVxuICAgICAgICBvbkV4cGlyZT17dGhpcy5fb25Ub2FzdEV4cGlyZX1cbiAgICAgID5cbiAgICAgICAge3RvYXN0Lm1lc3NhZ2V9XG4gICAgICA8L1RvYXN0PlxuICAgICk7XG4gICAgdGhpcy5fcHVsbEZyb21RdWV1ZSgpO1xuICB9XG5cbiAgQGF1dG9iaW5kXG4gIF9wdWxsRnJvbVF1ZXVlKCkge1xuICAgIGlmICghdGhpcy5fbm90aWZpY2F0aW9uUXVldWUubGVuZ3RoIHx8IHRoaXMuX2J1c3kpIHsgcmV0dXJuOyB9XG4gICAgdGhpcy5fYnVzeSA9IHRydWU7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGN1cnJlbnROb3RpZmljYXRpb246IHRoaXMuX25vdGlmaWNhdGlvblF1ZXVlLnNoaWZ0KCkgfSk7XG4gIH1cblxuICBAYXV0b2JpbmRcbiAgX29uVG9hc3RFeHBpcmUoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGN1cnJlbnROb3RpZmljYXRpb246IG51bGwgfSwgKCkgPT4ge1xuICAgICAgdGhpcy5fYnVzeSA9IGZhbHNlO1xuICAgICAgdGhpcy5fcHVsbEZyb21RdWV1ZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGRhdGEtY29tcG9uZW50PVwiVHhsVG9hc3RlclwiXG4gICAgICAgIHN0eWxlPXtUT0FTVEVSX1NUWUxFfVxuICAgICAgPlxuICAgICAgICB7dGhpcy5zdGF0ZS5jdXJyZW50Tm90aWZpY2F0aW9ufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl19