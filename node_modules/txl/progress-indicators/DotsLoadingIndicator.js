'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _theme = require('../styles/theme');

var _animations = require('../styles/mixins/animations');

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DOT_COUNT = 5;

var STYLES = {
  container: {
    alignItems: 'center',
    display: 'flex',
    height: (0, _helpers.gridUnits)(2),
    justifyContent: 'space-between',
    width: (0, _helpers.gridUnits)(16)
  },
  dot: (0, _extends3.default)({}, (0, _helpers.square)('8px'), (0, _animations.getPulseStyles)(), {
    borderRadius: '50%',
    opacity: 0
  })
};

var shadeMap = {
  base: _theme.COLOR_ACCENT['500'],
  dark: _theme.COLOR_NEUTRAL['700'],
  light: _theme.COLOR_NEUTRAL['50']
};

function getDotStyles(index, shade) {
  var delayValue = _animations.PULSE_DURATION / DOT_COUNT * (index + 1);
  return (0, _extends3.default)({}, STYLES.dot, {
    animationDelay: delayValue + 'ms',
    backgroundColor: shadeMap[shade]
  });
}

var TxlDotsLoadingIndicator = function TxlDotsLoadingIndicator(_ref) {
  var shade = _ref.shade;

  var dots = [];

  for (var i = 0; i < DOT_COUNT; i++) {
    dots.push(_react2.default.createElement('div', {
      key: i,
      style: getDotStyles(i, shade),
      'data-test-dot-element': true
    }));
  }

  return _react2.default.createElement(
    'div',
    {
      'data-component': 'TxlDotsLoadingIndicator',
      style: STYLES.container
    },
    dots
  );
};

TxlDotsLoadingIndicator.propTypes = {
  shade: _react.PropTypes.oneOf(['light', 'dark', 'base'])
};

TxlDotsLoadingIndicator.defaultProps = {
  shade: 'dark'
};

var _default = (0, _radium2.default)(TxlDotsLoadingIndicator);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DOT_COUNT, 'DOT_COUNT', 'src/progress-indicators/DotsLoadingIndicator.jsx');

  __REACT_HOT_LOADER__.register(STYLES, 'STYLES', 'src/progress-indicators/DotsLoadingIndicator.jsx');

  __REACT_HOT_LOADER__.register(shadeMap, 'shadeMap', 'src/progress-indicators/DotsLoadingIndicator.jsx');

  __REACT_HOT_LOADER__.register(getDotStyles, 'getDotStyles', 'src/progress-indicators/DotsLoadingIndicator.jsx');

  __REACT_HOT_LOADER__.register(TxlDotsLoadingIndicator, 'TxlDotsLoadingIndicator', 'src/progress-indicators/DotsLoadingIndicator.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/progress-indicators/DotsLoadingIndicator.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm9ncmVzcy1pbmRpY2F0b3JzL0RvdHNMb2FkaW5nSW5kaWNhdG9yLmpzeCJdLCJuYW1lcyI6WyJET1RfQ09VTlQiLCJTVFlMRVMiLCJjb250YWluZXIiLCJhbGlnbkl0ZW1zIiwiZGlzcGxheSIsImhlaWdodCIsImp1c3RpZnlDb250ZW50Iiwid2lkdGgiLCJkb3QiLCJib3JkZXJSYWRpdXMiLCJvcGFjaXR5Iiwic2hhZGVNYXAiLCJiYXNlIiwiZGFyayIsImxpZ2h0IiwiZ2V0RG90U3R5bGVzIiwiaW5kZXgiLCJzaGFkZSIsImRlbGF5VmFsdWUiLCJhbmltYXRpb25EZWxheSIsImJhY2tncm91bmRDb2xvciIsIlR4bERvdHNMb2FkaW5nSW5kaWNhdG9yIiwiZG90cyIsImkiLCJwdXNoIiwicHJvcFR5cGVzIiwib25lT2YiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUE7O0FBQ0E7O0FBSUE7Ozs7QUFLQSxJQUFNQSxZQUFZLENBQWxCOztBQUVBLElBQU1DLFNBQVM7QUFDYkMsYUFBVztBQUNUQyxnQkFBWSxRQURIO0FBRVRDLGFBQVMsTUFGQTtBQUdUQyxZQUFRLHdCQUFHLENBQUgsQ0FIQztBQUlUQyxvQkFBZ0IsZUFKUDtBQUtUQyxXQUFPLHdCQUFHLEVBQUg7QUFMRSxHQURFO0FBUWJDLGtDQUNLLHFCQUFPLEtBQVAsQ0FETCxFQUVLLGlDQUZMO0FBR0VDLGtCQUFjLEtBSGhCO0FBSUVDLGFBQVM7QUFKWDtBQVJhLENBQWY7O0FBZ0JBLElBQU1DLFdBQVc7QUFDZkMsUUFBTSxvQkFBYSxLQUFiLENBRFM7QUFFZkMsUUFBTSxxQkFBYyxLQUFkLENBRlM7QUFHZkMsU0FBTyxxQkFBYyxJQUFkO0FBSFEsQ0FBakI7O0FBTUEsU0FBU0MsWUFBVCxDQUFzQkMsS0FBdEIsRUFBNkJDLEtBQTdCLEVBQW9DO0FBQ2xDLE1BQU1DLGFBQWMsNkJBQWlCbEIsU0FBbEIsSUFBZ0NnQixRQUFRLENBQXhDLENBQW5CO0FBQ0Esb0NBQ0tmLE9BQU9PLEdBRFo7QUFFRVcsb0JBQW1CRCxVQUFuQixPQUZGO0FBR0VFLHFCQUFpQlQsU0FBU00sS0FBVDtBQUhuQjtBQUtEOztBQUVELElBQU1JLDBCQUEwQixTQUExQkEsdUJBQTBCLE9BQWU7QUFBQSxNQUFaSixLQUFZLFFBQVpBLEtBQVk7O0FBQzdDLE1BQU1LLE9BQU8sRUFBYjs7QUFFQSxPQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSXZCLFNBQXBCLEVBQStCdUIsR0FBL0IsRUFBb0M7QUFDbENELFNBQUtFLElBQUwsQ0FDRTtBQUNFLFdBQUtELENBRFA7QUFFRSxhQUFPUixhQUFhUSxDQUFiLEVBQWdCTixLQUFoQixDQUZUO0FBR0U7QUFIRixNQURGO0FBT0Q7O0FBRUQsU0FDRTtBQUFBO0FBQUE7QUFDRSx3QkFBZSx5QkFEakI7QUFFRSxhQUFPaEIsT0FBT0M7QUFGaEI7QUFJR29CO0FBSkgsR0FERjtBQVFELENBckJEOztBQXVCQUQsd0JBQXdCSSxTQUF4QixHQUFvQztBQUNsQ1IsU0FBTyxpQkFBVVMsS0FBVixDQUFnQixDQUFDLE9BQUQsRUFBVSxNQUFWLEVBQWtCLE1BQWxCLENBQWhCO0FBRDJCLENBQXBDOztBQUlBTCx3QkFBd0JNLFlBQXhCLEdBQXVDO0FBQ3JDVixTQUFPO0FBRDhCLENBQXZDOztlQUllLHNCQUFPSSx1QkFBUCxDOzs7Ozs7Ozs7O2dDQWhFVHJCLFM7O2dDQUVBQyxNOztnQ0FnQkFVLFE7O2dDQU1HSSxZOztnQ0FTSE0sdUIiLCJmaWxlIjoiRG90c0xvYWRpbmdJbmRpY2F0b3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHJvcFR5cGVzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJhZGl1bSBmcm9tICdyYWRpdW0nO1xuXG5pbXBvcnQgeyBDT0xPUl9BQ0NFTlQsIENPTE9SX05FVVRSQUwgfSBmcm9tICcuLi9zdHlsZXMvdGhlbWUnO1xuaW1wb3J0IHtcbiAgZ2V0UHVsc2VTdHlsZXMsXG4gIFBVTFNFX0RVUkFUSU9OLFxufSBmcm9tICcuLi9zdHlsZXMvbWl4aW5zL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHtcbiAgZ3JpZFVuaXRzIGFzIGd1LFxuICBzcXVhcmUsXG59IGZyb20gJy4uL3N0eWxlcy9oZWxwZXJzJztcblxuY29uc3QgRE9UX0NPVU5UID0gNTtcblxuY29uc3QgU1RZTEVTID0ge1xuICBjb250YWluZXI6IHtcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgaGVpZ2h0OiBndSgyKSxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgIHdpZHRoOiBndSgxNiksXG4gIH0sXG4gIGRvdDoge1xuICAgIC4uLnNxdWFyZSgnOHB4JyksXG4gICAgLi4uZ2V0UHVsc2VTdHlsZXMoKSxcbiAgICBib3JkZXJSYWRpdXM6ICc1MCUnLFxuICAgIG9wYWNpdHk6IDAsXG4gIH0sXG59O1xuXG5jb25zdCBzaGFkZU1hcCA9IHtcbiAgYmFzZTogQ09MT1JfQUNDRU5UWyc1MDAnXSxcbiAgZGFyazogQ09MT1JfTkVVVFJBTFsnNzAwJ10sXG4gIGxpZ2h0OiBDT0xPUl9ORVVUUkFMWyc1MCddLFxufTtcblxuZnVuY3Rpb24gZ2V0RG90U3R5bGVzKGluZGV4LCBzaGFkZSkge1xuICBjb25zdCBkZWxheVZhbHVlID0gKFBVTFNFX0RVUkFUSU9OIC8gRE9UX0NPVU5UKSAqIChpbmRleCArIDEpO1xuICByZXR1cm4ge1xuICAgIC4uLlNUWUxFUy5kb3QsXG4gICAgYW5pbWF0aW9uRGVsYXk6IGAke2RlbGF5VmFsdWV9bXNgLFxuICAgIGJhY2tncm91bmRDb2xvcjogc2hhZGVNYXBbc2hhZGVdLFxuICB9O1xufVxuXG5jb25zdCBUeGxEb3RzTG9hZGluZ0luZGljYXRvciA9ICh7IHNoYWRlIH0pID0+IHtcbiAgY29uc3QgZG90cyA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgRE9UX0NPVU5UOyBpKyspIHtcbiAgICBkb3RzLnB1c2goXG4gICAgICA8ZGl2XG4gICAgICAgIGtleT17aX1cbiAgICAgICAgc3R5bGU9e2dldERvdFN0eWxlcyhpLCBzaGFkZSl9XG4gICAgICAgIGRhdGEtdGVzdC1kb3QtZWxlbWVudFxuICAgICAgLz5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBkYXRhLWNvbXBvbmVudD1cIlR4bERvdHNMb2FkaW5nSW5kaWNhdG9yXCJcbiAgICAgIHN0eWxlPXtTVFlMRVMuY29udGFpbmVyfVxuICAgID5cbiAgICAgIHtkb3RzfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuVHhsRG90c0xvYWRpbmdJbmRpY2F0b3IucHJvcFR5cGVzID0ge1xuICBzaGFkZTogUHJvcFR5cGVzLm9uZU9mKFsnbGlnaHQnLCAnZGFyaycsICdiYXNlJ10pLFxufTtcblxuVHhsRG90c0xvYWRpbmdJbmRpY2F0b3IuZGVmYXVsdFByb3BzID0ge1xuICBzaGFkZTogJ2RhcmsnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUmFkaXVtKFR4bERvdHNMb2FkaW5nSW5kaWNhdG9yKTtcbiJdfQ==