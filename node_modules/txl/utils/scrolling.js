'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.disablePageScrolling = disablePageScrolling;
exports.enablePageScrolling = enablePageScrolling;

var _KeyCodes = require('../constants/KeyCodes');

var scrollKeys = [_KeyCodes.ARROW_DOWN, _KeyCodes.ARROW_LEFT, _KeyCodes.ARROW_RIGHT, _KeyCodes.ARROW_UP, _KeyCodes.END, _KeyCodes.HOME, _KeyCodes.PAGE_DOWN, _KeyCodes.PAGE_UP, _KeyCodes.SPACEBAR];

var preventDefault = function preventDefault(event) {
  var evt = event || window.event;
  if (evt.preventDefault) {
    evt.preventDefault();
  }
  evt.returnValue = false;
  return evt;
};

var preventDefaultForScrollKeys = function preventDefaultForScrollKeys(event) {
  if (scrollKeys.indexOf(event.keyCode) !== -1 && document.activeElement === document.body) {
    preventDefault(event);
  }
};

function disablePageScrolling() {
  var localWindow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
  var localDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;
  /* eslint-disable no-param-reassign */
  localWindow.addEventListener('DOMMouseScroll', preventDefault, false);
  localWindow.onwheel = preventDefault;
  localWindow.onmousewheel = preventDefault;
  localDocument.onmousewheel = preventDefault;
  localWindow.ontouchmove = preventDefault;
  localDocument.onkeydown = preventDefaultForScrollKeys;
}

function enablePageScrolling() {
  var localWindow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
  var localDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;

  localWindow.removeEventListener('DOMMouseScroll', preventDefault, false);
  localWindow.onmousewheel = null;
  localDocument.onmousewheel = null;
  localWindow.onwheel = null;
  localWindow.ontouchmove = null;
  localDocument.onkeydown = null;
} /* eslint-enable no-param-reassign */

;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(scrollKeys, 'scrollKeys', 'src/utils/scrolling.js');

  __REACT_HOT_LOADER__.register(preventDefault, 'preventDefault', 'src/utils/scrolling.js');

  __REACT_HOT_LOADER__.register(preventDefaultForScrollKeys, 'preventDefaultForScrollKeys', 'src/utils/scrolling.js');

  __REACT_HOT_LOADER__.register(disablePageScrolling, 'disablePageScrolling', 'src/utils/scrolling.js');

  __REACT_HOT_LOADER__.register(enablePageScrolling, 'enablePageScrolling', 'src/utils/scrolling.js');
}();

;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9zY3JvbGxpbmcuanMiXSwibmFtZXMiOlsiZGlzYWJsZVBhZ2VTY3JvbGxpbmciLCJlbmFibGVQYWdlU2Nyb2xsaW5nIiwic2Nyb2xsS2V5cyIsInByZXZlbnREZWZhdWx0IiwiZXZlbnQiLCJldnQiLCJ3aW5kb3ciLCJyZXR1cm5WYWx1ZSIsInByZXZlbnREZWZhdWx0Rm9yU2Nyb2xsS2V5cyIsImluZGV4T2YiLCJrZXlDb2RlIiwiZG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsImxvY2FsV2luZG93IiwibG9jYWxEb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbndoZWVsIiwib25tb3VzZXdoZWVsIiwib250b3VjaG1vdmUiLCJvbmtleWRvd24iLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7OztRQXVDZ0JBLG9CLEdBQUFBLG9CO1FBWUFDLG1CLEdBQUFBLG1COztBQW5EaEI7O0FBWUEsSUFBTUMsYUFBYSxrTEFBbkI7O0FBWUEsSUFBTUMsaUJBQWlCLFNBQWpCQSxjQUFpQixDQUFDQyxLQUFELEVBQVc7QUFDaEMsTUFBTUMsTUFBTUQsU0FBU0UsT0FBT0YsS0FBNUI7QUFDQSxNQUFJQyxJQUFJRixjQUFSLEVBQXdCO0FBQ3RCRSxRQUFJRixjQUFKO0FBQ0Q7QUFDREUsTUFBSUUsV0FBSixHQUFrQixLQUFsQjtBQUNBLFNBQU9GLEdBQVA7QUFDRCxDQVBEOztBQVNBLElBQU1HLDhCQUE4QixTQUE5QkEsMkJBQThCLENBQUNKLEtBQUQsRUFBVztBQUM3QyxNQUFJRixXQUFXTyxPQUFYLENBQW1CTCxNQUFNTSxPQUF6QixNQUFzQyxDQUFDLENBQXZDLElBQTRDQyxTQUFTQyxhQUFULEtBQTJCRCxTQUFTRSxJQUFwRixFQUEwRjtBQUN4RlYsbUJBQWVDLEtBQWY7QUFDRDtBQUNGLENBSkQ7O0FBTU8sU0FBU0osb0JBQVQsR0FHTDtBQUFBLE1BRkFjLFdBRUEsdUVBRmNSLE1BRWQ7QUFBQSxNQURBUyxhQUNBLHVFQURnQkosUUFDaEI7QUFBRTtBQUNGRyxjQUFZRSxnQkFBWixDQUE2QixnQkFBN0IsRUFBK0NiLGNBQS9DLEVBQStELEtBQS9EO0FBQ0FXLGNBQVlHLE9BQVosR0FBc0JkLGNBQXRCO0FBQ0FXLGNBQVlJLFlBQVosR0FBMkJmLGNBQTNCO0FBQ0FZLGdCQUFjRyxZQUFkLEdBQTZCZixjQUE3QjtBQUNBVyxjQUFZSyxXQUFaLEdBQTBCaEIsY0FBMUI7QUFDQVksZ0JBQWNLLFNBQWQsR0FBMEJaLDJCQUExQjtBQUNEOztBQUVNLFNBQVNQLG1CQUFULEdBR0w7QUFBQSxNQUZBYSxXQUVBLHVFQUZjUixNQUVkO0FBQUEsTUFEQVMsYUFDQSx1RUFEZ0JKLFFBQ2hCOztBQUNBRyxjQUFZTyxtQkFBWixDQUFnQyxnQkFBaEMsRUFBa0RsQixjQUFsRCxFQUFrRSxLQUFsRTtBQUNBVyxjQUFZSSxZQUFaLEdBQTJCLElBQTNCO0FBQ0FILGdCQUFjRyxZQUFkLEdBQTZCLElBQTdCO0FBQ0FKLGNBQVlHLE9BQVosR0FBc0IsSUFBdEI7QUFDQUgsY0FBWUssV0FBWixHQUEwQixJQUExQjtBQUNBSixnQkFBY0ssU0FBZCxHQUEwQixJQUExQjtBQUNELEMsQ0FBQzs7Ozs7Ozs7O2dDQWpESWxCLFU7O2dDQVlBQyxjOztnQ0FTQUssMkI7O2dDQU1VUixvQjs7Z0NBWUFDLG1CIiwiZmlsZSI6InNjcm9sbGluZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFSUk9XX0RPV04sXG4gIEFSUk9XX0xFRlQsXG4gIEFSUk9XX1JJR0hULFxuICBBUlJPV19VUCxcbiAgRU5ELFxuICBIT01FLFxuICBQQUdFX1VQLFxuICBQQUdFX0RPV04sXG4gIFNQQUNFQkFSLFxufSBmcm9tICcuLi9jb25zdGFudHMvS2V5Q29kZXMnO1xuXG5jb25zdCBzY3JvbGxLZXlzID0gW1xuICBBUlJPV19ET1dOLFxuICBBUlJPV19MRUZULFxuICBBUlJPV19SSUdIVCxcbiAgQVJST1dfVVAsXG4gIEVORCxcbiAgSE9NRSxcbiAgUEFHRV9ET1dOLFxuICBQQUdFX1VQLFxuICBTUEFDRUJBUixcbl07XG5cbmNvbnN0IHByZXZlbnREZWZhdWx0ID0gKGV2ZW50KSA9PiB7XG4gIGNvbnN0IGV2dCA9IGV2ZW50IHx8IHdpbmRvdy5ldmVudDtcbiAgaWYgKGV2dC5wcmV2ZW50RGVmYXVsdCkge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICB9XG4gIGV2dC5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICByZXR1cm4gZXZ0O1xufTtcblxuY29uc3QgcHJldmVudERlZmF1bHRGb3JTY3JvbGxLZXlzID0gKGV2ZW50KSA9PiB7XG4gIGlmIChzY3JvbGxLZXlzLmluZGV4T2YoZXZlbnQua2V5Q29kZSkgIT09IC0xICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGRvY3VtZW50LmJvZHkpIHtcbiAgICBwcmV2ZW50RGVmYXVsdChldmVudCk7XG4gIH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNhYmxlUGFnZVNjcm9sbGluZyhcbiAgbG9jYWxXaW5kb3cgPSB3aW5kb3csXG4gIGxvY2FsRG9jdW1lbnQgPSBkb2N1bWVudFxuKSB7IC8qIGVzbGludC1kaXNhYmxlIG5vLXBhcmFtLXJlYXNzaWduICovXG4gIGxvY2FsV2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTU1vdXNlU2Nyb2xsJywgcHJldmVudERlZmF1bHQsIGZhbHNlKTtcbiAgbG9jYWxXaW5kb3cub253aGVlbCA9IHByZXZlbnREZWZhdWx0O1xuICBsb2NhbFdpbmRvdy5vbm1vdXNld2hlZWwgPSBwcmV2ZW50RGVmYXVsdDtcbiAgbG9jYWxEb2N1bWVudC5vbm1vdXNld2hlZWwgPSBwcmV2ZW50RGVmYXVsdDtcbiAgbG9jYWxXaW5kb3cub250b3VjaG1vdmUgPSBwcmV2ZW50RGVmYXVsdDtcbiAgbG9jYWxEb2N1bWVudC5vbmtleWRvd24gPSBwcmV2ZW50RGVmYXVsdEZvclNjcm9sbEtleXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbmFibGVQYWdlU2Nyb2xsaW5nKFxuICBsb2NhbFdpbmRvdyA9IHdpbmRvdyxcbiAgbG9jYWxEb2N1bWVudCA9IGRvY3VtZW50XG4pIHtcbiAgbG9jYWxXaW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignRE9NTW91c2VTY3JvbGwnLCBwcmV2ZW50RGVmYXVsdCwgZmFsc2UpO1xuICBsb2NhbFdpbmRvdy5vbm1vdXNld2hlZWwgPSBudWxsO1xuICBsb2NhbERvY3VtZW50Lm9ubW91c2V3aGVlbCA9IG51bGw7XG4gIGxvY2FsV2luZG93Lm9ud2hlZWwgPSBudWxsO1xuICBsb2NhbFdpbmRvdy5vbnRvdWNobW92ZSA9IG51bGw7XG4gIGxvY2FsRG9jdW1lbnQub25rZXlkb3duID0gbnVsbDtcbn0gLyogZXNsaW50LWVuYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuIl19