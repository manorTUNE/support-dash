'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _get = require('lodash/get');

var _get2 = _interopRequireDefault(_get);

var _Base = require('../base/Base');

var _FilePreview = require('./FilePreview.style');

var _MiddleTruncatedText = require('../text/MiddleTruncatedText');

var _MiddleTruncatedText2 = _interopRequireDefault(_MiddleTruncatedText);

var _FilePlaceholder = require('../icons/FilePlaceholder');

var _FilePlaceholder2 = _interopRequireDefault(_FilePlaceholder);

var _FileDetailsModal = require('./FileDetailsModal');

var _FileDetailsModal2 = _interopRequireDefault(_FileDetailsModal);

var _FilePreviewControlled = require('./FilePreviewControlled');

var _FilePreviewControlled2 = _interopRequireDefault(_FilePreviewControlled);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var TxlFilePreviewWithDetailsModal = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlFilePreviewWithDetailsModal, _React$Component);

  function TxlFilePreviewWithDetailsModal() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlFilePreviewWithDetailsModal);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlFilePreviewWithDetailsModal.__proto__ || (0, _getPrototypeOf2.default)(TxlFilePreviewWithDetailsModal)).call.apply(_ref, [this].concat(args)));

    _this.state = {
      dragging: false,
      hovered: false,
      isImage: false,
      showDetailsModal: false
    };
    return _this;
  }

  (0, _createClass3.default)(TxlFilePreviewWithDetailsModal, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.fileInfo) {
        this._checkIfFileIsImage(this.props.fileInfo.file);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.URL.revokeObjectURL(this.state.fileURL);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var currentFileName = (0, _get2.default)(this.props, 'fileInfo.file.name');
      var newFileName = (0, _get2.default)(nextProps, 'fileInfo.file.name');

      if (nextProps.fileInfo) {
        if (newFileName !== currentFileName) {
          this._checkIfFileIsImage(nextProps.fileInfo.file);
        }
      } else {
        this.setState({ isImage: false });
      }
    }
  }, {
    key: '_checkIfFileIsImage',
    value: function _checkIfFileIsImage(file) {
      var _this2 = this;

      var path = window.URL.createObjectURL(file);
      var image = new Image();
      image.onload = function () {
        _this2.setState({
          fileURL: path,
          imageHeight: image.height,
          imageWidth: image.width,
          isImage: true
        });
      };

      image.onerror = function () {
        _this2.setState({ isImage: false });
        window.URL.revokeObjectURL(path);
      };

      image.src = path;
    }
  }, {
    key: '_triggerFileSelectionDialog',
    value: function _triggerFileSelectionDialog() {
      this._fileInput.click();
    }
  }, {
    key: '_handleFileSelected',
    value: function _handleFileSelected(event) {
      var newFile = event.target.files[0];
      this.props.onEdit({
        currentFile: this.props.fileInfo,
        newFile: newFile
      });
    }
  }, {
    key: '_handleDrop',
    value: function _handleDrop(_ref2) {
      var _this3 = this;

      var event = _ref2.event;

      event.preventDefault();
      var newFile = event.dataTransfer.files[0];
      this.setState({ dragging: false }, function () {
        _this3.props.onEdit({
          currentFile: _this3.props.fileInfo,
          newFile: newFile
        });
      });
    }
  }, {
    key: '_handleMouseEnter',
    value: function _handleMouseEnter() {
      this.setState({ hovered: true });
    }
  }, {
    key: '_handleMouseLeave',
    value: function _handleMouseLeave() {
      this.setState({ hovered: false });
    }
  }, {
    key: '_handleDetails',
    value: function _handleDetails() {
      this.setState({
        hovered: false,
        showDetailsModal: true
      });
    }
  }, {
    key: '_handleDetailsDismiss',
    value: function _handleDetailsDismiss() {
      this.setState({ showDetailsModal: false });
    }
  }, {
    key: '_handleDragOver',
    value: function _handleDragOver(_ref3) {
      var event = _ref3.event;

      event.preventDefault();
      this.setState({ dragging: true });
    }
  }, {
    key: '_handleDragLeave',
    value: function _handleDragLeave() {
      this.setState({ dragging: false });
    }
  }, {
    key: '_handleImagePreviewRef',
    value: function _handleImagePreviewRef(ref) {
      this._imagePreview = ref;
    }
  }, {
    key: '_handleFilePlaceholderRef',
    value: function _handleFilePlaceholderRef(ref) {
      this._filePlaceholder = ref;
    }
  }, {
    key: '_handleFilePreviewControlledRef',
    value: function _handleFilePreviewControlledRef(ref) {
      this._filePreviewControlled = ref;
    }
  }, {
    key: '_handleFileInputRef',
    value: function _handleFileInputRef(ref) {
      this._fileInput = ref;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          fileInfo = _props.fileInfo,
          onCancel = _props.onCancel,
          onDelete = _props.onDelete;
      var _state = this.state,
          dragging = _state.dragging,
          fileURL = _state.fileURL,
          hovered = _state.hovered,
          isImage = _state.isImage,
          imageHeight = _state.imageHeight,
          imageWidth = _state.imageWidth,
          showDetailsModal = _state.showDetailsModal;


      var preview = void 0;
      if (isImage) {
        preview = _react2.default.createElement(
          'div',
          {
            ref: this._handleImagePreviewRef,
            style: _FilePreview.IMAGE_PREVIEW_CONTAINER_STYLE
          },
          _react2.default.createElement('img', {
            style: _FilePreview.IMAGE_PREVIEW_STYLE,
            src: fileURL
          })
        );
      } else if (fileInfo) {
        var fileName = fileInfo.file.name;

        preview = _react2.default.createElement(
          'div',
          {
            ref: this._handleFilePlaceholderRef,
            style: _FilePreview.FILE_PLACEHOLDER_PREVIEW_STYLE
          },
          _react2.default.createElement(_FilePlaceholder2.default, {
            color: _FilePreview.FILE_PLACEHOLDER_PREVIEW_ICON_COLOR,
            scale: 2
          }),
          _react2.default.createElement(
            'div',
            { style: _FilePreview.FILE_PLACEHOLDER_TEXT_STYLE },
            _react2.default.createElement(_MiddleTruncatedText2.default, {
              numberOfLines: 3,
              text: fileName
            })
          )
        );
      }

      return _react2.default.createElement(
        'div',
        { 'data-component': 'TxlFilePreviewWithDetailsModal' },
        _react2.default.createElement(_FilePreviewControlled2.default, {
          dragging: dragging,
          fileInfo: fileInfo,
          hovered: hovered,
          onCancel: onCancel,
          onDelete: onDelete,
          onDetails: this._handleDetails,
          onDragLeave: this._handleDragLeave,
          onDragOver: this._handleDragOver,
          onDrop: this._handleDrop,
          onEdit: this._triggerFileSelectionDialog,
          onMouseEnter: this._handleMouseEnter,
          onMouseLeave: this._handleMouseLeave,
          preview: preview,
          ref: this._handleFilePreviewControlledRef
        }),
        _react2.default.createElement('input', {
          onChange: this._handleFileSelected,
          ref: this._handleFileInputRef,
          style: _FilePreview.FILE_INPUT_STYLE,
          type: 'file'
        }),
        showDetailsModal && _react2.default.createElement(_FileDetailsModal2.default, {
          file: fileInfo.file,
          fileURL: fileURL,
          isImage: isImage,
          imageHeight: imageHeight,
          imageWidth: imageWidth,
          onDismiss: this._handleDetailsDismiss
        })
      );
    }
  }]);
  return TxlFilePreviewWithDetailsModal;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_checkIfFileIsImage', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_checkIfFileIsImage'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_triggerFileSelectionDialog', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_triggerFileSelectionDialog'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleFileSelected', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleFileSelected'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleDrop', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleDrop'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMouseEnter', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMouseEnter'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMouseLeave', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMouseLeave'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleDetails', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleDetails'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleDetailsDismiss', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleDetailsDismiss'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleDragOver', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleDragOver'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleDragLeave', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleDragLeave'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleImagePreviewRef', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleImagePreviewRef'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleFilePlaceholderRef', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleFilePlaceholderRef'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleFilePreviewControlledRef', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleFilePreviewControlledRef'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleFileInputRef', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleFileInputRef'), _class2.prototype)), _class2)) || _class;

exports.default = TxlFilePreviewWithDetailsModal;


TxlFilePreviewWithDetailsModal.displayName = 'TxlFilePreviewWithDetailsModal';

TxlFilePreviewWithDetailsModal.propTypes = {
  fileInfo: _react.PropTypes.shape({
    file: _react.PropTypes.instanceOf(File),
    percentUploaded: _react.PropTypes.number,
    uploading: _react.PropTypes.bool
  }),
  onCancel: _react.PropTypes.func,
  onDelete: _react.PropTypes.func,
  onEdit: _react.PropTypes.func
};

TxlFilePreviewWithDetailsModal.defaultProps = {
  onCancel: _Base.NOOP,
  onDelete: _Base.NOOP,
  onEdit: _Base.NOOP
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(TxlFilePreviewWithDetailsModal, 'TxlFilePreviewWithDetailsModal', 'src/file-preview/FilePreviewWithDetailsModal.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,