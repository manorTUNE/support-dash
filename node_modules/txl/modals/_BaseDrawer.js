'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _BaseOverlay = require('./_BaseOverlay');

var _BaseOverlay2 = _interopRequireDefault(_BaseOverlay);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DRAWER_SIZES = {
  large: {
    width: (0, _helpers.gridUnits)(152)
  },
  small: {
    width: (0, _helpers.gridUnits)(75)
  }
};
// BaseModal uses a flexible 'default' size, but drawer should
// just default to the larger size
DRAWER_SIZES.default = DRAWER_SIZES.large;

var DRAWER_STYLES = (0, _extends3.default)({}, _helpers.CORNERS, {
  left: 'auto', // override left from corners
  margin: 0,
  position: 'absolute'
});

var getDrawerWidth = function getDrawerWidth(size) {
  return {
    width: typeof size === 'number' ? size : DRAWER_SIZES[size].width
  };
};

var TxlBaseDrawer = function TxlBaseDrawer(props) {
  var styles = (0, _extends3.default)({}, DRAWER_STYLES, getDrawerWidth(props.size));

  return _react2.default.createElement(_BaseOverlay2.default, (0, _extends3.default)({}, props, {
    style: styles
  }));
};

TxlBaseDrawer.displayName = 'TxlBaseDrawer';

TxlBaseDrawer.propTypes = _BaseOverlay2.default.propTypes;

TxlBaseDrawer.defaultProps = {
  componentName: 'TxlBaseDrawer',
  size: _BaseOverlay2.default.defaultProps.size
};

var _default = (0, _radium2.default)(TxlBaseDrawer);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DRAWER_SIZES, 'DRAWER_SIZES', 'src/modals/_BaseDrawer.jsx');

  __REACT_HOT_LOADER__.register(DRAWER_STYLES, 'DRAWER_STYLES', 'src/modals/_BaseDrawer.jsx');

  __REACT_HOT_LOADER__.register(getDrawerWidth, 'getDrawerWidth', 'src/modals/_BaseDrawer.jsx');

  __REACT_HOT_LOADER__.register(TxlBaseDrawer, 'TxlBaseDrawer', 'src/modals/_BaseDrawer.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/modals/_BaseDrawer.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RhbHMvX0Jhc2VEcmF3ZXIuanN4Il0sIm5hbWVzIjpbIkRSQVdFUl9TSVpFUyIsImxhcmdlIiwid2lkdGgiLCJzbWFsbCIsImRlZmF1bHQiLCJEUkFXRVJfU1RZTEVTIiwibGVmdCIsIm1hcmdpbiIsInBvc2l0aW9uIiwiZ2V0RHJhd2VyV2lkdGgiLCJzaXplIiwiVHhsQmFzZURyYXdlciIsInByb3BzIiwic3R5bGVzIiwiZGlzcGxheU5hbWUiLCJwcm9wVHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJjb21wb25lbnROYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFLQSxJQUFNQSxlQUFlO0FBQ25CQyxTQUFPO0FBQ0xDLFdBQU8sd0JBQUcsR0FBSDtBQURGLEdBRFk7QUFJbkJDLFNBQU87QUFDTEQsV0FBTyx3QkFBRyxFQUFIO0FBREY7QUFKWSxDQUFyQjtBQVFBO0FBQ0E7QUFDQUYsYUFBYUksT0FBYixHQUF1QkosYUFBYUMsS0FBcEM7O0FBRUEsSUFBTUk7QUFFSkMsUUFBTSxNQUZGLEVBRVU7QUFDZEMsVUFBUSxDQUhKO0FBSUpDLFlBQVU7QUFKTixFQUFOOztBQU9BLElBQU1DLGlCQUFpQixTQUFqQkEsY0FBaUI7QUFBQSxTQUFTO0FBQzlCUCxXQUFPLE9BQU9RLElBQVAsS0FBZ0IsUUFBaEIsR0FDSEEsSUFERyxHQUVIVixhQUFhVSxJQUFiLEVBQW1CUjtBQUhPLEdBQVQ7QUFBQSxDQUF2Qjs7QUFNQSxJQUFNUyxnQkFBZ0IsU0FBaEJBLGFBQWdCLENBQUNDLEtBQUQsRUFBVztBQUMvQixNQUFNQyxvQ0FDRFIsYUFEQyxFQUVESSxlQUFlRyxNQUFNRixJQUFyQixDQUZDLENBQU47O0FBS0EsU0FDRSxnRkFDTUUsS0FETjtBQUVFLFdBQU9DO0FBRlQsS0FERjtBQU1ELENBWkQ7O0FBY0FGLGNBQWNHLFdBQWQsR0FBNEIsZUFBNUI7O0FBRUFILGNBQWNJLFNBQWQsR0FBMEIsc0JBQVlBLFNBQXRDOztBQUVBSixjQUFjSyxZQUFkLEdBQTZCO0FBQzNCQyxpQkFBZSxlQURZO0FBRTNCUCxRQUFNLHNCQUFZTSxZQUFaLENBQXlCTjtBQUZKLENBQTdCOztlQUtlLHNCQUFPQyxhQUFQLEM7Ozs7Ozs7Ozs7Z0NBaERUWCxZOztnQ0FZQUssYTs7Z0NBT0FJLGM7O2dDQU1BRSxhIiwiZmlsZSI6Il9CYXNlRHJhd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSYWRpdW0gZnJvbSAncmFkaXVtJztcblxuaW1wb3J0IEJhc2VPdmVybGF5IGZyb20gJy4vX0Jhc2VPdmVybGF5JztcbmltcG9ydCB7XG4gIENPUk5FUlMsXG4gIGdyaWRVbml0cyBhcyBndSxcbn0gZnJvbSAnLi4vc3R5bGVzL2hlbHBlcnMnO1xuXG5jb25zdCBEUkFXRVJfU0laRVMgPSB7XG4gIGxhcmdlOiB7XG4gICAgd2lkdGg6IGd1KDE1MiksXG4gIH0sXG4gIHNtYWxsOiB7XG4gICAgd2lkdGg6IGd1KDc1KSxcbiAgfSxcbn07XG4vLyBCYXNlTW9kYWwgdXNlcyBhIGZsZXhpYmxlICdkZWZhdWx0JyBzaXplLCBidXQgZHJhd2VyIHNob3VsZFxuLy8ganVzdCBkZWZhdWx0IHRvIHRoZSBsYXJnZXIgc2l6ZVxuRFJBV0VSX1NJWkVTLmRlZmF1bHQgPSBEUkFXRVJfU0laRVMubGFyZ2U7XG5cbmNvbnN0IERSQVdFUl9TVFlMRVMgPSB7XG4gIC4uLkNPUk5FUlMsXG4gIGxlZnQ6ICdhdXRvJywgLy8gb3ZlcnJpZGUgbGVmdCBmcm9tIGNvcm5lcnNcbiAgbWFyZ2luOiAwLFxuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbn07XG5cbmNvbnN0IGdldERyYXdlcldpZHRoID0gc2l6ZSA9PiAoe1xuICB3aWR0aDogdHlwZW9mIHNpemUgPT09ICdudW1iZXInXG4gICAgPyBzaXplXG4gICAgOiBEUkFXRVJfU0laRVNbc2l6ZV0ud2lkdGgsXG59KTtcblxuY29uc3QgVHhsQmFzZURyYXdlciA9IChwcm9wcykgPT4ge1xuICBjb25zdCBzdHlsZXMgPSB7XG4gICAgLi4uRFJBV0VSX1NUWUxFUyxcbiAgICAuLi5nZXREcmF3ZXJXaWR0aChwcm9wcy5zaXplKSxcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxCYXNlT3ZlcmxheVxuICAgICAgey4uLnByb3BzfVxuICAgICAgc3R5bGU9e3N0eWxlc31cbiAgICAvPlxuICApO1xufTtcblxuVHhsQmFzZURyYXdlci5kaXNwbGF5TmFtZSA9ICdUeGxCYXNlRHJhd2VyJztcblxuVHhsQmFzZURyYXdlci5wcm9wVHlwZXMgPSBCYXNlT3ZlcmxheS5wcm9wVHlwZXM7XG5cblR4bEJhc2VEcmF3ZXIuZGVmYXVsdFByb3BzID0ge1xuICBjb21wb25lbnROYW1lOiAnVHhsQmFzZURyYXdlcicsXG4gIHNpemU6IEJhc2VPdmVybGF5LmRlZmF1bHRQcm9wcy5zaXplLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUmFkaXVtKFR4bEJhc2VEcmF3ZXIpO1xuIl19