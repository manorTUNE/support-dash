'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Base = require('../base/Base');

var _OverlayBackdrop = require('./_OverlayBackdrop');

var _OverlayBackdrop2 = _interopRequireDefault(_OverlayBackdrop);

var _TabList = require('../tabs/TabList');

var _TabList2 = _interopRequireDefault(_TabList);

var _helpers = require('../styles/helpers');

var _layers = require('../styles/mixins/layers');

var _theme = require('../styles/theme');

var _type = require('../styles/mixins/type');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HEADER_STYLES = (0, _extends3.default)({}, _type.HEADING_LARGE, _helpers.TRUNCATE, {
  borderBottom: '1px solid ' + _theme.COLOR_NEUTRAL['100'],
  flexShrink: 0,
  lineHeight: (0, _helpers.gridUnits)(15),
  marginBottom: 0,
  minHeight: (0, _helpers.gridUnits)(15),
  paddingLeft: (0, _helpers.gridUnits)(4),
  paddingRight: (0, _helpers.gridUnits)(4)
});

var TABS_WRAPPER_STYLES = {
  marginBottom: -1, // hides bottom border so overlaps the header border
  marginLeft: (0, _helpers.gridUnits)(-4),
  marginRight: (0, _helpers.gridUnits)(-4)
};

var FOOTER_STYLES = {
  alignItems: 'center',
  borderTop: '1px solid ' + _theme.COLOR_NEUTRAL['100'],
  display: 'flex',
  flexShrink: 0,
  height: (0, _helpers.gridUnits)(15),
  padding: '0 ' + (0, _helpers.gridUnits)(4)
};

var OVERLAY_STYLES = (0, _extends3.default)({}, _layers.LAYER_4, _type.DEFAULT_FONT_FAMILY, {
  backgroundColor: 'white',
  display: 'flex',
  flexDirection: 'column',
  overflow: 'hidden',
  padding: 0
});

var CONTENT_WRAPPER_STYLES = {
  // Radium seems to require flex shorthand to apply IE10 flex styles
  flex: '1 1 auto',
  overflow: 'auto',
  position: 'relative'
};

var CONTENT_STYLES = {
  padding: (0, _helpers.gridUnits)(4)
};

var TxlBaseOverlay = function TxlBaseOverlay(props) {
  var children = props.children,
      componentName = props.componentName,
      customOverlayStyle = props.customOverlayStyle,
      footer = props.footer,
      header = props.header,
      onBackdropClick = props.onBackdropClick,
      onDismiss = props.onDismiss,
      onTabClick = props.onTabClick,
      selectedTabIndex = props.selectedTabIndex,
      style = props.style,
      tabs = props.tabs;


  var overlayStyles = (0, _extends3.default)({}, OVERLAY_STYLES, style);

  var showTabs = !!tabs && tabs.length > 0;
  var showHeader = !!header || showTabs;
  var showFooter = !!footer;

  return _react2.default.createElement(
    _OverlayBackdrop2.default,
    {
      onClick: onBackdropClick,
      onDismiss: onDismiss
    },
    _react2.default.createElement(
      'section',
      {
        'data-component': componentName,
        style: overlayStyles
      },
      showHeader && _react2.default.createElement(
        'header',
        {
          style: HEADER_STYLES,
          'data-test-overlay-header': true
        },
        header,
        showTabs && _react2.default.createElement(
          'div',
          { style: TABS_WRAPPER_STYLES },
          _react2.default.createElement(_TabList2.default, {
            onTabClick: onTabClick,
            selectedIndex: selectedTabIndex,
            items: tabs
          })
        )
      ),
      _react2.default.createElement(
        'div',
        {
          'data-test-overlay-content': true,
          style: CONTENT_WRAPPER_STYLES
        },
        _react2.default.createElement(
          'div',
          { style: customOverlayStyle },
          children
        )
      ),
      showFooter && _react2.default.createElement(
        'footer',
        {
          'data-test-overlay-footer': true,
          style: FOOTER_STYLES
        },
        footer
      )
    )
  );
};

TxlBaseOverlay.displayName = 'TxlBaseOverlay';

TxlBaseOverlay.propTypes = {
  children: _react.PropTypes.node.isRequired,
  componentName: _react.PropTypes.string.isRequired,
  customOverlayStyle: _react.PropTypes.object,
  footer: _react.PropTypes.node,
  header: _react.PropTypes.node,
  onBackdropClick: _OverlayBackdrop2.default.propTypes.onClick,
  onDismiss: _OverlayBackdrop2.default.propTypes.onDismiss,
  // these should really use the TabList propTypes, but these properties are required for TabList,
  // but not for this component so if overlay is untabbed it will warn
  onTabClick: _react.PropTypes.func,
  selectedTabIndex: _react.PropTypes.number,
  size: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(['small', 'large', 'default']), _react.PropTypes.number]),
  style: _react.PropTypes.object,
  // @TODO - possibly make custom type checker for tabs
  tabs: _TabList2.default.propTypes.items
};

TxlBaseOverlay.defaultProps = {
  customOverlayStyle: CONTENT_STYLES,
  onBackdropClick: _Base.NOOP,
  onDismiss: _Base.NOOP,
  onTabClick: _Base.NOOP,
  selectedTabIndex: 0,
  size: 'default'
};

var _default = (0, _radium2.default)(TxlBaseOverlay);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(HEADER_STYLES, 'HEADER_STYLES', 'src/modals/_BaseOverlay.jsx');

  __REACT_HOT_LOADER__.register(TABS_WRAPPER_STYLES, 'TABS_WRAPPER_STYLES', 'src/modals/_BaseOverlay.jsx');

  __REACT_HOT_LOADER__.register(FOOTER_STYLES, 'FOOTER_STYLES', 'src/modals/_BaseOverlay.jsx');

  __REACT_HOT_LOADER__.register(OVERLAY_STYLES, 'OVERLAY_STYLES', 'src/modals/_BaseOverlay.jsx');

  __REACT_HOT_LOADER__.register(CONTENT_WRAPPER_STYLES, 'CONTENT_WRAPPER_STYLES', 'src/modals/_BaseOverlay.jsx');

  __REACT_HOT_LOADER__.register(CONTENT_STYLES, 'CONTENT_STYLES', 'src/modals/_BaseOverlay.jsx');

  __REACT_HOT_LOADER__.register(TxlBaseOverlay, 'TxlBaseOverlay', 'src/modals/_BaseOverlay.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/modals/_BaseOverlay.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,