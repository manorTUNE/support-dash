'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ItemBuffer = require('../utils/ItemBuffer');

var _ItemBuffer2 = _interopRequireDefault(_ItemBuffer);

var _BufferedListItem = require('./_BufferedListItem');

var _BufferedListItem2 = _interopRequireDefault(_BufferedListItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ROW_STYLE = {
  position: 'relative'
};

function bufferPropsMapper(props) {
  return {
    defaultItemSize: props.itemHeight,
    itemsCount: props.itemsCount,
    viewportSize: props.viewportHeight
  };
}

/**
 * ** DO NOT MAKE this pure-rendered component.
 */

var TxlBufferedListItems = function (_Component) {
  (0, _inherits3.default)(TxlBufferedListItems, _Component);

  function TxlBufferedListItems() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlBufferedListItems);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlBufferedListItems.__proto__ || (0, _getPrototypeOf2.default)(TxlBufferedListItems)).call.apply(_ref, [this].concat(args)));

    var _this$props = _this.props,
        firstItemIndex = _this$props.firstItemIndex,
        firstItemOffset = _this$props.firstItemOffset;

    _this.buffer = new _ItemBuffer2.default(bufferPropsMapper(_this.props));
    _this.staticRowsArray = [];
    _this.state = {
      rowsToRender: _this.buffer.getItems(firstItemIndex, firstItemOffset)
    };
    return _this;
  }

  (0, _createClass3.default)(TxlBufferedListItems, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      if (this.props.itemsCount !== props.itemsCount || this.props.itemHeight !== props.itemHeight) {
        this.buffer = new _ItemBuffer2.default(bufferPropsMapper(props));
      }

      this.setState({
        rowsToRender: this.buffer.getItems(props.firstItemIndex, props.firstItemOffset)
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.staticRowsArray = [];
    }
  }, {
    key: 'render',
    value: function render() {
      var rowsToRender = this.state.rowsToRender;
      var _props = this.props,
          itemRenderer = _props.itemRenderer,
          itemHeight = _props.itemHeight,
          offsetTop = _props.offsetTop;


      this.staticRowsArray = rowsToRender.map(function (itemIndex, rowsToRenderIndex) {
        var itemOffsetTop = offsetTop + itemIndex * itemHeight;
        return _react2.default.createElement(_BufferedListItem2.default, {
          key: rowsToRenderIndex,
          itemRenderer: itemRenderer,
          index: itemIndex,
          height: itemHeight,
          offsetTop: Math.round(itemOffsetTop)
        });
      });

      var style = (0, _extends3.default)({}, ROW_STYLE, {
        height: this.props.scrollHeight
      });

      return _react2.default.createElement(
        'div',
        {
          'data-component': 'TxlBufferedListItems',
          style: style
        },
        this.staticRowsArray
      );
    }
  }]);
  return TxlBufferedListItems;
}(_react.Component);

TxlBufferedListItems.displayName = 'TxlBufferedListItems';
TxlBufferedListItems.propTypes = {
  firstItemIndex: _react.PropTypes.number.isRequired,
  firstItemOffset: _react.PropTypes.number.isRequired,
  itemHeight: _react.PropTypes.number.isRequired,
  itemRenderer: _react.PropTypes.func.isRequired,
  itemsCount: _react.PropTypes.number.isRequired,
  offsetTop: _react.PropTypes.number.isRequired,
  scrollHeight: _react.PropTypes.number.isRequired,
  viewportHeight: _react.PropTypes.number.isRequired
};

var _default = TxlBufferedListItems;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ROW_STYLE, 'ROW_STYLE', 'src/lists/_BufferedListItems.jsx');

  __REACT_HOT_LOADER__.register(bufferPropsMapper, 'bufferPropsMapper', 'src/lists/_BufferedListItems.jsx');

  __REACT_HOT_LOADER__.register(TxlBufferedListItems, 'TxlBufferedListItems', 'src/lists/_BufferedListItems.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/lists/_BufferedListItems.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saXN0cy9fQnVmZmVyZWRMaXN0SXRlbXMuanN4Il0sIm5hbWVzIjpbIlJPV19TVFlMRSIsInBvc2l0aW9uIiwiYnVmZmVyUHJvcHNNYXBwZXIiLCJwcm9wcyIsImRlZmF1bHRJdGVtU2l6ZSIsIml0ZW1IZWlnaHQiLCJpdGVtc0NvdW50Iiwidmlld3BvcnRTaXplIiwidmlld3BvcnRIZWlnaHQiLCJUeGxCdWZmZXJlZExpc3RJdGVtcyIsImFyZ3MiLCJmaXJzdEl0ZW1JbmRleCIsImZpcnN0SXRlbU9mZnNldCIsImJ1ZmZlciIsInN0YXRpY1Jvd3NBcnJheSIsInN0YXRlIiwicm93c1RvUmVuZGVyIiwiZ2V0SXRlbXMiLCJzZXRTdGF0ZSIsIml0ZW1SZW5kZXJlciIsIm9mZnNldFRvcCIsIm1hcCIsIml0ZW1JbmRleCIsInJvd3NUb1JlbmRlckluZGV4IiwiaXRlbU9mZnNldFRvcCIsIk1hdGgiLCJyb3VuZCIsInN0eWxlIiwiaGVpZ2h0Iiwic2Nyb2xsSGVpZ2h0IiwiZGlzcGxheU5hbWUiLCJwcm9wVHlwZXMiLCJudW1iZXIiLCJpc1JlcXVpcmVkIiwiZnVuYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFLQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxZQUFZO0FBQ2hCQyxZQUFVO0FBRE0sQ0FBbEI7O0FBSUEsU0FBU0MsaUJBQVQsQ0FBMkJDLEtBQTNCLEVBQWtDO0FBQ2hDLFNBQU87QUFDTEMscUJBQWlCRCxNQUFNRSxVQURsQjtBQUVMQyxnQkFBWUgsTUFBTUcsVUFGYjtBQUdMQyxrQkFBY0osTUFBTUs7QUFIZixHQUFQO0FBS0Q7O0FBRUQ7Ozs7SUFHTUMsb0I7OztBQUNKLGtDQUFxQjtBQUFBOztBQUFBOztBQUFBLHNDQUFOQyxJQUFNO0FBQU5BLFVBQU07QUFBQTs7QUFBQSw2TEFDVkEsSUFEVTs7QUFBQSxzQkFLZixNQUFLUCxLQUxVO0FBQUEsUUFHakJRLGNBSGlCLGVBR2pCQSxjQUhpQjtBQUFBLFFBSWpCQyxlQUppQixlQUlqQkEsZUFKaUI7O0FBTW5CLFVBQUtDLE1BQUwsR0FBYyx5QkFBZVgsa0JBQWtCLE1BQUtDLEtBQXZCLENBQWYsQ0FBZDtBQUNBLFVBQUtXLGVBQUwsR0FBdUIsRUFBdkI7QUFDQSxVQUFLQyxLQUFMLEdBQWE7QUFDWEMsb0JBQWMsTUFBS0gsTUFBTCxDQUFZSSxRQUFaLENBQ1pOLGNBRFksRUFFWkMsZUFGWTtBQURILEtBQWI7QUFSbUI7QUFjcEI7Ozs7OENBRXlCVCxLLEVBQU87QUFDL0IsVUFBSSxLQUFLQSxLQUFMLENBQVdHLFVBQVgsS0FBMEJILE1BQU1HLFVBQWhDLElBQ0EsS0FBS0gsS0FBTCxDQUFXRSxVQUFYLEtBQTBCRixNQUFNRSxVQURwQyxFQUNnRDtBQUM5QyxhQUFLUSxNQUFMLEdBQWMseUJBQWVYLGtCQUFrQkMsS0FBbEIsQ0FBZixDQUFkO0FBQ0Q7O0FBRUQsV0FBS2UsUUFBTCxDQUFjO0FBQ1pGLHNCQUFjLEtBQUtILE1BQUwsQ0FBWUksUUFBWixDQUNaZCxNQUFNUSxjQURNLEVBRVpSLE1BQU1TLGVBRk07QUFERixPQUFkO0FBTUQ7OzsyQ0FFc0I7QUFDckIsV0FBS0UsZUFBTCxHQUF1QixFQUF2QjtBQUNEOzs7NkJBRVE7QUFBQSxVQUNDRSxZQURELEdBQ2tCLEtBQUtELEtBRHZCLENBQ0NDLFlBREQ7QUFBQSxtQkFNSCxLQUFLYixLQU5GO0FBQUEsVUFHTGdCLFlBSEssVUFHTEEsWUFISztBQUFBLFVBSUxkLFVBSkssVUFJTEEsVUFKSztBQUFBLFVBS0xlLFNBTEssVUFLTEEsU0FMSzs7O0FBUVAsV0FBS04sZUFBTCxHQUF1QkUsYUFBYUssR0FBYixDQUFpQixVQUFDQyxTQUFELEVBQVlDLGlCQUFaLEVBQWtDO0FBQ3hFLFlBQU1DLGdCQUFnQkosWUFBYUUsWUFBWWpCLFVBQS9DO0FBQ0EsZUFDRTtBQUNFLGVBQUtrQixpQkFEUDtBQUVFLHdCQUFjSixZQUZoQjtBQUdFLGlCQUFPRyxTQUhUO0FBSUUsa0JBQVFqQixVQUpWO0FBS0UscUJBQVdvQixLQUFLQyxLQUFMLENBQVdGLGFBQVg7QUFMYixVQURGO0FBU0QsT0FYc0IsQ0FBdkI7O0FBYUEsVUFBTUcsbUNBQ0QzQixTQURDO0FBRUo0QixnQkFBUSxLQUFLekIsS0FBTCxDQUFXMEI7QUFGZixRQUFOOztBQUtBLGFBQ0U7QUFBQTtBQUFBO0FBQ0UsNEJBQWUsc0JBRGpCO0FBRUUsaUJBQU9GO0FBRlQ7QUFJRyxhQUFLYjtBQUpSLE9BREY7QUFRRDs7Ozs7QUFHSEwscUJBQXFCcUIsV0FBckIsR0FBbUMsc0JBQW5DO0FBQ0FyQixxQkFBcUJzQixTQUFyQixHQUFpQztBQUMvQnBCLGtCQUFnQixpQkFBVXFCLE1BQVYsQ0FBaUJDLFVBREY7QUFFL0JyQixtQkFBaUIsaUJBQVVvQixNQUFWLENBQWlCQyxVQUZIO0FBRy9CNUIsY0FBWSxpQkFBVTJCLE1BQVYsQ0FBaUJDLFVBSEU7QUFJL0JkLGdCQUFjLGlCQUFVZSxJQUFWLENBQWVELFVBSkU7QUFLL0IzQixjQUFZLGlCQUFVMEIsTUFBVixDQUFpQkMsVUFMRTtBQU0vQmIsYUFBVyxpQkFBVVksTUFBVixDQUFpQkMsVUFORztBQU8vQkosZ0JBQWMsaUJBQVVHLE1BQVYsQ0FBaUJDLFVBUEE7QUFRL0J6QixrQkFBZ0IsaUJBQVV3QixNQUFWLENBQWlCQztBQVJGLENBQWpDOztlQVdleEIsb0I7Ozs7Ozs7OztnQ0FuR1RULFM7O2dDQUlHRSxpQjs7Z0NBV0hPLG9CIiwiZmlsZSI6Il9CdWZmZXJlZExpc3RJdGVtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge1xuICBDb21wb25lbnQsXG4gIFByb3BUeXBlcyxcbiB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEl0ZW1CdWZmZXIgZnJvbSAnLi4vdXRpbHMvSXRlbUJ1ZmZlcic7XG5pbXBvcnQgQnVmZmVyZWRMaXN0SXRlbSBmcm9tICcuL19CdWZmZXJlZExpc3RJdGVtJztcblxuY29uc3QgUk9XX1NUWUxFID0ge1xuICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbn07XG5cbmZ1bmN0aW9uIGJ1ZmZlclByb3BzTWFwcGVyKHByb3BzKSB7XG4gIHJldHVybiB7XG4gICAgZGVmYXVsdEl0ZW1TaXplOiBwcm9wcy5pdGVtSGVpZ2h0LFxuICAgIGl0ZW1zQ291bnQ6IHByb3BzLml0ZW1zQ291bnQsXG4gICAgdmlld3BvcnRTaXplOiBwcm9wcy52aWV3cG9ydEhlaWdodCxcbiAgfTtcbn1cblxuLyoqXG4gKiAqKiBETyBOT1QgTUFLRSB0aGlzIHB1cmUtcmVuZGVyZWQgY29tcG9uZW50LlxuICovXG5jbGFzcyBUeGxCdWZmZXJlZExpc3RJdGVtcyBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcbiAgICBjb25zdCB7XG4gICAgICBmaXJzdEl0ZW1JbmRleCxcbiAgICAgIGZpcnN0SXRlbU9mZnNldCxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICB0aGlzLmJ1ZmZlciA9IG5ldyBJdGVtQnVmZmVyKGJ1ZmZlclByb3BzTWFwcGVyKHRoaXMucHJvcHMpKTtcbiAgICB0aGlzLnN0YXRpY1Jvd3NBcnJheSA9IFtdO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICByb3dzVG9SZW5kZXI6IHRoaXMuYnVmZmVyLmdldEl0ZW1zKFxuICAgICAgICBmaXJzdEl0ZW1JbmRleCxcbiAgICAgICAgZmlyc3RJdGVtT2Zmc2V0XG4gICAgICApLFxuICAgIH07XG4gIH1cblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKHByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuaXRlbXNDb3VudCAhPT0gcHJvcHMuaXRlbXNDb3VudCB8fFxuICAgICAgICB0aGlzLnByb3BzLml0ZW1IZWlnaHQgIT09IHByb3BzLml0ZW1IZWlnaHQpIHtcbiAgICAgIHRoaXMuYnVmZmVyID0gbmV3IEl0ZW1CdWZmZXIoYnVmZmVyUHJvcHNNYXBwZXIocHJvcHMpKTtcbiAgICB9XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHJvd3NUb1JlbmRlcjogdGhpcy5idWZmZXIuZ2V0SXRlbXMoXG4gICAgICAgIHByb3BzLmZpcnN0SXRlbUluZGV4LFxuICAgICAgICBwcm9wcy5maXJzdEl0ZW1PZmZzZXRcbiAgICAgICksXG4gICAgfSk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnN0YXRpY1Jvd3NBcnJheSA9IFtdO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgcm93c1RvUmVuZGVyIH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IHtcbiAgICAgIGl0ZW1SZW5kZXJlcixcbiAgICAgIGl0ZW1IZWlnaHQsXG4gICAgICBvZmZzZXRUb3AsXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICB0aGlzLnN0YXRpY1Jvd3NBcnJheSA9IHJvd3NUb1JlbmRlci5tYXAoKGl0ZW1JbmRleCwgcm93c1RvUmVuZGVySW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IGl0ZW1PZmZzZXRUb3AgPSBvZmZzZXRUb3AgKyAoaXRlbUluZGV4ICogaXRlbUhlaWdodCk7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8QnVmZmVyZWRMaXN0SXRlbVxuICAgICAgICAgIGtleT17cm93c1RvUmVuZGVySW5kZXh9XG4gICAgICAgICAgaXRlbVJlbmRlcmVyPXtpdGVtUmVuZGVyZXJ9XG4gICAgICAgICAgaW5kZXg9e2l0ZW1JbmRleH1cbiAgICAgICAgICBoZWlnaHQ9e2l0ZW1IZWlnaHR9XG4gICAgICAgICAgb2Zmc2V0VG9wPXtNYXRoLnJvdW5kKGl0ZW1PZmZzZXRUb3ApfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHN0eWxlID0ge1xuICAgICAgLi4uUk9XX1NUWUxFLFxuICAgICAgaGVpZ2h0OiB0aGlzLnByb3BzLnNjcm9sbEhlaWdodCxcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgZGF0YS1jb21wb25lbnQ9XCJUeGxCdWZmZXJlZExpc3RJdGVtc1wiXG4gICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgID5cbiAgICAgICAge3RoaXMuc3RhdGljUm93c0FycmF5fVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5UeGxCdWZmZXJlZExpc3RJdGVtcy5kaXNwbGF5TmFtZSA9ICdUeGxCdWZmZXJlZExpc3RJdGVtcyc7XG5UeGxCdWZmZXJlZExpc3RJdGVtcy5wcm9wVHlwZXMgPSB7XG4gIGZpcnN0SXRlbUluZGV4OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGZpcnN0SXRlbU9mZnNldDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBpdGVtSGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGl0ZW1SZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXRlbXNDb3VudDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBvZmZzZXRUb3A6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgc2Nyb2xsSGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHZpZXdwb3J0SGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBUeGxCdWZmZXJlZExpc3RJdGVtcztcbiJdfQ==