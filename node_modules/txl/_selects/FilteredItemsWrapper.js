'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _Actions = require('../constants/Actions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultPredicate() {
  return true;
}

var FilteredItemsWrapper = function () {
  function FilteredItemsWrapper() {
    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var predicate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultPredicate;
    var searchTerm = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    var showCreateNew = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    (0, _classCallCheck3.default)(this, FilteredItemsWrapper);

    this.getItems = this.getItems.bind(this);
    this.getItem = this.getItem.bind(this);
    this.getSize = this.getSize.bind(this);
    this.getOriginalIndex = this.getOriginalIndex.bind(this);

    this._showCreateNew = showCreateNew;
    this._items = [].concat((0, _toConsumableArray3.default)(items));
    this._predicate = predicate;
    this._filteredIndexes = [];
    this._searchTerm = searchTerm;
    this._init();
  }

  (0, _createClass3.default)(FilteredItemsWrapper, [{
    key: '_init',
    value: function _init() {
      var filteredIndexes = [];
      var filteredItems = [];
      for (var itemIndex = 0; itemIndex < this._items.length; itemIndex++) {
        var item = this._items[itemIndex];
        if (this._predicate(item)) {
          filteredIndexes.push(itemIndex);
          filteredItems.push(item);
        }
      }

      if (this._showCreateNew && this._searchTerm) {
        filteredIndexes.push(this._items.length);
        filteredItems.push({
          groupKey: 'New Item',
          id: _Actions.CREATE_NEW,
          value: this._searchTerm
        });
      }

      this._filteredIndexes = filteredIndexes;
      this._filteredItems = filteredItems;
    }
  }, {
    key: 'getOriginalIndex',
    value: function getOriginalIndex(index) {
      return this._filteredIndexes[index];
    }
  }, {
    key: 'getSize',
    value: function getSize() {
      return this._filteredItems.length;
    }
  }, {
    key: 'getItem',
    value: function getItem(index) {
      return this._filteredItems[index];
    }
  }, {
    key: 'getItems',
    value: function getItems() {
      return this._filteredItems;
    }
  }]);
  return FilteredItemsWrapper;
}();

var _default = FilteredItemsWrapper;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(defaultPredicate, 'defaultPredicate', 'src/_selects/FilteredItemsWrapper.js');

  __REACT_HOT_LOADER__.register(FilteredItemsWrapper, 'FilteredItemsWrapper', 'src/_selects/FilteredItemsWrapper.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/_selects/FilteredItemsWrapper.js');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fc2VsZWN0cy9GaWx0ZXJlZEl0ZW1zV3JhcHBlci5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0UHJlZGljYXRlIiwiRmlsdGVyZWRJdGVtc1dyYXBwZXIiLCJpdGVtcyIsInByZWRpY2F0ZSIsInNlYXJjaFRlcm0iLCJzaG93Q3JlYXRlTmV3IiwiZ2V0SXRlbXMiLCJiaW5kIiwiZ2V0SXRlbSIsImdldFNpemUiLCJnZXRPcmlnaW5hbEluZGV4IiwiX3Nob3dDcmVhdGVOZXciLCJfaXRlbXMiLCJfcHJlZGljYXRlIiwiX2ZpbHRlcmVkSW5kZXhlcyIsIl9zZWFyY2hUZXJtIiwiX2luaXQiLCJmaWx0ZXJlZEluZGV4ZXMiLCJmaWx0ZXJlZEl0ZW1zIiwiaXRlbUluZGV4IiwibGVuZ3RoIiwiaXRlbSIsInB1c2giLCJncm91cEtleSIsImlkIiwidmFsdWUiLCJfZmlsdGVyZWRJdGVtcyIsImluZGV4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUVBLFNBQVNBLGdCQUFULEdBQTRCO0FBQzFCLFNBQU8sSUFBUDtBQUNEOztJQUVLQyxvQjtBQUNKLGtDQUE4RjtBQUFBLFFBQWxGQyxLQUFrRix1RUFBMUUsRUFBMEU7QUFBQSxRQUF0RUMsU0FBc0UsdUVBQTFESCxnQkFBMEQ7QUFBQSxRQUF4Q0ksVUFBd0MsdUVBQTNCLEVBQTJCO0FBQUEsUUFBdkJDLGFBQXVCLHVFQUFQLEtBQU87QUFBQTs7QUFDNUYsU0FBS0MsUUFBTCxHQUFnQixLQUFLQSxRQUFMLENBQWNDLElBQWQsQ0FBbUIsSUFBbkIsQ0FBaEI7QUFDQSxTQUFLQyxPQUFMLEdBQWUsS0FBS0EsT0FBTCxDQUFhRCxJQUFiLENBQWtCLElBQWxCLENBQWY7QUFDQSxTQUFLRSxPQUFMLEdBQWUsS0FBS0EsT0FBTCxDQUFhRixJQUFiLENBQWtCLElBQWxCLENBQWY7QUFDQSxTQUFLRyxnQkFBTCxHQUF3QixLQUFLQSxnQkFBTCxDQUFzQkgsSUFBdEIsQ0FBMkIsSUFBM0IsQ0FBeEI7O0FBRUEsU0FBS0ksY0FBTCxHQUFzQk4sYUFBdEI7QUFDQSxTQUFLTyxNQUFMLDhDQUFrQlYsS0FBbEI7QUFDQSxTQUFLVyxVQUFMLEdBQWtCVixTQUFsQjtBQUNBLFNBQUtXLGdCQUFMLEdBQXdCLEVBQXhCO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQlgsVUFBbkI7QUFDQSxTQUFLWSxLQUFMO0FBQ0Q7Ozs7NEJBRU87QUFDTixVQUFNQyxrQkFBa0IsRUFBeEI7QUFDQSxVQUFNQyxnQkFBZ0IsRUFBdEI7QUFDQSxXQUFLLElBQUlDLFlBQVksQ0FBckIsRUFBd0JBLFlBQVksS0FBS1AsTUFBTCxDQUFZUSxNQUFoRCxFQUF3REQsV0FBeEQsRUFBcUU7QUFDbkUsWUFBTUUsT0FBTyxLQUFLVCxNQUFMLENBQVlPLFNBQVosQ0FBYjtBQUNBLFlBQUksS0FBS04sVUFBTCxDQUFnQlEsSUFBaEIsQ0FBSixFQUEyQjtBQUN6QkosMEJBQWdCSyxJQUFoQixDQUFxQkgsU0FBckI7QUFDQUQsd0JBQWNJLElBQWQsQ0FBbUJELElBQW5CO0FBQ0Q7QUFDRjs7QUFFRCxVQUFJLEtBQUtWLGNBQUwsSUFBdUIsS0FBS0ksV0FBaEMsRUFBNkM7QUFDM0NFLHdCQUFnQkssSUFBaEIsQ0FBcUIsS0FBS1YsTUFBTCxDQUFZUSxNQUFqQztBQUNBRixzQkFBY0ksSUFBZCxDQUFtQjtBQUNqQkMsb0JBQVUsVUFETztBQUVqQkMsaUNBRmlCO0FBR2pCQyxpQkFBTyxLQUFLVjtBQUhLLFNBQW5CO0FBS0Q7O0FBRUQsV0FBS0QsZ0JBQUwsR0FBd0JHLGVBQXhCO0FBQ0EsV0FBS1MsY0FBTCxHQUFzQlIsYUFBdEI7QUFDRDs7O3FDQUVnQlMsSyxFQUFPO0FBQ3RCLGFBQU8sS0FBS2IsZ0JBQUwsQ0FBc0JhLEtBQXRCLENBQVA7QUFDRDs7OzhCQUVTO0FBQ1IsYUFBTyxLQUFLRCxjQUFMLENBQW9CTixNQUEzQjtBQUNEOzs7NEJBRU9PLEssRUFBTztBQUNiLGFBQU8sS0FBS0QsY0FBTCxDQUFvQkMsS0FBcEIsQ0FBUDtBQUNEOzs7K0JBRVU7QUFDVCxhQUFPLEtBQUtELGNBQVo7QUFDRDs7Ozs7ZUFHWXpCLG9COzs7Ozs7Ozs7Z0NBNURORCxnQjs7Z0NBSUhDLG9CIiwiZmlsZSI6IkZpbHRlcmVkSXRlbXNXcmFwcGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ1JFQVRFX05FVyB9IGZyb20gJy4uL2NvbnN0YW50cy9BY3Rpb25zJztcblxuZnVuY3Rpb24gZGVmYXVsdFByZWRpY2F0ZSgpIHtcbiAgcmV0dXJuIHRydWU7XG59XG5cbmNsYXNzIEZpbHRlcmVkSXRlbXNXcmFwcGVyIHtcbiAgY29uc3RydWN0b3IoaXRlbXMgPSBbXSwgcHJlZGljYXRlID0gZGVmYXVsdFByZWRpY2F0ZSwgc2VhcmNoVGVybSA9ICcnLCBzaG93Q3JlYXRlTmV3ID0gZmFsc2UpIHtcbiAgICB0aGlzLmdldEl0ZW1zID0gdGhpcy5nZXRJdGVtcy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuZ2V0SXRlbSA9IHRoaXMuZ2V0SXRlbS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuZ2V0U2l6ZSA9IHRoaXMuZ2V0U2l6ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuZ2V0T3JpZ2luYWxJbmRleCA9IHRoaXMuZ2V0T3JpZ2luYWxJbmRleC5iaW5kKHRoaXMpO1xuXG4gICAgdGhpcy5fc2hvd0NyZWF0ZU5ldyA9IHNob3dDcmVhdGVOZXc7XG4gICAgdGhpcy5faXRlbXMgPSBbLi4uaXRlbXNdO1xuICAgIHRoaXMuX3ByZWRpY2F0ZSA9IHByZWRpY2F0ZTtcbiAgICB0aGlzLl9maWx0ZXJlZEluZGV4ZXMgPSBbXTtcbiAgICB0aGlzLl9zZWFyY2hUZXJtID0gc2VhcmNoVGVybTtcbiAgICB0aGlzLl9pbml0KCk7XG4gIH1cblxuICBfaW5pdCgpIHtcbiAgICBjb25zdCBmaWx0ZXJlZEluZGV4ZXMgPSBbXTtcbiAgICBjb25zdCBmaWx0ZXJlZEl0ZW1zID0gW107XG4gICAgZm9yIChsZXQgaXRlbUluZGV4ID0gMDsgaXRlbUluZGV4IDwgdGhpcy5faXRlbXMubGVuZ3RoOyBpdGVtSW5kZXgrKykge1xuICAgICAgY29uc3QgaXRlbSA9IHRoaXMuX2l0ZW1zW2l0ZW1JbmRleF07XG4gICAgICBpZiAodGhpcy5fcHJlZGljYXRlKGl0ZW0pKSB7XG4gICAgICAgIGZpbHRlcmVkSW5kZXhlcy5wdXNoKGl0ZW1JbmRleCk7XG4gICAgICAgIGZpbHRlcmVkSXRlbXMucHVzaChpdGVtKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5fc2hvd0NyZWF0ZU5ldyAmJiB0aGlzLl9zZWFyY2hUZXJtKSB7XG4gICAgICBmaWx0ZXJlZEluZGV4ZXMucHVzaCh0aGlzLl9pdGVtcy5sZW5ndGgpO1xuICAgICAgZmlsdGVyZWRJdGVtcy5wdXNoKHtcbiAgICAgICAgZ3JvdXBLZXk6ICdOZXcgSXRlbScsXG4gICAgICAgIGlkOiBDUkVBVEVfTkVXLFxuICAgICAgICB2YWx1ZTogdGhpcy5fc2VhcmNoVGVybSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuX2ZpbHRlcmVkSW5kZXhlcyA9IGZpbHRlcmVkSW5kZXhlcztcbiAgICB0aGlzLl9maWx0ZXJlZEl0ZW1zID0gZmlsdGVyZWRJdGVtcztcbiAgfVxuXG4gIGdldE9yaWdpbmFsSW5kZXgoaW5kZXgpIHtcbiAgICByZXR1cm4gdGhpcy5fZmlsdGVyZWRJbmRleGVzW2luZGV4XTtcbiAgfVxuXG4gIGdldFNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ZpbHRlcmVkSXRlbXMubGVuZ3RoO1xuICB9XG5cbiAgZ2V0SXRlbShpbmRleCkge1xuICAgIHJldHVybiB0aGlzLl9maWx0ZXJlZEl0ZW1zW2luZGV4XTtcbiAgfVxuXG4gIGdldEl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLl9maWx0ZXJlZEl0ZW1zO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZpbHRlcmVkSXRlbXNXcmFwcGVyO1xuIl19