'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Base = require('../../base/Base');

var _ContentEditableTarget = require('./ContentEditableTarget');

var _ContentEditableTarget2 = _interopRequireDefault(_ContentEditableTarget);

var _clamp = require('../../utils/clamp');

var _clamp2 = _interopRequireDefault(_clamp);

var _Chip = require('../../chip/Chip');

var _Chip2 = _interopRequireDefault(_Chip);

var _helpers = require('../../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var CHIP_MARGIN_STYLE = {
  marginBottom: 2,
  marginTop: 2
};

var EXTRA_MESSAGE_STYLE = {
  lineHeight: (0, _helpers.gridUnits)(7),
  marginRight: (0, _helpers.gridUnits)(2)
};

function defaultExtraMessageGetter(props) {
  var size = props.size,
      value = props.value;

  return 'and ' + (value.length - size) + ' more';
}

function isAllSelected(_ref) {
  var value = _ref.value,
      items = _ref.items,
      loading = _ref.loading;

  var valueSize = (value || []).length;
  return valueSize !== 0 && valueSize === items.length && !loading;
}

function createChipsTargetWithLimit() {
  var _desc, _value, _class;

  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref2$allText = _ref2.allText,
      allText = _ref2$allText === undefined ? 'All' : _ref2$allText,
      _ref2$extraMessageGet = _ref2.extraMessageGetter,
      extraMessageGetter = _ref2$extraMessageGet === undefined ? defaultExtraMessageGetter : _ref2$extraMessageGet,
      _ref2$limit = _ref2.limit,
      limit = _ref2$limit === undefined ? 4 : _ref2$limit;

  var TxlChipsTarget = (_class = function (_React$Component) {
    (0, _inherits3.default)(TxlChipsTarget, _React$Component);

    function TxlChipsTarget() {
      (0, _classCallCheck3.default)(this, TxlChipsTarget);
      return (0, _possibleConstructorReturn3.default)(this, (TxlChipsTarget.__proto__ || (0, _getPrototypeOf2.default)(TxlChipsTarget)).apply(this, arguments));
    }

    (0, _createClass3.default)(TxlChipsTarget, [{
      key: 'renderChips',
      value: function renderChips() {
        var _props = this.props,
            items = _props.items,
            selectItem = _props.selectItem,
            value = _props.value,
            valueMapper = _props.valueMapper;

        var valueSize = (value || []).length;
        var maxSize = (0, _clamp2.default)(0, limit, items.length);
        var size = (0, _clamp2.default)(0, valueSize, maxSize);

        var chips = [];

        var _loop = function _loop(i) {
          var item = value[i];
          var handleDimiss = function handleDimiss(e) {
            e.stopPropagation();
            selectItem({ item: item });
          };

          chips.push(_react2.default.createElement(
            'div',
            {
              key: i,
              style: CHIP_MARGIN_STYLE
            },
            _react2.default.createElement(
              _Chip2.default,
              { onDismiss: handleDimiss },
              valueMapper && valueMapper(item)
            )
          ));
        };

        for (var i = 0; i < size; i++) {
          _loop(i);
        }

        if (valueSize > size) {
          chips.push(_react2.default.createElement(
            'span',
            {
              key: 'more',
              style: EXTRA_MESSAGE_STYLE
            },
            extraMessageGetter({ size: size, value: value })
          ));
        }

        return chips;
      }
    }, {
      key: 'render',
      value: function render() {
        var _props2 = this.props,
            value = _props2.value,
            placeholder = _props2.placeholder;

        var valueSize = (value || []).length;
        var placeholderValue = valueSize > 0 ? undefined : placeholder;
        return _react2.default.createElement(
          _ContentEditableTarget2.default,
          (0, _extends3.default)({}, this.props, {
            placeholder: placeholderValue
          }),
          isAllSelected(this.props) ? allText : this.renderChips()
        );
      }
    }]);
    return TxlChipsTarget;
  }(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'renderChips', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'renderChips'), _class.prototype)), _class);


  TxlChipsTarget.propTypes = {
    children: _ContentEditableTarget2.default.propTypes.children,
    disabled: _ContentEditableTarget2.default.propTypes.disabled,
    items: _react.PropTypes.array,
    label: _ContentEditableTarget2.default.propTypes.label,
    open: _ContentEditableTarget2.default.propTypes.open,
    placeholder: _ContentEditableTarget2.default.propTypes.placeholder,
    search: _react.PropTypes.string,
    secondaryText: _ContentEditableTarget2.default.propTypes.secondaryText,
    selectItem: _react.PropTypes.func,
    updateSearch: _ContentEditableTarget2.default.propTypes.updateSearch,
    validationState: _ContentEditableTarget2.default.propTypes.validationState,
    value: _react.PropTypes.array,
    valueMapper: _react.PropTypes.func
  };

  TxlChipsTarget.displayName = 'TxlChipsTarget';

  TxlChipsTarget.defaultProps = {
    items: [],
    search: ''
  };

  return TxlChipsTarget;
}

var _default = createChipsTargetWithLimit;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(CHIP_MARGIN_STYLE, 'CHIP_MARGIN_STYLE', 'src/dropdowns/_targets/ChipsTargetWithLimit.jsx');

  __REACT_HOT_LOADER__.register(EXTRA_MESSAGE_STYLE, 'EXTRA_MESSAGE_STYLE', 'src/dropdowns/_targets/ChipsTargetWithLimit.jsx');

  __REACT_HOT_LOADER__.register(defaultExtraMessageGetter, 'defaultExtraMessageGetter', 'src/dropdowns/_targets/ChipsTargetWithLimit.jsx');

  __REACT_HOT_LOADER__.register(isAllSelected, 'isAllSelected', 'src/dropdowns/_targets/ChipsTargetWithLimit.jsx');

  __REACT_HOT_LOADER__.register(createChipsTargetWithLimit, 'createChipsTargetWithLimit', 'src/dropdowns/_targets/ChipsTargetWithLimit.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/dropdowns/_targets/ChipsTargetWithLimit.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,