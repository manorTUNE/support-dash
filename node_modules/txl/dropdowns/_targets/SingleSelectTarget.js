'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _theme = require('../../styles/theme');

var _helpers = require('../../styles/helpers');

var _ContentEditableTarget = require('./ContentEditableTarget');

var _ContentEditableTarget2 = _interopRequireDefault(_ContentEditableTarget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VALUE_STYLE = {
  lineHeight: 'normal',
  maxWidth: 'calc(100% - ' + (0, _helpers.gridUnits)(2) + ')',
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
};

var VALUE_STYLE_OPEN = (0, _extends3.default)({}, VALUE_STYLE, {
  backgroundColor: _theme.COLOR_ACCENT['200']
});

var getDisplayValue = function getDisplayValue(props) {
  return !props.search && props.value && props.valueMapper(props.value);
};

var TxlSingleSelectTarget = function TxlSingleSelectTarget(props) {
  var clearSearch = props.clearSearch,
      closeDropdown = props.closeDropdown,
      disabled = props.disabled,
      items = props.items,
      label = props.label,
      onKeyDown = props.onKeyDown,
      open = props.open,
      openDropdown = props.openDropdown,
      placeholder = props.placeholder,
      search = props.search,
      secondaryText = props.secondaryText,
      selectItem = props.selectItem,
      updateSearch = props.updateSearch,
      validationState = props.validationState,
      value = props.value,
      valueMapper = props.valueMapper,
      others = (0, _objectWithoutProperties3.default)(props, ['clearSearch', 'closeDropdown', 'disabled', 'items', 'label', 'onKeyDown', 'open', 'openDropdown', 'placeholder', 'search', 'secondaryText', 'selectItem', 'updateSearch', 'validationState', 'value', 'valueMapper']);

  var valueStyle = open ? VALUE_STYLE_OPEN : VALUE_STYLE;

  return _react2.default.createElement(
    _ContentEditableTarget2.default,
    (0, _extends3.default)({
      clearSearch: clearSearch,
      closeDropdown: closeDropdown,
      disabled: disabled,
      items: items,
      label: label,
      onKeyDown: onKeyDown,
      open: open,
      openDropdown: openDropdown,
      placeholder: !value && placeholder || undefined,
      search: search,
      secondaryText: secondaryText,
      selectItem: selectItem,
      updateSearch: updateSearch,
      validationState: validationState,
      value: search,
      valueMapper: valueMapper
    }, others),
    _react2.default.createElement(
      'div',
      { style: valueStyle },
      getDisplayValue(props)
    )
  );
};

TxlSingleSelectTarget.propTypes = {
  clearSearch: _ContentEditableTarget2.default.propTypes.clearSearch,
  closeDropdown: _react.PropTypes.func,
  disabled: _ContentEditableTarget2.default.propTypes.disabled,
  items: _ContentEditableTarget2.default.propTypes.items,
  label: _ContentEditableTarget2.default.propTypes.label,
  onKeyDown: _ContentEditableTarget2.default.propTypes.onKeyDown,
  open: _ContentEditableTarget2.default.propTypes.open,
  openDropdown: _ContentEditableTarget2.default.propTypes.openDropdown,
  placeholder: _ContentEditableTarget2.default.propTypes.placeholder,
  search: _ContentEditableTarget2.default.propTypes.search,
  secondaryText: _ContentEditableTarget2.default.propTypes.secondaryText,
  selectItem: _ContentEditableTarget2.default.propTypes.selectItem,
  updateSearch: _ContentEditableTarget2.default.propTypes.updateSearch,
  validationState: _ContentEditableTarget2.default.propTypes.validationState,
  value: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.string]),
  valueMapper: _ContentEditableTarget2.default.propTypes.valueMapper
};

TxlSingleSelectTarget.displayName = 'TxlSingleSelectTarget';

var _default = TxlSingleSelectTarget;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(VALUE_STYLE, 'VALUE_STYLE', 'src/dropdowns/_targets/SingleSelectTarget.jsx');

  __REACT_HOT_LOADER__.register(VALUE_STYLE_OPEN, 'VALUE_STYLE_OPEN', 'src/dropdowns/_targets/SingleSelectTarget.jsx');

  __REACT_HOT_LOADER__.register(getDisplayValue, 'getDisplayValue', 'src/dropdowns/_targets/SingleSelectTarget.jsx');

  __REACT_HOT_LOADER__.register(TxlSingleSelectTarget, 'TxlSingleSelectTarget', 'src/dropdowns/_targets/SingleSelectTarget.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/dropdowns/_targets/SingleSelectTarget.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kcm9wZG93bnMvX3RhcmdldHMvU2luZ2xlU2VsZWN0VGFyZ2V0LmpzeCJdLCJuYW1lcyI6WyJWQUxVRV9TVFlMRSIsImxpbmVIZWlnaHQiLCJtYXhXaWR0aCIsIm92ZXJmbG93IiwidGV4dE92ZXJmbG93Iiwid2hpdGVTcGFjZSIsIlZBTFVFX1NUWUxFX09QRU4iLCJiYWNrZ3JvdW5kQ29sb3IiLCJnZXREaXNwbGF5VmFsdWUiLCJwcm9wcyIsInNlYXJjaCIsInZhbHVlIiwidmFsdWVNYXBwZXIiLCJUeGxTaW5nbGVTZWxlY3RUYXJnZXQiLCJjbGVhclNlYXJjaCIsImNsb3NlRHJvcGRvd24iLCJkaXNhYmxlZCIsIml0ZW1zIiwibGFiZWwiLCJvbktleURvd24iLCJvcGVuIiwib3BlbkRyb3Bkb3duIiwicGxhY2Vob2xkZXIiLCJzZWNvbmRhcnlUZXh0Iiwic2VsZWN0SXRlbSIsInVwZGF0ZVNlYXJjaCIsInZhbGlkYXRpb25TdGF0ZSIsIm90aGVycyIsInZhbHVlU3R5bGUiLCJ1bmRlZmluZWQiLCJwcm9wVHlwZXMiLCJmdW5jIiwib25lT2ZUeXBlIiwib2JqZWN0Iiwic3RyaW5nIiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsY0FBYztBQUNsQkMsY0FBWSxRQURNO0FBRWxCQyw2QkFBeUIsd0JBQUcsQ0FBSCxDQUF6QixNQUZrQjtBQUdsQkMsWUFBVSxRQUhRO0FBSWxCQyxnQkFBYyxVQUpJO0FBS2xCQyxjQUFZO0FBTE0sQ0FBcEI7O0FBUUEsSUFBTUMsOENBQ0ROLFdBREM7QUFFSk8sbUJBQWlCLG9CQUFhLEtBQWI7QUFGYixFQUFOOztBQUtBLElBQU1DLGtCQUFrQixTQUFsQkEsZUFBa0I7QUFBQSxTQUFTLENBQUNDLE1BQU1DLE1BQVAsSUFBaUJELE1BQU1FLEtBQXZCLElBQWdDRixNQUFNRyxXQUFOLENBQWtCSCxNQUFN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LFVBWlo7QUFhaENDLGdCQUFjLGdDQUFzQkssU0FBdEIsQ0FBZ0NMLFlBYmQ7QUFjaENDLG1CQUFpQixnQ0FBc0JJLFNBQXRCLENBQWdDSixlQWRqQjtBQWVoQ2YsU0FBTyxpQkFBVXFCLFNBQVYsQ0FBb0IsQ0FBQyxpQkFBVUMsTUFBWCxFQUFtQixpQkFBVUMsTUFBN0IsQ0FBcEIsQ0FmeUI7QUFnQmhDdEIsZUFBYSxnQ0FBc0JrQixTQUF0QixDQUFnQ2xCO0FBaEJiLENBQWxDOztBQW1CQUMsc0JBQXNCc0IsV0FBdEIsR0FBb0MsdUJBQXBDOztlQUVldEIscUI7Ozs7Ozs7OztnQ0FyRlRiLFc7O2dDQVFBTSxnQjs7Z0NBS0FFLGU7O2dDQUVBSyxxQiIsImZpbGUiOiJTaW5nbGVTZWxlY3RUYXJnZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHJvcFR5cGVzIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBDT0xPUl9BQ0NFTlQgfSBmcm9tICcuLi8uLi9zdHlsZXMvdGhlbWUnO1xuaW1wb3J0IHsgZ3JpZFVuaXRzIGFzIGd1IH0gZnJvbSAnLi4vLi4vc3R5bGVzL2hlbHBlcnMnO1xuaW1wb3J0IENvbnRlbnRFZGl0YWJsZVRhcmdldCBmcm9tICcuL0NvbnRlbnRFZGl0YWJsZVRhcmdldCc7XG5cbmNvbnN0IFZBTFVFX1NUWUxFID0ge1xuICBsaW5lSGVpZ2h0OiAnbm9ybWFsJyxcbiAgbWF4V2lkdGg6IGBjYWxjKDEwMCUgLSAke2d1KDIpfSlgLFxuICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIHRleHRPdmVyZmxvdzogJ2VsbGlwc2lzJyxcbiAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG59O1xuXG5jb25zdCBWQUxVRV9TVFlMRV9PUEVOID0ge1xuICAuLi5WQUxVRV9TVFlMRSxcbiAgYmFja2dyb3VuZENvbG9yOiBDT0xPUl9BQ0NFTlRbJzIwMCddLFxufTtcblxuY29uc3QgZ2V0RGlzcGxheVZhbHVlID0gcHJvcHMgPT4gIXByb3BzLnNlYXJjaCAmJiBwcm9wcy52YWx1ZSAmJiBwcm9wcy52YWx1ZU1hcHBlcihwcm9wcy52YWx1ZSk7XG5cbmNvbnN0IFR4bFNpbmdsZVNlbGVjdFRhcmdldCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgY2xlYXJTZWFyY2gsXG4gICAgY2xvc2VEcm9wZG93bixcbiAgICBkaXNhYmxlZCxcbiAgICBpdGVtcyxcbiAgICBsYWJlbCxcbiAgICBvbktleURvd24sXG4gICAgb3BlbixcbiAgICBvcGVuRHJvcGRvd24sXG4gICAgcGxhY2Vob2xkZXIsXG4gICAgc2VhcmNoLFxuICAgIHNlY29uZGFyeVRleHQsXG4gICAgc2VsZWN0SXRlbSxcbiAgICB1cGRhdGVTZWFyY2gsXG4gICAgdmFsaWRhdGlvblN0YXRlLFxuICAgIHZhbHVlLFxuICAgIHZhbHVlTWFwcGVyLFxuICAgIC4uLm90aGVyc1xuICB9ID0gcHJvcHM7XG4gIGNvbnN0IHZhbHVlU3R5bGUgPSBvcGVuID8gVkFMVUVfU1RZTEVfT1BFTiA6IFZBTFVFX1NUWUxFO1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRlbnRFZGl0YWJsZVRhcmdldFxuICAgICAgY2xlYXJTZWFyY2g9e2NsZWFyU2VhcmNofVxuICAgICAgY2xvc2VEcm9wZG93bj17Y2xvc2VEcm9wZG93bn1cbiAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgIGl0ZW1zPXtpdGVtc31cbiAgICAgIGxhYmVsPXtsYWJlbH1cbiAgICAgIG9uS2V5RG93bj17b25LZXlEb3dufVxuICAgICAgb3Blbj17b3Blbn1cbiAgICAgIG9wZW5Ecm9wZG93bj17b3BlbkRyb3Bkb3dufVxuICAgICAgcGxhY2Vob2xkZXI9eyghdmFsdWUgJiYgcGxhY2Vob2xkZXIpIHx8IHVuZGVmaW5lZH1cbiAgICAgIHNlYXJjaD17c2VhcmNofVxuICAgICAgc2Vjb25kYXJ5VGV4dD17c2Vjb25kYXJ5VGV4dH1cbiAgICAgIHNlbGVjdEl0ZW09e3NlbGVjdEl0ZW19XG4gICAgICB1cGRhdGVTZWFyY2g9e3VwZGF0ZVNlYXJjaH1cbiAgICAgIHZhbGlkYXRpb25TdGF0ZT17dmFsaWRhdGlvblN0YXRlfVxuICAgICAgdmFsdWU9e3NlYXJjaH1cbiAgICAgIHZhbHVlTWFwcGVyPXt2YWx1ZU1hcHBlcn1cbiAgICAgIHsuLi5vdGhlcnN9XG4gICAgPlxuICAgICAgPGRpdiBzdHlsZT17dmFsdWVTdHlsZX0+XG4gICAgICAgIHtnZXREaXNwbGF5VmFsdWUocHJvcHMpfVxuICAgICAgPC9kaXY+XG4gICAgPC9Db250ZW50RWRpdGFibGVUYXJnZXQ+XG4gICk7XG59O1xuXG5UeGxTaW5nbGVTZWxlY3RUYXJnZXQucHJvcFR5cGVzID0ge1xuICBjbGVhclNlYXJjaDogQ29udGVudEVkaXRhYmxlVGFyZ2V0LnByb3BUeXBlcy5jbGVhclNlYXJjaCxcbiAgY2xvc2VEcm9wZG93bjogUHJvcFR5cGVzLmZ1bmMsXG4gIGRpc2FibGVkOiBDb250ZW50RWRpdGFibGVUYXJnZXQucHJvcFR5cGVzLmRpc2FibGVkLFxuICBpdGVtczogQ29udGVudEVkaXRhYmxlVGFyZ2V0LnByb3BUeXBlcy5pdGVtcyxcbiAgbGFiZWw6IENvbnRlbnRFZGl0YWJsZVRhcmdldC5wcm9wVHlwZXMubGFiZWwsXG4gIG9uS2V5RG93bjogQ29udGVudEVkaXRhYmxlVGFyZ2V0LnByb3BUeXBlcy5vbktleURvd24sXG4gIG9wZW46IENvbnRlbnRFZGl0YWJsZVRhcmdldC5wcm9wVHlwZXMub3BlbixcbiAgb3BlbkRyb3Bkb3duOiBDb250ZW50RWRpdGFibGVUYXJnZXQucHJvcFR5cGVzLm9wZW5Ecm9wZG93bixcbiAgcGxhY2Vob2xkZXI6IENvbnRlbnRFZGl0YWJsZVRhcmdldC5wcm9wVHlwZXMucGxhY2Vob2xkZXIsXG4gIHNlYXJjaDogQ29udGVudEVkaXRhYmxlVGFyZ2V0LnByb3BUeXBlcy5zZWFyY2gsXG4gIHNlY29uZGFyeVRleHQ6IENvbnRlbnRFZGl0YWJsZVRhcmdldC5wcm9wVHlwZXMuc2Vjb25kYXJ5VGV4dCxcbiAgc2VsZWN0SXRlbTogQ29udGVudEVkaXRhYmxlVGFyZ2V0LnByb3BUeXBlcy5zZWxlY3RJdGVtLFxuICB1cGRhdGVTZWFyY2g6IENvbnRlbnRFZGl0YWJsZVRhcmdldC5wcm9wVHlwZXMudXBkYXRlU2VhcmNoLFxuICB2YWxpZGF0aW9uU3RhdGU6IENvbnRlbnRFZGl0YWJsZVRhcmdldC5wcm9wVHlwZXMudmFsaWRhdGlvblN0YXRlLFxuICB2YWx1ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICB2YWx1ZU1hcHBlcjogQ29udGVudEVkaXRhYmxlVGFyZ2V0LnByb3BUeXBlcy52YWx1ZU1hcHBlcixcbn07XG5cblR4bFNpbmdsZVNlbGVjdFRhcmdldC5kaXNwbGF5TmFtZSA9ICdUeGxTaW5nbGVTZWxlY3RUYXJnZXQnO1xuXG5leHBvcnQgZGVmYXVsdCBUeGxTaW5nbGVTZWxlY3RUYXJnZXQ7XG4iXX0=