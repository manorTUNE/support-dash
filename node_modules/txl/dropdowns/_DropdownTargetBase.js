'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _desc, _value, _class2; /* eslint no-param-reassign: "off" */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _debounce = require('lodash/debounce');

var _debounce2 = _interopRequireDefault(_debounce);

var _ReactUtils = require('../ReactUtils');

var _Base = require('../base/Base');

var _TetheredPopoverTarget = require('../_popover/_TetheredPopoverTarget');

var _TetheredPopoverTarget2 = _interopRequireDefault(_TetheredPopoverTarget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

function adjustTetherOffset(tetherInstance) {
  if (!tetherInstance || !tetherInstance.element) {
    return;
  }

  var elementClasses = tetherInstance.element.classList;

  // TETHER CLASSES REFERENCE
  // ------------------------

  // POPPED UP
  // "tether-element-attached-bottom"
  // "tether-element-attached-center"

  // POPPED DOWN
  // "tether-element-attached-top"
  // "tether-element-attached-center"

  // If the tether is popped upwards, we need to reset the top offset
  // applied so that the dropdown doesn't appear in front of the target.
  if (elementClasses.contains('tether-element-attached-bottom')) {
    tetherInstance.offset.top = '0px';
  }
}

var TxlDropdownTargetBase = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlDropdownTargetBase, _React$Component);

  function TxlDropdownTargetBase() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlDropdownTargetBase);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlDropdownTargetBase.__proto__ || (0, _getPrototypeOf2.default)(TxlDropdownTargetBase)).call.apply(_ref, [this].concat(args)));

    _this._resizeTarget = (0, _debounce2.default)(_this._setTargetWidth, 200);

    _this.state = {
      targetWidth: null,
      tetherConfig: {
        offset: '0 0',
        optimizations: {
          moveElement: false
        },
        targetOffset: '0 0'
      }
    };
    return _this;
  }

  (0, _createClass3.default)(TxlDropdownTargetBase, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._setTetherConfig();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      /**
       * @TODO: Could possibly optimize this so the initial calculation can wait
       * until the dropdown is actually interacted with.
       **/
      this._setTargetWidth();
      window.addEventListener('resize', this._resizeTarget);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props !== nextProps) {
        this._setTetherConfig();
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this._resizeTarget);
    }
  }, {
    key: '_setTargetWidth',
    value: function _setTargetWidth() {
      var targetWidth = this.props.width || (0, _ReactUtils.findDOMNode)(this.refs.target).getBoundingClientRect().width + 'px';
      if (targetWidth === this.state.targetWidth) {
        return;
      }

      this.setState({ targetWidth: targetWidth });
    }
  }, {
    key: '_setTetherConfig',
    value: function _setTetherConfig() {
      var _props = this.props,
          attachmentLocation = _props.attachmentLocation,
          yOffset = _props.yOffset;


      var tetherConfig = this.state.tetherConfig;

      if (yOffset) {
        tetherConfig.offset = yOffset + 'px 0';
      }
      tetherConfig.attachment = 'top ' + attachmentLocation;
      tetherConfig.targetAttachment = 'bottom ' + attachmentLocation;

      this.setState({ tetherConfig: tetherConfig });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          children = _props2.children,
          content = _props2.content,
          style = _props2.style,
          visible = _props2.visible,
          onContentClick = _props2.onContentClick,
          otherProps = (0, _objectWithoutProperties3.default)(_props2, ['children', 'content', 'style', 'visible', 'onContentClick']);
      var tetherConfig = this.state.tetherConfig;


      return _react2.default.createElement(
        _TetheredPopoverTarget2.default,
        (0, _extends3.default)({}, otherProps, {
          configuration: tetherConfig,
          content: content,
          popoverWidth: this.state.targetWidth,
          ref: 'target',
          style: style,
          tetherAdjustFunction: adjustTetherOffset,
          visible: visible,
          onContentClick: onContentClick
        }),
        children
      );
    }
  }]);
  return TxlDropdownTargetBase;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_setTargetWidth', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_setTargetWidth'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_setTetherConfig', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_setTetherConfig'), _class2.prototype)), _class2)) || _class;

exports.default = TxlDropdownTargetBase;


TxlDropdownTargetBase.propTypes = {
  attachmentLocation: _react.PropTypes.oneOf(['left', 'right', 'center']),
  children: _TetheredPopoverTarget2.default.propTypes.children,
  content: _TetheredPopoverTarget2.default.propTypes.content,
  onContentClick: _react.PropTypes.func,
  popoverZIndex: _TetheredPopoverTarget2.default.propTypes.popoverZIndex,
  style: _TetheredPopoverTarget2.default.propTypes.style,
  visible: _TetheredPopoverTarget2.default.propTypes.visible,
  width: _TetheredPopoverTarget2.default.propTypes.popoverWidth,
  yOffset: _react.PropTypes.number
};

TxlDropdownTargetBase.defaultProps = {
  attachmentLocation: 'left'
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(adjustTetherOffset, 'adjustTetherOffset', 'src/dropdowns/_DropdownTargetBase.jsx');

  __REACT_HOT_LOADER__.register(TxlDropdownTargetBase, 'TxlDropdownTargetBase', 'src/dropdowns/_DropdownTargetBase.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,