'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _clone = require('lodash/clone');

var _clone2 = _interopRequireDefault(_clone);

var _helpers = require('../styles/helpers');

var _ButtonStyleHelpers = require('../buttons/_ButtonStyleHelpers');

var _theme = require('../styles/theme');

var _Base = require('../base/Base');

var _createDropdown = require('./_createDropdown');

var _createDropdown2 = _interopRequireDefault(_createDropdown);

var _Button = require('../buttons/Button');

var _Button2 = _interopRequireDefault(_Button);

var _IconButton = require('../buttons/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

var _More = require('../icons/More');

var _More2 = _interopRequireDefault(_More);

var _LoadingIndicator = require('../progress-indicators/LoadingIndicator');

var _LoadingIndicator2 = _interopRequireDefault(_LoadingIndicator);

var _FlyoutTargetBase = require('./_FlyoutTargetBase');

var _FlyoutTargetBase2 = _interopRequireDefault(_FlyoutTargetBase);

var _Container = require('../containers/Container');

var _Container2 = _interopRequireDefault(_Container);

var _FlatSelectableItemList = require('../lists/_FlatSelectableItemList');

var _FlatSelectableItemList2 = _interopRequireDefault(_FlatSelectableItemList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var babelPluginFlowReactPropTypes_proptype_ButtonVariant = require('../buttons/Button').babelPluginFlowReactPropTypes_proptype_ButtonVariant || require('react').PropTypes.any;

var babelPluginFlowReactPropTypes_proptype_ButtonSize = require('../buttons/Button').babelPluginFlowReactPropTypes_proptype_ButtonSize || require('react').PropTypes.any;

var WRAPPER_STYLES = {
  position: 'relative'
};

var BUTTONS_WRAP = {
  display: 'inline-flex'
};

var MAIN_BUTTON_EXTRA = {
  borderBottomRightRadius: 0,
  borderTopRightRadius: 0
};

var MORE_BUTTON_EXTRA = {
  borderBottomLeftRadius: 0,
  borderLeft: '1px solid white', // border separator
  borderTopLeftRadius: 0,
  marginLeft: 0 };

var LOADING_BUTTON_EXTRA = (0, _extends3.default)({}, MORE_BUTTON_EXTRA, {
  borderLeft: '1px solid transparent',
  display: 'inline-flex',
  justifyContent: 'center',
  paddingLeft: 0,
  paddingRight: 0
});

var TxlSplitAction = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlSplitAction, _React$Component);

  function TxlSplitAction(props, context) {
    (0, _classCallCheck3.default)(this, TxlSplitAction);

    var _this = (0, _possibleConstructorReturn3.default)(this, (TxlSplitAction.__proto__ || (0, _getPrototypeOf2.default)(TxlSplitAction)).call(this, props, context));

    _this.state = { value: undefined };
    _this._mainAction = {};
    _this._items = [];
    return _this;
  }

  (0, _createClass3.default)(TxlSplitAction, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._updateLists(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this._updateLists(nextProps);
    }
  }, {
    key: '_toggleDropdown',
    value: function _toggleDropdown() {
      this.props.updateDropdown && this.props.updateDropdown({ open: !this.props.open });
    }
  }, {
    key: '_updateLists',
    value: function _updateLists(props) {
      this._mainAction = this.props.items.filter(function (item) {
        return item.value === props.mainActionValue;
      })[0];
      this._items = this.props.items.filter(function (item) {
        return item.value !== props.mainActionValue;
      });
    }
  }, {
    key: '_handleAction',
    value: function _handleAction(item) {
      if (this.props.open) {
        this.props.updateDropdown && this.props.updateDropdown({ open: false });
      }
      this.props.onAction && this.props.onAction(item);
    }
  }, {
    key: '_handleMainAction',
    value: function _handleMainAction() {
      /**
       * mainAction must be cloned when calling, while items does not because
       * FlatSelectableItemList onChange callback is called with a clone already
       */
      this._handleAction((0, _clone2.default)(this._mainAction, true));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          loading = _props.loading,
          open = _props.open,
          size = _props.size,
          variant = _props.variant;


      var loadingButtonColors = void 0;
      if (loading) {
        var loadingStyles = (0, _ButtonStyleHelpers.getButtonStylesFromProps)(this.props, { hovered: true }, this.context.txlAppTheme);
        loadingButtonColors = {
          backgroundColor: loadingStyles.backgroundColor,
          color: loadingStyles.color
        };
      }

      var moreButtonSize = function (val) {
        return {
          height: (0, _helpers.gridUnits)(val),
          width: (0, _helpers.gridUnitsRaw)(val) + 1
        };
      }(size === 'standard' ? 5 : 7);

      var loadingButtonStyles = (0, _helpers.combineStyles)(LOADING_BUTTON_EXTRA, loadingButtonColors, moreButtonSize);

      var mainActionColors = (0, _helpers.combineStyles)(MAIN_BUTTON_EXTRA, loadingButtonColors);

      var moreButtonStyles = (0, _helpers.combineStyles)(MORE_BUTTON_EXTRA, moreButtonSize);

      var buttonProps = {
        size: size,
        variant: variant
      };

      var flyoutContent = _react2.default.createElement(
        _Container2.default,
        null,
        _react2.default.createElement(_FlatSelectableItemList2.default, {
          items: this._items,
          onClick: this._handleAction,
          selectedValues: [this.state.value]
        })
      );

      return _react2.default.createElement(
        'div',
        { style: BUTTONS_WRAP },
        _react2.default.createElement(
          'span',
          { 'data-test-main-action': true },
          _react2.default.createElement(
            _Button2.default,
            (0, _extends3.default)({
              _style: mainActionColors,
              onClick: this._handleMainAction
            }, buttonProps),
            this._mainAction.label
          )
        ),
        _react2.default.createElement(
          _FlyoutTargetBase2.default,
          {
            componentName: 'TxlSplitActionButton',
            style: WRAPPER_STYLES,
            content: flyoutContent,
            visible: open
          },
          loading ? _react2.default.createElement(
            _Button2.default,
            (0, _extends3.default)({
              size: size,
              _style: loadingButtonStyles
            }, buttonProps),
            _react2.default.createElement(_LoadingIndicator2.default, {
              size: 'small',
              color: loadingButtonStyles.color
            })
          ) : _react2.default.createElement(
            'span',
            { 'data-test-more-button': true },
            _react2.default.createElement(_IconButton2.default, (0, _extends3.default)({
              icon: _More2.default,
              _style: moreButtonStyles,
              onClick: this._toggleDropdown
            }, buttonProps))
          )
        )
      );
    }
  }]);
  return TxlSplitAction;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_toggleDropdown', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_toggleDropdown'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_updateLists', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_updateLists'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleAction', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleAction'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMainAction', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMainAction'), _class2.prototype)), _class2)) || _class;

TxlSplitAction.propTypes = {
  items: require('react').PropTypes.arrayOf(require('react').PropTypes.shape({
    label: require('react').PropTypes.any.isRequired,
    value: require('react').PropTypes.string.isRequired
  })).isRequired,
  loading: require('react').PropTypes.bool,
  mainActionValue: require('react').PropTypes.string.isRequired,
  onAction: require('react').PropTypes.func.isRequired,
  open: require('react').PropTypes.bool,
  size: babelPluginFlowReactPropTypes_proptype_ButtonSize,
  updateDropdown: require('react').PropTypes.func,
  variant: babelPluginFlowReactPropTypes_proptype_ButtonVariant
};


TxlSplitAction.defaultProps = {
  onAction: _Base.NOOP,
  size: _Button2.default.defaultProps.size,
  updateDropdown: _Base.NOOP
};

TxlSplitAction.contextTypes = {
  txlAppTheme: _theme.contextThemePropType
};

var _default = (0, _createDropdown2.default)(TxlSplitAction);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(WRAPPER_STYLES, 'WRAPPER_STYLES', 'src/dropdowns/SplitAction.jsx');

  __REACT_HOT_LOADER__.register(BUTTONS_WRAP, 'BUTTONS_WRAP', 'src/dropdowns/SplitAction.jsx');

  __REACT_HOT_LOADER__.register(MAIN_BUTTON_EXTRA, 'MAIN_BUTTON_EXTRA', 'src/dropdowns/SplitAction.jsx');

  __REACT_HOT_LOADER__.register(MORE_BUTTON_EXTRA, 'MORE_BUTTON_EXTRA', 'src/dropdowns/SplitAction.jsx');

  __REACT_HOT_LOADER__.register(LOADING_BUTTON_EXTRA, 'LOADING_BUTTON_EXTRA', 'src/dropdowns/SplitAction.jsx');

  __REACT_HOT_LOADER__.register(TxlSplitAction, 'TxlSplitAction', 'src/dropdowns/SplitAction.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/dropdowns/SplitAction.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,