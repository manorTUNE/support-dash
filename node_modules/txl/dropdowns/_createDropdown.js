'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = createDropDown;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Base = require('../base/Base');

var _ReactUtils = require('../ReactUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var POPOVER_ATTR = 'data-test-tethered-popover';

/**
 * Check to see if element is in item list dropdown. We need to check this so click handler doesn't
 * close parent dropdown when a child dropdown menu is clicked.
 *
 * @param {HTMLElement} el
 * @returns {boolean}
 */
function isElementInDropdown(el) {
  var parentEl = el;
  while (parentEl) {
    if (parentEl.hasAttribute(POPOVER_ATTR)) {
      return true;
    }
    parentEl = parentEl.parentElement;
  }
  return false;
}

/**
 * createDropdown creates a high order component which handles
 * dropdown states changes. The main objective of this decorator
 * is to support flexible way to handle dropdown state using any flux
 * implementation
 *
 * Note 1: It can be used as a decorator
 *
 * @param  {ReactClass} Component   Component to be wrapped by Dropdown
 * @return {ReactClass}            New ReactClass that is wrapped by Dropdown
 */
function createDropDown(Component) {
  var _desc, _value, _class;

  /**
   * Dropdown is higher order components that managers state for a dropdown for
   * the given Component
   */
  var TxlDropdown = (_class = function (_React$Component) {
    (0, _inherits3.default)(TxlDropdown, _React$Component);

    function TxlDropdown() {
      var _ref;

      (0, _classCallCheck3.default)(this, TxlDropdown);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlDropdown.__proto__ || (0, _getPrototypeOf2.default)(TxlDropdown)).call.apply(_ref, [this].concat(args)));

      _this.state = { open: false };
      return _this;
    }

    (0, _createClass3.default)(TxlDropdown, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (this.props.opened === undefined) {
          window.addEventListener('click', this._handleClick);
          window.addEventListener('click', this._handleClickCapture, true);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this.props.opened === undefined) {
          window.removeEventListener('click', this._handleClick);
          window.removeEventListener('click', this._handleClickCapture, true);
        }
      }
    }, {
      key: '_handleClick',
      value: function _handleClick() {
        if (this.state.pendingClose) {
          this.setState({
            open: false,
            pendingClose: undefined
          });
        }
      }
    }, {
      key: '_handleClickCapture',
      value: function _handleClickCapture(e) {
        /**
         * This was implemented to assert that a click happened inside a dropdown even if the dropdown
         * container is appended to the <body> tag in which case the component doesn't actually
         * 'contain' the click target.
         *
         * We need to use 'capture' phase here because the dropdown may be removed from the
         * DOM by the time 'bubble' event handling fires which would falsely lead us to believe that
         * the click happened outside of the dropdown.  Things like clicking a dropdown
         * within a dropdown would close *all* dropdowns when that wasn't the expected behavior.
         *
         * @TODO This should probably be replaced with a more elegant
         * solution that doesn't involve DOM traversal
         * https://jira.corp.tune.com/browse/TXLENG-122
         */
        if (!(0, _ReactUtils.findDOMNode)(this).contains(e.target) && !isElementInDropdown(e.target) && this.state.open) {
          this.setState({ pendingClose: true });
        }
      }
    }, {
      key: '_updateDropdown',
      value: function _updateDropdown(_ref2) {
        var open = _ref2.open;

        this.setState({ open: open });
      }
    }, {
      key: 'render',
      value: function render() {
        // props will override any state variables
        // This way any dropdown component with props.open will be a
        // controlled component.
        return _react2.default.createElement(Component
        // provide hook for grabbing internal component in tests
        , (0, _extends3.default)({ ref: 'unwrappedDropdownComponent',
          updateDropdown: this._updateDropdown
        }, this.state, this.props));
      }
    }]);
    return TxlDropdown;
  }(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, '_handleClick', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_handleClick'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_handleClickCapture', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_handleClickCapture'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_updateDropdown', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, '_updateDropdown'), _class.prototype)), _class);

  // make sure the proptypes are passed so can be inherited by other components

  TxlDropdown.propTypes = Component.propTypes;
  TxlDropdown.displayName = 'TxlDropdown(' + (Component.displayName || Component.name) + ')';

  return TxlDropdown;
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(POPOVER_ATTR, 'POPOVER_ATTR', 'src/dropdowns/_createDropdown.jsx');

  __REACT_HOT_LOADER__.register(isElementInDropdown, 'isElementInDropdown', 'src/dropdowns/_createDropdown.jsx');

  __REACT_HOT_LOADER__.register(createDropDown, 'createDropDown', 'src/dropdowns/_createDropdown.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,