'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _SingleSelectControl = require('../_selects/SingleSelectControl');

var _SingleSelectControl2 = _interopRequireDefault(_SingleSelectControl);

var _TetheredContainer = require('./_containers/TetheredContainer');

var _TetheredContainer2 = _interopRequireDefault(_TetheredContainer);

var _SingleSelectTarget = require('./_targets/SingleSelectTarget');

var _SingleSelectTarget2 = _interopRequireDefault(_SingleSelectTarget);

var _SingleSelectItem = require('../_selects/SingleSelectItem');

var _SingleSelectItem2 = _interopRequireDefault(_SingleSelectItem);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var itemRenderer = _react2.default.createFactory(_SingleSelectItem2.default);
var contentEditableTarget = _react2.default.createFactory(_SingleSelectTarget2.default);

var TxlSingleSelect = function TxlSingleSelect(props) {
  var allowNone = props.allowNone,
      closeDropdown = props.closeDropdown,
      dropdownHeight = props.dropdownHeight,
      dropdownWidth = props.dropdownWidth,
      dropdownMaxHeight = props.dropdownMaxHeight,
      grouper = props.grouper,
      items = props.items,
      label = props.label,
      loading = props.loading,
      noContentView = props.noContentView,
      onChange = props.onChange,
      open = props.open,
      openDropdown = props.openDropdown,
      onItemCreate = props.onItemCreate,
      onSearchChange = props.onSearchChange,
      placeholder = props.placeholder,
      secondaryText = props.secondaryText,
      showCreateNew = props.showCreateNew,
      showCreateNewLabel = props.showCreateNewLabel,
      showSearchToViewMoreMessage = props.showSearchToViewMoreMessage,
      validationState = props.validationState,
      value = props.value,
      width = props.width;


  var listProps = {
    height: dropdownHeight,
    maxHeight: dropdownMaxHeight,
    width: dropdownWidth
  };

  return _react2.default.createElement(_SingleSelectControl2.default, {
    allowNone: allowNone,
    closeDropdown: closeDropdown,
    container: _TetheredContainer2.default,
    grouper: grouper,
    itemHeight: (0, _helpers.gridUnitsRaw)(7),
    itemRenderer: itemRenderer,
    items: items,
    label: label,
    listProps: listProps,
    loading: loading,
    noContentView: noContentView,
    onChange: onChange,
    onItemCreate: onItemCreate,
    open: open,
    openDropdown: openDropdown,
    onSearchChange: onSearchChange,
    placeholder: placeholder,
    secondaryText: secondaryText,
    showCreateNew: showCreateNew,
    showCreateNewLabel: showCreateNewLabel,
    showSearchToViewMoreMessage: showSearchToViewMoreMessage,
    target: contentEditableTarget,
    validationState: validationState,
    value: value,
    width: width
  });
};

TxlSingleSelect.displayName = 'TxlSingleSelect';

TxlSingleSelect.propTypes = {
  allowNone: _SingleSelectControl2.default.propTypes.allowNone,
  closeDropdown: _SingleSelectControl2.default.propTypes.closeDropdown,
  dropdownHeight: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  dropdownMaxHeight: _react.PropTypes.number,
  dropdownWidth: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  grouper: _SingleSelectControl2.default.propTypes.grouper,
  items: _SingleSelectControl2.default.propTypes.items,
  label: _SingleSelectControl2.default.propTypes.label,
  loading: _SingleSelectControl2.default.propTypes.loading,
  noContentView: _SingleSelectControl2.default.propTypes.noContentView,
  onChange: _SingleSelectControl2.default.propTypes.onChange,
  onItemCreate: _SingleSelectControl2.default.propTypes.onItemCreate,
  onSearchChange: _SingleSelectControl2.default.propTypes.onSearchChange,
  open: _SingleSelectControl2.default.propTypes.open,
  openDropdown: _SingleSelectControl2.default.propTypes.openDropdown,
  placeholder: _SingleSelectControl2.default.propTypes.placeholder,
  secondaryText: _SingleSelectControl2.default.propTypes.secondaryText,
  showCreateNew: _SingleSelectControl2.default.propTypes.showCreateNew,
  showCreateNewLabel: _SingleSelectControl2.default.propTypes.showCreateNewLabel,
  showSearchToViewMoreMessage: _SingleSelectControl2.default.propTypes.showSearchToViewMoreMessage,
  validationState: _SingleSelectControl2.default.propTypes.validationState,
  value: _SingleSelectControl2.default.propTypes.value,
  width: _SingleSelectControl2.default.propTypes.width
};

TxlSingleSelect.defaultProps = {
  dropdownHeight: 'auto',
  dropdownMaxHeight: (0, _helpers.gridUnitsRaw)(80),
  items: [],
  loading: false,
  validationState: 'base'
};

var _default = TxlSingleSelect;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(itemRenderer, 'itemRenderer', 'src/dropdowns/_SingleSelect.jsx');

  __REACT_HOT_LOADER__.register(contentEditableTarget, 'contentEditableTarget', 'src/dropdowns/_SingleSelect.jsx');

  __REACT_HOT_LOADER__.register(TxlSingleSelect, 'TxlSingleSelect', 'src/dropdowns/_SingleSelect.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/dropdowns/_SingleSelect.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,