'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _MultiSelectControl = require('../_selects/MultiSelectControl');

var _MultiSelectControl2 = _interopRequireDefault(_MultiSelectControl);

var _TetheredContainer = require('./_containers/TetheredContainer');

var _TetheredContainer2 = _interopRequireDefault(_TetheredContainer);

var _ChipsTarget = require('./_targets/ChipsTarget');

var _ChipsTarget2 = _interopRequireDefault(_ChipsTarget);

var _MultiSelectItem = require('../_selects/MultiSelectItem');

var _MultiSelectItem2 = _interopRequireDefault(_MultiSelectItem);

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var itemRenderer = _react2.default.createFactory(_MultiSelectItem2.default);
var chipsTarget = _react2.default.createFactory(_ChipsTarget2.default);

var TxlMultiSelect = function TxlMultiSelect(props) {
  var closeDropdown = props.closeDropdown,
      dropdownHeight = props.dropdownHeight,
      dropdownWidth = props.dropdownWidth,
      enableLocalFiltering = props.enableLocalFiltering,
      items = props.items,
      label = props.label,
      loading = props.loading,
      noContentView = props.noContentView,
      onChange = props.onChange,
      onItemCreate = props.onItemCreate,
      onSearchChange = props.onSearchChange,
      open = props.open,
      openDropdown = props.openDropdown,
      placeholder = props.placeholder,
      secondaryText = props.secondaryText,
      showCreateNew = props.showCreateNew,
      showSearchToViewMoreMessage = props.showSearchToViewMoreMessage,
      validationState = props.validationState,
      value = props.value,
      width = props.width;


  var listProps = {
    height: dropdownHeight,
    width: dropdownWidth
  };

  return _react2.default.createElement(_MultiSelectControl2.default, {
    closeDropdown: closeDropdown,
    container: _TetheredContainer2.default,
    enableLocalFiltering: enableLocalFiltering,
    itemHeight: (0, _helpers.gridUnitsRaw)(7),
    itemRenderer: itemRenderer,
    items: items,
    label: label,
    listProps: listProps,
    loading: loading,
    noContentView: noContentView,
    onChange: onChange,
    onItemCreate: onItemCreate,
    onSearchChange: onSearchChange,
    open: open,
    openDropdown: openDropdown,
    placeholder: placeholder,
    secondaryText: secondaryText,
    showCreateNew: showCreateNew,
    showSearchToViewMoreMessage: showSearchToViewMoreMessage,
    target: chipsTarget,
    validationState: validationState,
    value: value,
    width: width
  });
};

TxlMultiSelect.displayName = 'TxlMultiSelect';

TxlMultiSelect.propTypes = {
  closeDropdown: _MultiSelectControl2.default.propTypes.closeDropdown,
  dropdownHeight: _react.PropTypes.number,
  dropdownWidth: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  enableLocalFiltering: _MultiSelectControl2.default.propTypes.enableLocalFiltering,
  items: _MultiSelectControl2.default.propTypes.items,
  label: _MultiSelectControl2.default.propTypes.label,
  loading: _MultiSelectControl2.default.propTypes.loading,
  noContentView: _MultiSelectControl2.default.propTypes.noContentView,
  onChange: _MultiSelectControl2.default.propTypes.onChange,
  onItemCreate: _MultiSelectControl2.default.propTypes.onItemCreate,
  onSearchChange: _MultiSelectControl2.default.propTypes.onSearchChange,
  open: _MultiSelectControl2.default.propTypes.open,
  openDropdown: _MultiSelectControl2.default.propTypes.openDropdown,
  placeholder: _MultiSelectControl2.default.propTypes.placeholder,
  secondaryText: _MultiSelectControl2.default.propTypes.secondaryText,
  showCreateNew: _MultiSelectControl2.default.propTypes.showCreateNew,
  showSearchToViewMoreMessage: _MultiSelectControl2.default.propTypes.showSearchToViewMoreMessage,
  validationState: _MultiSelectControl2.default.propTypes.validationState,
  value: _MultiSelectControl2.default.propTypes.value,
  width: _MultiSelectControl2.default.propTypes.width
};

TxlMultiSelect.defaultProps = {
  dropdownHeight: (0, _helpers.gridUnitsRaw)(80),
  enableLocalFiltering: true,
  items: [],
  loading: false,
  validationState: 'base'
};

var _default = TxlMultiSelect;
exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(itemRenderer, 'itemRenderer', 'src/dropdowns/_MultiSelect.jsx');

  __REACT_HOT_LOADER__.register(chipsTarget, 'chipsTarget', 'src/dropdowns/_MultiSelect.jsx');

  __REACT_HOT_LOADER__.register(TxlMultiSelect, 'TxlMultiSelect', 'src/dropdowns/_MultiSelect.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/dropdowns/_MultiSelect.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,