'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Base = require('../base/Base');

var _helpers = require('../styles/helpers');

var _type = require('../styles/mixins/type');

var _list = require('../styles/mixins/list');

var _theme = require('../styles/theme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var LIST_ITEM_HEIGHT = (0, _helpers.gridUnits)(7);

var CONTAINER_STYLES = (0, _extends3.default)({}, _type.DEFAULT_FONT_FAMILY, {
  borderBottom: '1px solid ' + _theme.COLOR_NEUTRAL['100'],
  display: 'block',
  width: '100%'
});

var LIST_STYLES = (0, _extends3.default)({}, _list.UNSTYLED_LIST, {
  alignItems: 'flex-start',
  display: 'flex'
});

var ITEM_STYLES = {
  flex: '0 0 auto'
};

var LINK_BASE_STYLES = (0, _extends3.default)({}, _type.HEADING_SMALL, {
  color: _theme.COLOR_NEUTRAL['200'],
  display: 'block',
  height: LIST_ITEM_HEIGHT,
  paddingLeft: (0, _helpers.gridUnits)(4),
  paddingRight: (0, _helpers.gridUnits)(4),
  position: 'relative',
  textDecoration: 'none',
  width: 'auto'
});

var BORDER_BASE_STYLES = {
  backgroundColor: 'transparent',
  bottom: '50%',
  display: 'block',
  height: 2,
  left: 0,
  position: 'absolute',
  right: 0
};

var TxlTabList = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlTabList, _React$Component);

  function TxlTabList() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlTabList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlTabList.__proto__ || (0, _getPrototypeOf2.default)(TxlTabList)).call.apply(_ref, [this].concat(args)));

    _this.state = { hoverIndex: null };
    return _this;
  }

  (0, _createClass3.default)(TxlTabList, [{
    key: '_handleClick',
    value: function _handleClick(obj) {
      this.props.onTabClick(obj);
    }
  }, {
    key: '_setHoverIndex',
    value: function _setHoverIndex(index) {
      this.setState({ hoverIndex: index });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var COLOR_APP_THEME = (0, _theme.determineColorAppTheme)(this.context.txlAppTheme);
      var TAB_SELECTED_COLOR = COLOR_APP_THEME['500'];
      var LINK_HOVERED_STYLES = {
        color: TAB_SELECTED_COLOR
      };
      var LINK_SELECTED_STYLES = {
        color: TAB_SELECTED_COLOR,
        pointerEvents: 'none'
      };
      var BORDER_SELECTED_STYLES = {
        backgroundColor: TAB_SELECTED_COLOR,
        bottom: 0
      };

      return _react2.default.createElement(
        'div',
        {
          'data-component': 'TxlTabList',
          style: CONTAINER_STYLES
        },
        _react2.default.createElement(
          'ul',
          { style: LIST_STYLES },
          this.props.items.map(function (item, index) {
            var isSelected = index === _this2.props.selectedIndex;
            var isHovered = index === _this2.state.hoverIndex;

            var linkCombined = (0, _helpers.combineStyles)(LINK_BASE_STYLES, isSelected && LINK_SELECTED_STYLES, isHovered && LINK_HOVERED_STYLES);

            var borderCombined = (0, _helpers.combineStyles)(BORDER_BASE_STYLES, isSelected && BORDER_SELECTED_STYLES);

            var clickHandler = function clickHandler(e) {
              e.preventDefault();
              if (isSelected) {
                return;
              }

              _this2._handleClick({ index: index });
            };

            var tabIndex = isSelected ? -1 : 0;

            return _react2.default.createElement(
              'li',
              {
                key: 'li-' + index,
                style: ITEM_STYLES,
                'data-selected': isSelected ? true : undefined
              },
              _react2.default.createElement(
                'a',
                {
                  // has to have href to be clickable via keyboard
                  href: 'javascript:void(0)' // eslint-disable-line no-script-url
                  , style: linkCombined,
                  onClick: clickHandler,
                  onMouseEnter: function onMouseEnter() {
                    return _this2._setHoverIndex(index);
                  },
                  onMouseLeave: function onMouseLeave() {
                    return _this2._setHoverIndex();
                  },
                  id: item.id,
                  tabIndex: tabIndex
                },
                item.heading,
                _react2.default.createElement('div', { style: borderCombined })
              )
            );
          })
        )
      );
    }
  }]);
  return TxlTabList;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_handleClick', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleClick'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_setHoverIndex', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_setHoverIndex'), _class2.prototype)), _class2)) || _class;

exports.default = TxlTabList;


TxlTabList.propTypes = {
  items: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({
    heading: _react2.default.PropTypes.node.isRequired,
    id: _react2.default.PropTypes.string
  })),
  onTabClick: _react2.default.PropTypes.func.isRequired,
  selectedIndex: _react2.default.PropTypes.number.isRequired
};

TxlTabList.defaultProps = {
  onTabClick: _Base.NOOP
};

TxlTabList.contextTypes = {
  txlAppTheme: _theme.contextThemePropType
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(LIST_ITEM_HEIGHT, 'LIST_ITEM_HEIGHT', 'src/tabs/TabList.jsx');

  __REACT_HOT_LOADER__.register(CONTAINER_STYLES, 'CONTAINER_STYLES', 'src/tabs/TabList.jsx');

  __REACT_HOT_LOADER__.register(LIST_STYLES, 'LIST_STYLES', 'src/tabs/TabList.jsx');

  __REACT_HOT_LOADER__.register(ITEM_STYLES, 'ITEM_STYLES', 'src/tabs/TabList.jsx');

  __REACT_HOT_LOADER__.register(LINK_BASE_STYLES, 'LINK_BASE_STYLES', 'src/tabs/TabList.jsx');

  __REACT_HOT_LOADER__.register(BORDER_BASE_STYLES, 'BORDER_BASE_STYLES', 'src/tabs/TabList.jsx');

  __REACT_HOT_LOADER__.register(TxlTabList, 'TxlTabList', 'src/tabs/TabList.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,