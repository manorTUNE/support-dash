'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TxlCheckbox = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Base = require('../base/Base');

var _Check = require('../icons/Check');

var _Check2 = _interopRequireDefault(_Check);

var _Minus = require('../icons/Minus');

var _Minus2 = _interopRequireDefault(_Minus);

var _WithLabel = require('./_WithLabel');

var _WithLabel2 = _interopRequireDefault(_WithLabel);

var _transitions = require('../styles/mixins/transitions');

var _helpers = require('../styles/helpers');

var _theme = require('../styles/theme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var DISABLED_INPUT_STYLES = {
  display: 'none'
};

var INPUT_STYLES = {
  border: 'none',
  cursor: 'pointer',
  height: '100%',
  left: 0,
  margin: 0,
  opacity: 0,
  position: 'absolute',
  top: 0,
  width: '100%'
};

var CHECKBOX_CONTAINER_STYLES = (0, _extends3.default)({}, (0, _helpers.square)((0, _helpers.gridUnits)(5)), {
  alignItems: 'center',
  display: 'flex',
  justifyContent: 'center'
});

var BASE_CHECKBOX_STYLES = (0, _extends3.default)({}, (0, _helpers.square)('17px'), {
  alignItems: 'center',
  backgroundColor: 'white',
  borderColor: 'transparent',
  borderRadius: '2px',
  borderStyle: 'solid',
  borderWidth: '1px',
  display: 'flex',
  justifyContent: 'center',
  overflow: 'hidden',
  position: 'relative',
  transition: (0, _transitions.cubicTransition)('background')
});

var CHECKED_CHECKBOX_STYLES = {
  focused: {
    backgroundColor: _theme.COLOR_ACCENT['600'],
    borderColor: _theme.COLOR_ACCENT['600'],
    color: _theme.COLOR_ACCENT['600c']
  },
  resting: {
    backgroundColor: _theme.COLOR_ACCENT['500'],
    borderColor: _theme.COLOR_ACCENT['500'],
    color: _theme.COLOR_ACCENT['500c']
  }
};

var UNCHECKED_CHECKBOX_STYLES = {
  focused: {
    backgroundColor: 'white',
    borderColor: _theme.COLOR_NEUTRAL['400']
  },
  resting: {
    backgroundColor: 'white',
    borderColor: _theme.COLOR_NEUTRAL['300']
  }
};

var VARIANT_CHECKBOX_STYLES = {
  partial: {
    focused: {
      backgroundColor: _theme.COLOR_ACCENT['600'],
      borderColor: _theme.COLOR_ACCENT['600'],
      color: _theme.COLOR_ACCENT['600c']
    },
    resting: {
      backgroundColor: _theme.COLOR_ACCENT['500'],
      borderColor: _theme.COLOR_ACCENT['500'],
      color: _theme.COLOR_ACCENT['500c']
    }
  }
};

var DISABLED_CHECKBOX_STYLES = {
  checked: {
    backgroundColor: _theme.COLOR_NEUTRAL['200'],
    borderColor: _theme.COLOR_NEUTRAL['200'],
    color: 'white',
    cursor: 'not-allowed'
  },
  unchecked: {
    backgroundColor: _theme.COLOR_NEUTRAL['100'],
    borderColor: _theme.COLOR_NEUTRAL['200'],
    cursor: 'not-allowed'
  }
};

var TxlCheckbox = exports.TxlCheckbox = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlCheckbox, _React$Component);

  function TxlCheckbox() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlCheckbox);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlCheckbox.__proto__ || (0, _getPrototypeOf2.default)(TxlCheckbox)).call.apply(_ref, [this].concat(args)));

    _this.state = {
      focused: false,
      hovered: false
    };
    return _this;
  }

  (0, _createClass3.default)(TxlCheckbox, [{
    key: 'componentWillUpdate',
    value: function componentWillUpdate(nextProps, nextState) {
      // Need to make sure to not cause the visual hover/focus
      // state to stick after interacting with the input.
      if (nextProps.checked && this.state.focused && nextState.focused) {
        this.setState({
          focused: false
        });
      }
    }
  }, {
    key: '_handleChange',
    value: function _handleChange(e) {
      if (this.props.disabled) {
        return;
      }

      this.props.onChange({
        checked: e.target.checked,
        name: e.target.name
      });
    }
  }, {
    key: '_handleBlur',
    value: function _handleBlur() {
      this.setState({ focused: false });
    }
  }, {
    key: '_handleFocus',
    value: function _handleFocus() {
      this.setState({ focused: true });
    }
  }, {
    key: '_handleMouseEnter',
    value: function _handleMouseEnter() {
      this.setState({ hovered: true });
    }
  }, {
    key: '_handleMouseLeave',
    value: function _handleMouseLeave() {
      this.setState({ hovered: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var variant = this.props.variant;

      var showHoverStyles = this.state.hovered || this.state.focused;
      var enabledState = showHoverStyles ? 'focused' : 'resting';
      var isVariantState = !!VARIANT_CHECKBOX_STYLES[variant];
      var disabledState = this.props.checked ? 'checked' : 'unchecked';

      var checkBoxStyle = isVariantState ? VARIANT_CHECKBOX_STYLES[variant][enabledState] : CHECKED_CHECKBOX_STYLES[enabledState];

      var checkedStateStyles = !this.props.disabled && !this.props.checked && !isVariantState ? UNCHECKED_CHECKBOX_STYLES[enabledState] : checkBoxStyle;

      var checkboxStyles = (0, _helpers.combineStyles)(BASE_CHECKBOX_STYLES, checkedStateStyles, this.props.disabled && DISABLED_CHECKBOX_STYLES[disabledState]);

      var inputStyles = (0, _helpers.combineStyles)(INPUT_STYLES, this.props.disabled && DISABLED_INPUT_STYLES);

      return _react2.default.createElement(
        'div',
        {
          'data-component': 'TxlCheckbox',
          style: CHECKBOX_CONTAINER_STYLES
        },
        _react2.default.createElement(
          'div',
          { style: checkboxStyles },
          this.props.checked && !isVariantState && _react2.default.createElement(_Check2.default, { color: checkboxStyles.color }),
          !this.props.checked && isVariantState && _react2.default.createElement(_Minus2.default, { color: checkboxStyles.color }),
          _react2.default.createElement('input', {
            checked: this.props.checked,
            disabled: this.props.disabled,
            id: this.props.id,
            name: this.props.name,
            onBlur: this._handleBlur,
            onChange: this._handleChange,
            onFocus: this._handleFocus,
            onMouseEnter: this._handleMouseEnter,
            onMouseLeave: this._handleMouseLeave,
            style: inputStyles,
            tabIndex: this.props.tabIndex,
            type: 'checkbox'
          })
        )
      );
    }
  }]);
  return TxlCheckbox;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_handleChange', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleChange'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleBlur', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleBlur'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleFocus', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleFocus'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMouseEnter', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMouseEnter'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMouseLeave', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMouseLeave'), _class2.prototype)), _class2)) || _class;

TxlCheckbox.defaultProps = {
  checked: false,
  disabled: false,
  onChange: _Base.NOOP,
  tabIndex: 0
};

TxlCheckbox.propTypes = {
  checked: _react.PropTypes.bool,
  disabled: _react.PropTypes.bool,
  id: _react.PropTypes.string,
  name: _react.PropTypes.string.isRequired,
  onChange: _react.PropTypes.func.isRequired,
  tabIndex: _react.PropTypes.number,
  variant: _react.PropTypes.oneOf(['partial'])
};

var _default = (0, _WithLabel2.default)({
  clickable: true,
  padding: (0, _helpers.gridUnits)(1)
}, TxlCheckbox);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DISABLED_INPUT_STYLES, 'DISABLED_INPUT_STYLES', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(INPUT_STYLES, 'INPUT_STYLES', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(CHECKBOX_CONTAINER_STYLES, 'CHECKBOX_CONTAINER_STYLES', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(BASE_CHECKBOX_STYLES, 'BASE_CHECKBOX_STYLES', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(CHECKED_CHECKBOX_STYLES, 'CHECKED_CHECKBOX_STYLES', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(UNCHECKED_CHECKBOX_STYLES, 'UNCHECKED_CHECKBOX_STYLES', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(VARIANT_CHECKBOX_STYLES, 'VARIANT_CHECKBOX_STYLES', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(DISABLED_CHECKBOX_STYLES, 'DISABLED_CHECKBOX_STYLES', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(TxlCheckbox, 'TxlCheckbox', 'src/input-fields/Checkbox.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/input-fields/Checkbox.jsx');
}();

;
//# sourceMappingURL=data:application/json;base64,