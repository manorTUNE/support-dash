'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _isEqual = require('lodash/isEqual');

var _isEqual2 = _interopRequireDefault(_isEqual);

var _Base = require('../base/Base');

var _TimeZones = require('../constants/_TimeZones');

var _CalendarUtils = require('../calendar-picker/_CalendarUtils');

var _propTypes = require('../utils/propTypes');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _SingleSelect = require('../dropdowns/_SingleSelect');

var _SingleSelect2 = _interopRequireDefault(_SingleSelect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TxlTimePickerControlled = (0, _radium2.default)(_class = function (_React$Component) {
  (0, _inherits3.default)(TxlTimePickerControlled, _React$Component);

  function TxlTimePickerControlled() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlTimePickerControlled);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlTimePickerControlled.__proto__ || (0, _getPrototypeOf2.default)(TxlTimePickerControlled)).call.apply(_ref, [this].concat(args)));

    _this._handleItemSelect = function () {
      return _this.___handleItemSelect__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    var _this$props = _this.props,
        boundaryEnd = _this$props.boundaryEnd,
        boundaryStart = _this$props.boundaryStart,
        pattern = _this$props.pattern;

    // need to init these here because we need access to props

    _this._timeItems = (0, _CalendarUtils.buildTimeIntervalOptions)({ boundaryEnd: boundaryEnd, boundaryStart: boundaryStart, pattern: pattern });
    return _this;
  }

  (0, _createClass3.default)(TxlTimePickerControlled, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _props = this.props,
          boundaryEnd = _props.boundaryEnd,
          boundaryStart = _props.boundaryStart,
          pattern = _props.pattern;

      // if boundaries change, we need to rebuild time options

      if (!(0, _isEqual2.default)(nextProps.boundaryStart, boundaryStart) || !(0, _isEqual2.default)(nextProps.boundaryEnd, boundaryEnd)) {
        this._timeItems = (0, _CalendarUtils.buildTimeIntervalOptions)({
          boundaryEnd: nextProps.boundaryEnd,
          boundaryStart: nextProps.boundaryStart,
          pattern: pattern
        });
      }
    }

    // handling both onChange and onItemCreate callbacks

  }, {
    key: '___handleItemSelect__REACT_HOT_LOADER__',
    value: function ___handleItemSelect__REACT_HOT_LOADER__() {
      return this.___handleItemSelect__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleItemSelect__REACT_HOT_LOADER__',
    value: function ___handleItemSelect__REACT_HOT_LOADER__() {
      return this.___handleItemSelect__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleItemSelect__REACT_HOT_LOADER__',
    value: function ___handleItemSelect__REACT_HOT_LOADER__(_ref2) {
      var value = _ref2.value;

      // value can be `undefined` if user clicks in search field, doesn't change text, hits enter.
      // value can be `null` if user clicks in search field, doesn't change text, hits delete.
      if (value === undefined || value === null) {
        return;
      }
      if (typeof value === 'string') {
        // If handling onItemCreate, value will be a string with the 'new' item value
        this.props.onItemSelect({ value: value });
      } else if (value.value) {
        // user arrows down or clicks on dropdown item, filtered or not
        this.props.onItemSelect({ value: value.value });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          closeDropdown = _props2.closeDropdown,
          label = _props2.label,
          open = _props2.open,
          openDropdown = _props2.openDropdown,
          pattern = _props2.pattern,
          placeholder = _props2.placeholder,
          secondaryText = _props2.secondaryText,
          textValue = _props2.textValue,
          time = _props2.time,
          validationState = _props2.validationState;

      // allow showing text while editing w/o changing selected time

      var displayTime = time ? (0, _moment2.default)(time).format(pattern) : '';
      var displayValue = {
        value: textValue !== undefined ? textValue : displayTime
      };

      return _react2.default.createElement(
        'div',
        { 'data-component': 'TxlTimePickerControlled' },
        _react2.default.createElement(_SingleSelect2.default, {
          closeDropdown: closeDropdown,
          items: this._timeItems,
          label: label,
          onChange: this._handleItemSelect,
          onItemCreate: this._handleItemSelect,
          open: open,
          openDropdown: openDropdown,
          placeholder: placeholder,
          secondaryText: secondaryText,
          showCreateNew: true,
          validationState: validationState,
          value: displayValue
        })
      );
    }
  }]);
  return TxlTimePickerControlled;
}(_react2.default.Component)) || _class;

exports.default = TxlTimePickerControlled;


TxlTimePickerControlled.propTypes = {
  boundaryEnd: _propTypes2.default.timeObj,
  boundaryStart: _propTypes2.default.timeObj,
  closeDropdown: _SingleSelect2.default.propTypes.closeDropdown,
  label: _react.PropTypes.string,
  onItemSelect: _react.PropTypes.func,
  open: _react.PropTypes.bool,
  openDropdown: _SingleSelect2.default.propTypes.openDropdown,
  pattern: _react.PropTypes.string,
  placeholder: _react.PropTypes.string,
  secondaryText: _react.PropTypes.string,
  setDefaultValue: _react.PropTypes.func,
  textValue: _react.PropTypes.string,
  time: _propTypes2.default.timeObj,
  validationState: _SingleSelect2.default.propTypes.validationState
};

TxlTimePickerControlled.defaultProps = {
  boundaryEnd: { hour: 23, minute: 59, second: 59 },
  boundaryStart: { hour: 0, minute: 0, second: 0 },
  onItemSelect: _Base.NOOP,
  open: false,
  pattern: _TimeZones.DEFAULT_TIME_PATTERN
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(TxlTimePickerControlled, 'TxlTimePickerControlled', 'src/input-fields/TimePickerControlled.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,