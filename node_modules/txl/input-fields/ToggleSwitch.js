'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TxlToggleSwitch = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Base = require('../base/Base');

var _WithLabel = require('./_WithLabel');

var _WithLabel2 = _interopRequireDefault(_WithLabel);

var _LoadingIndicator = require('../progress-indicators/LoadingIndicator');

var _LoadingIndicator2 = _interopRequireDefault(_LoadingIndicator);

var _helpers = require('../styles/helpers');

var _theme = require('../styles/theme');

var _transitions = require('../styles/mixins/transitions');

var _type = require('../styles/mixins/type');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var CONTAINER_HEIGHT_UNITS = 5;
var CONTAINER_WIDTH_UNITS = 7;
var TRACK_HEIGHT_UNITS = 3;
var TRACK_WIDTH_UNITS = 6;
var THUMB_SIZE = '17px';

function midpointDifference(innerSize, outerSize) {
  var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'px';

  return '' + (outerSize / 2 - innerSize / 2) + unit;
}

var COLORS = {
  disabled: _theme.COLOR_NEUTRAL['200'],
  off: {
    base: _theme.COLOR_NEUTRAL['300'],
    hover: _theme.COLOR_NEUTRAL['400']
  },
  on: {
    base: _theme.COLOR_ACCENT['500'],
    hover: _theme.COLOR_ACCENT['600']
  }
};

var CONTAINER_STYLES = (0, _extends3.default)({}, _type.TYPE_SMALL, {
  color: COLORS.disabled,
  height: (0, _helpers.gridUnits)(CONTAINER_HEIGHT_UNITS),
  lineHeight: (0, _helpers.gridUnits)(CONTAINER_HEIGHT_UNITS),
  position: 'relative',
  textAlign: 'center',
  width: (0, _helpers.gridUnits)(CONTAINER_WIDTH_UNITS)
});

var LOADING_CONTAINER_STYLES = {
  alignItems: 'center',
  display: 'flex',
  justifyContent: 'center'
};

var TRACK_STYLES = {
  base: {
    borderRadius: '7.5px',
    height: (0, _helpers.gridUnits)(TRACK_HEIGHT_UNITS),
    left: midpointDifference((0, _helpers.gridUnitsRaw)(TRACK_WIDTH_UNITS), (0, _helpers.gridUnitsRaw)(CONTAINER_WIDTH_UNITS)),
    position: 'absolute',
    top: midpointDifference((0, _helpers.gridUnitsRaw)(TRACK_HEIGHT_UNITS), (0, _helpers.gridUnitsRaw)(CONTAINER_HEIGHT_UNITS)),
    transition: (0, _transitions.cubicTransition)('background-color'),
    width: (0, _helpers.gridUnits)(TRACK_WIDTH_UNITS)
  }
};

var THUMB_STYLES = {
  base: (0, _extends3.default)({}, (0, _helpers.square)(THUMB_SIZE), {
    backgroundColor: 'white',
    borderRadius: '50%',
    position: 'absolute',
    top: midpointDifference(17, (0, _helpers.gridUnitsRaw)(CONTAINER_HEIGHT_UNITS)),
    transition: (0, _transitions.cubicTransition)(['transform', 'border'])
  }),
  off: {
    transform: 'translateX(0)'
  },
  on: {
    transform: 'translateX(100%)'
  }
};

var CHECKBOX_STYLES = (0, _extends3.default)({}, (0, _helpers.square)('100%'), {
  cursor: 'pointer',
  left: 0,
  opacity: 0,
  position: 'absolute',
  top: 0
});

var TxlToggleSwitch = exports.TxlToggleSwitch = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlToggleSwitch, _React$Component);

  function TxlToggleSwitch() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlToggleSwitch);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlToggleSwitch.__proto__ || (0, _getPrototypeOf2.default)(TxlToggleSwitch)).call.apply(_ref, [this].concat(args)));

    _this.state = {
      hovered: false
    };
    return _this;
  }

  (0, _createClass3.default)(TxlToggleSwitch, [{
    key: '_handleChange',
    value: function _handleChange(e) {
      this.props.onChange({
        name: e.target.name,
        on: e.target.checked
      });
    }
  }, {
    key: '_handleMouseEnter',
    value: function _handleMouseEnter() {
      this.setState({ hovered: true });
    }
  }, {
    key: '_handleMouseLeave',
    value: function _handleMouseLeave() {
      this.setState({ hovered: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          on = _props.on,
          disabled = _props.disabled,
          loading = _props.loading,
          restProps = (0, _objectWithoutProperties3.default)(_props, ['on', 'disabled', 'loading']);

      var isHovered = this.state.hovered;
      var content = void 0;
      if (disabled) {
        content = _react2.default.createElement(
          'div',
          {
            'data-component': 'TxlToggleSwitch',
            style: CONTAINER_STYLES
          },
          on ? 'On' : 'Off'
        );
      } else if (loading) {
        content = _react2.default.createElement(
          'div',
          {
            'data-component': 'TxlToggleSwitch',
            style: (0, _helpers.combineStyles)(CONTAINER_STYLES, LOADING_CONTAINER_STYLES)
          },
          _react2.default.createElement(_LoadingIndicator2.default, { size: 'small', shade: 'dark' })
        );
      } else {
        var toggleColor = COLORS[on ? 'on' : 'off'][isHovered ? 'hover' : 'base'];
        var trackStyles = (0, _helpers.combineStyles)(TRACK_STYLES.base, { backgroundColor: toggleColor });
        var thumbStyles = (0, _helpers.combineStyles)(THUMB_STYLES.base, on ? THUMB_STYLES.on : THUMB_STYLES.off, { border: '1px solid ' + toggleColor });
        content = _react2.default.createElement(
          'div',
          {
            'data-component': 'TxlToggleSwitch',
            style: CONTAINER_STYLES,
            onMouseEnter: this._handleMouseEnter,
            onMouseLeave: this._handleMouseLeave
          },
          _react2.default.createElement('div', { style: trackStyles }),
          _react2.default.createElement('div', { style: thumbStyles }),
          _react2.default.createElement('input', (0, _extends3.default)({}, restProps, {
            type: 'checkbox',
            onChange: this._handleChange,
            checked: on,
            style: CHECKBOX_STYLES
          }))
        );
      }
      return content;
    }
  }]);
  return TxlToggleSwitch;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_handleChange', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleChange'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMouseEnter', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMouseEnter'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMouseLeave', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMouseLeave'), _class2.prototype)), _class2)) || _class;

TxlToggleSwitch.propTypes = {
  disabled: _react2.default.PropTypes.bool,
  loading: _react2.default.PropTypes.bool,
  name: _react2.default.PropTypes.string.isRequired,
  on: _react2.default.PropTypes.bool.isRequired,
  onChange: _react2.default.PropTypes.func.isRequired,
  tabIndex: _react2.default.PropTypes.number
};

TxlToggleSwitch.defaultProps = {
  disabled: false,
  loading: false,
  onChange: _Base.NOOP,
  tabIndex: 0
};

var _default = (0, _WithLabel2.default)({
  clickable: true,
  defaultPosition: 'left',
  itemWidth: (0, _helpers.gridUnits)(CONTAINER_WIDTH_UNITS),
  padding: {
    left: (0, _helpers.gridUnits)(8),
    right: (0, _helpers.gridUnits)(2)
  }
}, TxlToggleSwitch);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(CONTAINER_HEIGHT_UNITS, 'CONTAINER_HEIGHT_UNITS', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(CONTAINER_WIDTH_UNITS, 'CONTAINER_WIDTH_UNITS', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(TRACK_HEIGHT_UNITS, 'TRACK_HEIGHT_UNITS', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(TRACK_WIDTH_UNITS, 'TRACK_WIDTH_UNITS', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(THUMB_SIZE, 'THUMB_SIZE', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(midpointDifference, 'midpointDifference', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(COLORS, 'COLORS', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(CONTAINER_STYLES, 'CONTAINER_STYLES', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(LOADING_CONTAINER_STYLES, 'LOADING_CONTAINER_STYLES', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(TRACK_STYLES, 'TRACK_STYLES', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(THUMB_STYLES, 'THUMB_STYLES', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(CHECKBOX_STYLES, 'CHECKBOX_STYLES', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(TxlToggleSwitch, 'TxlToggleSwitch', 'src/input-fields/ToggleSwitch.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/input-fields/ToggleSwitch.jsx');
}();

;
//# sourceMappingURL=data:application/json;base64,