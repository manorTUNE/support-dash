'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _class, _desc, _value, _class2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Base = require('../base/Base');

var _WithLabel = require('./_WithLabel');

var _WithLabel2 = _interopRequireDefault(_WithLabel);

var _transitions = require('../styles/mixins/transitions');

var _helpers = require('../styles/helpers');

var _theme = require('../styles/theme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var DISABLED_STYLE = {
  cursor: 'not-allowed'
};

var INPUT_STYLES = {
  cursor: 'pointer',
  height: '100%',
  left: 0,
  opacity: 0,
  position: 'absolute',
  top: 0,
  width: '100%'
};

var RADIO_CONTAINER_STYLES = (0, _extends3.default)({}, (0, _helpers.square)((0, _helpers.gridUnits)(5)), {
  alignItems: 'center',
  display: 'flex',
  justifyContent: 'center',
  position: 'relative'
});

var BASE_RADIO_STYLES = (0, _extends3.default)({}, (0, _helpers.square)('17px'), {
  alignItems: 'center',
  backgroundColor: 'white',
  borderColor: 'transparent',
  borderRadius: '50%',
  borderStyle: 'solid',
  borderWidth: '1px',
  display: 'flex',
  justifyContent: 'center',
  transition: (0, _transitions.cubicTransition)('background-color')
});

var DOT_STYLES = (0, _extends3.default)({}, (0, _helpers.square)('9px'), {
  borderRadius: '50%'
});

var CHECKED_RADIO_STYLES = {
  focused: {
    borderColor: _theme.COLOR_ACCENT['500'],
    color: _theme.COLOR_ACCENT['500']
  },
  resting: {
    borderColor: _theme.COLOR_ACCENT['500'],
    color: _theme.COLOR_ACCENT['500']
  }
};

var UNCHECKED_RADIO_STYLES = {
  focused: {
    backgroundColor: 'white',
    borderColor: _theme.COLOR_NEUTRAL['400']
  },
  resting: {
    backgroundColor: 'white',
    borderColor: _theme.COLOR_NEUTRAL['300']
  }
};

var DISABLED_RADIO_STYLES = {
  checked: {
    backgroundColor: _theme.COLOR_NEUTRAL['100'],
    borderColor: _theme.COLOR_NEUTRAL['200'],
    color: _theme.COLOR_NEUTRAL['200']
  },
  unchecked: {
    backgroundColor: _theme.COLOR_NEUTRAL['100'],
    borderColor: _theme.COLOR_NEUTRAL['200']
  }
};

var TxlRadio = (0, _radium2.default)(_class = (_class2 = function (_React$Component) {
  (0, _inherits3.default)(TxlRadio, _React$Component);

  function TxlRadio() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlRadio);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlRadio.__proto__ || (0, _getPrototypeOf2.default)(TxlRadio)).call.apply(_ref, [this].concat(args)));

    _this.state = {
      focused: false,
      hovered: false
    };
    return _this;
  }

  (0, _createClass3.default)(TxlRadio, [{
    key: 'componentWillUpdate',
    value: function componentWillUpdate(nextProps, nextState) {
      // Need to make sure to not cause the visual hover/focus
      // state to stick after interacting with the input.
      if (nextProps.checked && this.state.focused && nextState.focused) {
        this.setState({
          focused: false
        });
      }
    }
  }, {
    key: '_handleChange',
    value: function _handleChange(e) {
      if (this.props.disabled) {
        return;
      }

      this.props.onChange({
        checked: e.target.checked,
        name: e.target.name,
        value: e.target.value
      });
    }
  }, {
    key: '_handleBlur',
    value: function _handleBlur() {
      this.setState({ focused: false });
    }
  }, {
    key: '_handleFocus',
    value: function _handleFocus() {
      this.setState({ focused: true });
    }
  }, {
    key: '_handleMouseEnter',
    value: function _handleMouseEnter() {
      this.setState({ hovered: true });
    }
  }, {
    key: '_handleMouseLeave',
    value: function _handleMouseLeave() {
      this.setState({ hovered: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var showHoverStyles = this.state.hovered || this.state.focused;
      var enabledState = showHoverStyles ? 'focused' : 'resting';
      var disabledState = this.props.checked ? 'checked' : 'unchecked';

      var checkedStateStyles = this.props.checked && !this.props.disabled ? CHECKED_RADIO_STYLES[enabledState] : UNCHECKED_RADIO_STYLES[enabledState];

      var radioStyles = (0, _helpers.combineStyles)(BASE_RADIO_STYLES, checkedStateStyles, this.props.disabled && DISABLED_RADIO_STYLES[disabledState]);

      var radioDotStyles = (0, _helpers.combineStyles)(DOT_STYLES, { backgroundColor: radioStyles.color });

      var inputStyles = (0, _helpers.combineStyles)(INPUT_STYLES, this.props.disabled && DISABLED_STYLE);

      return _react2.default.createElement(
        'div',
        {
          'data-component': 'TxlRadio',
          style: RADIO_CONTAINER_STYLES,
          onMouseEnter: this._handleMouseEnter,
          onMouseLeave: this._handleMouseLeave
        },
        _react2.default.createElement(
          'div',
          { style: radioStyles },
          this.props.checked && _react2.default.createElement('div', {
            style: radioDotStyles,
            'data-test-radio-dot': true
          })
        ),
        _react2.default.createElement('input', {
          checked: this.props.checked,
          disabled: this.props.disabled,
          id: this.props.id,
          name: this.props.name,
          onBlur: this._handleBlur,
          onChange: this._handleChange,
          onFocus: this._handleFocus,
          style: inputStyles,
          tabIndex: this.props.tabIndex,
          type: 'radio',
          value: this.props.value
        })
      );
    }
  }]);
  return TxlRadio;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class2.prototype, '_handleChange', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleChange'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleBlur', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleBlur'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleFocus', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleFocus'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMouseEnter', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMouseEnter'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, '_handleMouseLeave', [_Base.autobind], (0, _getOwnPropertyDescriptor2.default)(_class2.prototype, '_handleMouseLeave'), _class2.prototype)), _class2)) || _class;

TxlRadio.defaultProps = {
  checked: false,
  disabled: false,
  onChange: _Base.NOOP,
  tabIndex: 0
};

TxlRadio.propTypes = {
  checked: _react2.default.PropTypes.bool,
  disabled: _react2.default.PropTypes.bool,
  id: _react2.default.PropTypes.string,
  name: _react2.default.PropTypes.string.isRequired,
  onChange: _react2.default.PropTypes.func.isRequired,
  tabIndex: _react2.default.PropTypes.number,
  value: _react2.default.PropTypes.string.isRequired
};

var _default = (0, _WithLabel2.default)({
  clickable: true,
  padding: (0, _helpers.gridUnits)(1)
}, TxlRadio);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DISABLED_STYLE, 'DISABLED_STYLE', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(INPUT_STYLES, 'INPUT_STYLES', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(RADIO_CONTAINER_STYLES, 'RADIO_CONTAINER_STYLES', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(BASE_RADIO_STYLES, 'BASE_RADIO_STYLES', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(DOT_STYLES, 'DOT_STYLES', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(CHECKED_RADIO_STYLES, 'CHECKED_RADIO_STYLES', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(UNCHECKED_RADIO_STYLES, 'UNCHECKED_RADIO_STYLES', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(DISABLED_RADIO_STYLES, 'DISABLED_RADIO_STYLES', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(TxlRadio, 'TxlRadio', 'src/input-fields/Radio.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/input-fields/Radio.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,