'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _MultiChipInputControlled = require('./MultiChipInputControlled');

var _MultiChipInputControlled2 = _interopRequireDefault(_MultiChipInputControlled);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _defaultValidator = function _defaultValidator() {
  return { isValid: true };
};

var DEFAULT_INVALID_TEXT = 'That value is invalid.';

var TxlMultiChipInput = function (_React$Component) {
  (0, _inherits3.default)(TxlMultiChipInput, _React$Component);

  function TxlMultiChipInput() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlMultiChipInput);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlMultiChipInput.__proto__ || (0, _getPrototypeOf2.default)(TxlMultiChipInput)).call.apply(_ref, [this].concat(args)));

    _this._handleRef = function () {
      return _this.___handleRef__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleBlur = function () {
      return _this.___handleBlur__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleFocus = function () {
      return _this.___handleFocus__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleTextChange = function () {
      return _this.___handleTextChange__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._removeChip = function () {
      return _this.___removeChip__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._validateValue = function () {
      return _this.___validateValue__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    var values = _this.props.values;

    _this.state = {
      validationState: 'base',
      values: values
    };
    return _this;
  }

  (0, _createClass3.default)(TxlMultiChipInput, [{
    key: '___handleRef__REACT_HOT_LOADER__',
    value: function ___handleRef__REACT_HOT_LOADER__() {
      return this.___handleRef__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleRef__REACT_HOT_LOADER__',
    value: function ___handleRef__REACT_HOT_LOADER__(ref) {
      this._controlledComponent = ref;
    }
  }, {
    key: '___handleBlur__REACT_HOT_LOADER__',
    value: function ___handleBlur__REACT_HOT_LOADER__() {
      return this.___handleBlur__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleBlur__REACT_HOT_LOADER__',
    value: function ___handleBlur__REACT_HOT_LOADER__(_ref2) {
      var value = _ref2.value;

      if (value === '') {
        this.setState({
          validationState: 'base',
          validationText: null
        });
      }
    }
  }, {
    key: '___handleFocus__REACT_HOT_LOADER__',
    value: function ___handleFocus__REACT_HOT_LOADER__() {
      return this.___handleFocus__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleFocus__REACT_HOT_LOADER__',
    value: function ___handleFocus__REACT_HOT_LOADER__(_ref3) {
      var value = _ref3.value;

      this.setState({ textValue: value });
    }
  }, {
    key: '___handleTextChange__REACT_HOT_LOADER__',
    value: function ___handleTextChange__REACT_HOT_LOADER__() {
      return this.___handleTextChange__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleTextChange__REACT_HOT_LOADER__',
    value: function ___handleTextChange__REACT_HOT_LOADER__(_ref4) {
      var value = _ref4.value;

      this.setState({ textValue: value });
    }
  }, {
    key: '___removeChip__REACT_HOT_LOADER__',
    value: function ___removeChip__REACT_HOT_LOADER__() {
      return this.___removeChip__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___removeChip__REACT_HOT_LOADER__',
    value: function ___removeChip__REACT_HOT_LOADER__(value, idx) {
      var _this2 = this;

      // create a new array since splice mutates the array
      var values = [].concat((0, _toConsumableArray3.default)(this.state.values));
      values.splice(idx, 1);
      this.setState({ values: values }, function () {
        _this2.props.onChange({ value: values });
        _this2._controlledComponent.focus();
      });
    }
  }, {
    key: '___validateValue__REACT_HOT_LOADER__',
    value: function ___validateValue__REACT_HOT_LOADER__() {
      return this.___validateValue__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___validateValue__REACT_HOT_LOADER__',
    value: function ___validateValue__REACT_HOT_LOADER__(_ref5) {
      var _this3 = this;

      var value = _ref5.value;
      var validator = this.props.validator;
      var values = this.state.values;

      var _validator = validator({ value: value, values: values }),
          isValid = _validator.isValid,
          validationText = _validator.validationText;

      var state = {};

      if (isValid || value === '') {
        state = {
          textValue: '',
          validationState: 'base',
          validationText: null,
          values: [].concat(this.state.values,
          // if value is empty string, we want to reset validation state, but not add new chip
          value !== '' ? [value] : [])
        };
      } else {
        state = {
          textValue: value.replace(/\s{2}/g, ' '),
          validationState: 'error',
          validationText: validationText || DEFAULT_INVALID_TEXT
        };
      }
      this.setState(state, function () {
        _this3._controlledComponent.focus();
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          disabled = _props.disabled,
          label = _props.label,
          placeholder = _props.placeholder,
          secondaryText = _props.secondaryText;
      var _state = this.state,
          textValue = _state.textValue,
          validationState = _state.validationState,
          validationText = _state.validationText,
          values = _state.values;


      return _react2.default.createElement(
        'div',
        { 'data-component': 'TxlMultiChipInput' },
        _react2.default.createElement(_MultiChipInputControlled2.default, {
          disabled: disabled,
          label: label,
          onBlur: this._handleBlur,
          onChipDelete: this._removeChip,
          onFocus: this._handleFocus,
          onTextChange: this._handleTextChange,
          onValidate: this._validateValue,
          placeholder: placeholder,
          ref: this._handleRef,
          secondaryText: validationText || secondaryText,
          textValue: textValue,
          validationState: validationState,
          values: values
        })
      );
    }
  }]);
  return TxlMultiChipInput;
}(_react2.default.Component);

exports.default = TxlMultiChipInput;


TxlMultiChipInput.displayName = 'TxlMultiChipInput';

TxlMultiChipInput.propTypes = {
  disabled: _MultiChipInputControlled2.default.propTypes.disabled,
  label: _MultiChipInputControlled2.default.propTypes.label,
  onChange: _react.PropTypes.func,
  placeholder: _MultiChipInputControlled2.default.propTypes.placeholder,
  secondaryText: _MultiChipInputControlled2.default.propTypes.secondaryText,
  validator: _react.PropTypes.func,
  values: _MultiChipInputControlled2.default.propTypes.values
};

TxlMultiChipInput.defaultProps = {
  onChange: Function.prototype,
  validator: _defaultValidator,
  values: []
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(_defaultValidator, '_defaultValidator', 'src/input-fields/MultiChipInput.jsx');

  __REACT_HOT_LOADER__.register(DEFAULT_INVALID_TEXT, 'DEFAULT_INVALID_TEXT', 'src/input-fields/MultiChipInput.jsx');

  __REACT_HOT_LOADER__.register(TxlMultiChipInput, 'TxlMultiChipInput', 'src/input-fields/MultiChipInput.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,