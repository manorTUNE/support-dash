'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _map = require('lodash/map');

var _map2 = _interopRequireDefault(_map);

var _findIndex = require('lodash/findIndex');

var _findIndex2 = _interopRequireDefault(_findIndex);

var _Chip = require('../chip/Chip');

var _Chip2 = _interopRequireDefault(_Chip);

var _FlexBox = require('../layout/FlexBox');

var _FlexBox2 = _interopRequireDefault(_FlexBox);

var _InputFieldBase = require('../input-fields/_InputFieldBase');

var _InputFieldBase2 = _interopRequireDefault(_InputFieldBase);

var _ContentEditable = require('../input-fields/ContentEditable');

var _ContentEditable2 = _interopRequireDefault(_ContentEditable);

var _KeyCodes = require('../constants/KeyCodes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CONTAINER_PROPS = {
  alignItems: 'flex-end',
  flexWrap: 'nowrap',
  justifyContent: 'space-between'
};

var VALID_WORD_BREAK_CHARS = [_KeyCodes.COMMA, _KeyCodes.ENTER, _KeyCodes.SPACEBAR, _KeyCodes.TAB];

var _isWordBreak = function _isWordBreak(code) {
  return VALID_WORD_BREAK_CHARS.indexOf(code) >= 0;
};

var TxlMultiChipInputControlled = function (_React$Component) {
  (0, _inherits3.default)(TxlMultiChipInputControlled, _React$Component);

  function TxlMultiChipInputControlled() {
    var _ref;

    (0, _classCallCheck3.default)(this, TxlMultiChipInputControlled);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TxlMultiChipInputControlled.__proto__ || (0, _getPrototypeOf2.default)(TxlMultiChipInputControlled)).call.apply(_ref, [this].concat(args)));

    _this.focus = function () {
      return _this.__focus__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._buildChips = function () {
      return _this.___buildChips__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._focusNextChip = function () {
      return _this.___focusNextChip__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._focusPrevChip = function () {
      return _this.___focusPrevChip__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._getFocusedChipIndex = function () {
      return _this.___getFocusedChipIndex__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleBlur = function () {
      return _this.___handleBlur__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleClick = function () {
      return _this.___handleClick__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleContentEditableRef = function () {
      return _this.___handleContentEditableRef__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleInputFieldRef = function () {
      return _this.___handleInputFieldRef__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleFocus = function () {
      return _this.___handleFocus__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleInputKeyDown = function () {
      return _this.___handleInputKeyDown__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleKeyDown = function () {
      return _this.___handleKeyDown__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._handleTextChange = function () {
      return _this.___handleTextChange__REACT_HOT_LOADER__.apply(_this, arguments);
    };

    _this._chips = [];
    _this.state = { focused: false };
    return _this;
  }

  (0, _createClass3.default)(TxlMultiChipInputControlled, [{
    key: '__focus__REACT_HOT_LOADER__',
    value: function __focus__REACT_HOT_LOADER__() {
      return this.__focus__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '__focus__REACT_HOT_LOADER__',
    value: function __focus__REACT_HOT_LOADER__() {
      this._contentEditable.focus && this._contentEditable.focus();
    }
  }, {
    key: '___buildChips__REACT_HOT_LOADER__',
    value: function ___buildChips__REACT_HOT_LOADER__() {
      return this.___buildChips__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___buildChips__REACT_HOT_LOADER__',
    value: function ___buildChips__REACT_HOT_LOADER__() {
      var _this2 = this;

      var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var _props = this.props,
          disabled = _props.disabled,
          onChipDelete = _props.onChipDelete;

      this._chips = [];
      return (0, _map2.default)(values, function (val, i) {
        return _react2.default.createElement(
          _Chip2.default,
          {
            disabled: disabled,
            key: i,
            onDismiss: function onDismiss() {
              return onChipDelete(val, i);
            },
            ref: function ref(_ref2) {
              _this2._chips[i] = _ref2;
            }
          },
          val
        );
      });
    }
  }, {
    key: '___focusNextChip__REACT_HOT_LOADER__',
    value: function ___focusNextChip__REACT_HOT_LOADER__() {
      return this.___focusNextChip__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___focusNextChip__REACT_HOT_LOADER__',
    value: function ___focusNextChip__REACT_HOT_LOADER__() {
      var focusedChipIndex = this._getFocusedChipIndex();
      // nothing to do if no chips
      if (this._chips.length === 0) {
        return;
      }
      // if rightmost chip is already focused, focus input
      if (focusedChipIndex === this._chips.length - 1) {
        this.focus();
        return;
      }
      // otherwise, focus next chip to right
      this._chips[focusedChipIndex + 1].focus();
    }
  }, {
    key: '___focusPrevChip__REACT_HOT_LOADER__',
    value: function ___focusPrevChip__REACT_HOT_LOADER__() {
      return this.___focusPrevChip__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___focusPrevChip__REACT_HOT_LOADER__',
    value: function ___focusPrevChip__REACT_HOT_LOADER__() {
      var focusedChipIndex = this._getFocusedChipIndex();
      // nothing to do if no chips or leftmost chip is already focused
      if (this._chips.length === 0 || focusedChipIndex === 0) {
        return;
      }

      var chipToFocusIndex = focusedChipIndex === -1
      // focus rightmost chip to start
      ? this._chips.length - 1
      // focus next chip to left
      : focusedChipIndex - 1;

      this._chips[chipToFocusIndex].focus();
    }
  }, {
    key: '___getFocusedChipIndex__REACT_HOT_LOADER__',
    value: function ___getFocusedChipIndex__REACT_HOT_LOADER__() {
      return this.___getFocusedChipIndex__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___getFocusedChipIndex__REACT_HOT_LOADER__',
    value: function ___getFocusedChipIndex__REACT_HOT_LOADER__() {
      return (0, _findIndex2.default)(this._chips, function (chip) {
        return chip.hasFocus();
      });
    }
  }, {
    key: '___handleBlur__REACT_HOT_LOADER__',
    value: function ___handleBlur__REACT_HOT_LOADER__() {
      return this.___handleBlur__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleBlur__REACT_HOT_LOADER__',
    value: function ___handleBlur__REACT_HOT_LOADER__() {
      var _props2 = this.props,
          onBlur = _props2.onBlur,
          textValue = _props2.textValue;

      this.setState({ focused: false }, function () {
        return onBlur && onBlur({ value: textValue });
      });
    }
  }, {
    key: '___handleClick__REACT_HOT_LOADER__',
    value: function ___handleClick__REACT_HOT_LOADER__() {
      return this.___handleClick__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleClick__REACT_HOT_LOADER__',
    value: function ___handleClick__REACT_HOT_LOADER__(e) {
      e.stopPropagation();
      if (!this.state.focused && !this.props.disabled) {
        this.focus();
      }
    }
  }, {
    key: '___handleContentEditableRef__REACT_HOT_LOADER__',
    value: function ___handleContentEditableRef__REACT_HOT_LOADER__() {
      return this.___handleContentEditableRef__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleContentEditableRef__REACT_HOT_LOADER__',
    value: function ___handleContentEditableRef__REACT_HOT_LOADER__(ref) {
      this._contentEditable = ref;
    }
  }, {
    key: '___handleInputFieldRef__REACT_HOT_LOADER__',
    value: function ___handleInputFieldRef__REACT_HOT_LOADER__() {
      return this.___handleInputFieldRef__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleInputFieldRef__REACT_HOT_LOADER__',
    value: function ___handleInputFieldRef__REACT_HOT_LOADER__(ref) {
      this._inputFieldBase = ref;
    }
  }, {
    key: '___handleFocus__REACT_HOT_LOADER__',
    value: function ___handleFocus__REACT_HOT_LOADER__() {
      return this.___handleFocus__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleFocus__REACT_HOT_LOADER__',
    value: function ___handleFocus__REACT_HOT_LOADER__() {
      this.setState({ focused: true });
    }
  }, {
    key: '___handleInputKeyDown__REACT_HOT_LOADER__',
    value: function ___handleInputKeyDown__REACT_HOT_LOADER__() {
      return this.___handleInputKeyDown__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleInputKeyDown__REACT_HOT_LOADER__',
    value: function ___handleInputKeyDown__REACT_HOT_LOADER__(_ref3) {
      var keyCode = _ref3.keyCode;
      var _props3 = this.props,
          onValidate = _props3.onValidate,
          textValue = _props3.textValue;


      if (_isWordBreak(keyCode) && textValue) {
        // comma and space will trigger a valid word break, but we don't want them to be part of the
        // chip value itself, so strip them out before
        onValidate({ value: textValue.trim().replace(/(\s|,)/, '') });
      }
    }
  }, {
    key: '___handleKeyDown__REACT_HOT_LOADER__',
    value: function ___handleKeyDown__REACT_HOT_LOADER__() {
      return this.___handleKeyDown__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleKeyDown__REACT_HOT_LOADER__',
    value: function ___handleKeyDown__REACT_HOT_LOADER__(_ref4) {
      var keyCode = _ref4.keyCode;
      var textValue = this.props.textValue;


      var isInputEmpty = !textValue || textValue && textValue.trim() === '';

      if (isInputEmpty && keyCode === _KeyCodes.ARROW_LEFT) {
        this._focusPrevChip();
      } else if (keyCode === _KeyCodes.ARROW_RIGHT && this._getFocusedChipIndex() >= 0) {
        this._focusNextChip();
      }
    }
  }, {
    key: '___handleTextChange__REACT_HOT_LOADER__',
    value: function ___handleTextChange__REACT_HOT_LOADER__() {
      return this.___handleTextChange__REACT_HOT_LOADER__.apply(this, arguments);
    }
  }, {
    key: '___handleTextChange__REACT_HOT_LOADER__',
    value: function ___handleTextChange__REACT_HOT_LOADER__(_ref5) {
      var value = _ref5.value;

      // @TODO handle pasting of multiple, comma-separated values
      this.props.onTextChange({ value: value });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props4 = this.props,
          disabled = _props4.disabled,
          label = _props4.label,
          placeholder = _props4.placeholder,
          secondaryText = _props4.secondaryText,
          textValue = _props4.textValue,
          validationState = _props4.validationState,
          values = _props4.values;
      var focused = this.state.focused;


      this._chips = this._buildChips(values);

      return _react2.default.createElement(
        'div',
        { 'data-component': 'TxlMultiChipInputControlled' },
        _react2.default.createElement(
          _InputFieldBase2.default,
          {
            _containerProps: CONTAINER_PROPS,
            disabled: disabled,
            focused: focused,
            label: label,
            onClick: this._handleClick,
            onKeyDown: this._handleKeyDown,
            ref: this._handleInputFieldRef,
            secondaryText: secondaryText,
            validationState: validationState
          },
          _react2.default.createElement(
            _FlexBox2.default,
            {
              alignItems: 'center',
              flexShrink: 1,
              flexWrap: 'wrap'
            },
            this._chips,
            _react2.default.createElement(_ContentEditable2.default, {
              disabled: disabled,
              onBlur: this._handleBlur,
              onChange: this._handleTextChange,
              onFocus: this._handleFocus,
              onKeyDown: this._handleInputKeyDown,
              placeholder: placeholder,
              ref: this._handleContentEditableRef,
              spellCheck: false,
              value: textValue
            })
          )
        )
      );
    }
  }]);
  return TxlMultiChipInputControlled;
}(_react2.default.Component);

exports.default = TxlMultiChipInputControlled;


TxlMultiChipInputControlled.displayName = 'TxlMultiChipInputControlled';

TxlMultiChipInputControlled.propTypes = {
  disabled: _InputFieldBase2.default.propTypes.disabled,
  label: _InputFieldBase2.default.propTypes.label,
  onBlur: _ContentEditable2.default.propTypes.onBlur,
  onChipDelete: _react.PropTypes.func,
  onFocus: _ContentEditable2.default.propTypes.onFocus,
  onKeyDown: _react.PropTypes.func,
  onTextChange: _react.PropTypes.func,
  onValidate: _react.PropTypes.func,
  placeholder: _react.PropTypes.string,
  secondaryText: _InputFieldBase2.default.propTypes.secondaryText,
  textValue: _react.PropTypes.string,
  validationState: _InputFieldBase2.default.propTypes.validationState,
  validator: _react.PropTypes.func,
  values: _react.PropTypes.arrayOf(_react.PropTypes.string)
};

TxlMultiChipInputControlled.defaultProps = {
  onBlur: Function.prototype,
  onChipDelete: Function.prototype,
  onKeyDown: Function.prototype,
  onTextChange: Function.prototype,
  onValueValidate: Function.prototype,
  values: []
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(CONTAINER_PROPS, 'CONTAINER_PROPS', 'src/input-fields/MultiChipInputControlled.jsx');

  __REACT_HOT_LOADER__.register(VALID_WORD_BREAK_CHARS, 'VALID_WORD_BREAK_CHARS', 'src/input-fields/MultiChipInputControlled.jsx');

  __REACT_HOT_LOADER__.register(_isWordBreak, '_isWordBreak', 'src/input-fields/MultiChipInputControlled.jsx');

  __REACT_HOT_LOADER__.register(TxlMultiChipInputControlled, 'TxlMultiChipInputControlled', 'src/input-fields/MultiChipInputControlled.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,