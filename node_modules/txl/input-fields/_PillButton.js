'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _theme = require('../styles/theme');

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PILL_BUTTON_STYLES = {
  base: {
    ':hover': { // @TODO: Replace with manual state management
      background: _theme.COLOR_NEUTRAL['200'],
      color: _theme.COLOR_NEUTRAL['200c']
    },
    background: _theme.COLOR_NEUTRAL['800c'],
    borderBottom: 'none',
    borderLeft: 'none',
    borderRadius: '0',
    borderRight: 'none',
    borderTop: 'none',
    color: _theme.COLOR_NEUTRAL['800'],
    cursor: 'pointer',
    height: (0, _helpers.gridUnits)(5),
    margin: '0',
    maxWidth: (0, _helpers.gridUnits)(60),
    outline: _theme.COLOR_NEUTRAL['100'],
    overflow: 'hidden',
    padding: '0 ' + (0, _helpers.gridUnits)(3),
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap'
  },
  border: {
    borderLeft: '1px solid ' + _theme.COLOR_NEUTRAL['100']
  },
  selected: {
    background: _theme.COLOR_NEUTRAL['100'],
    color: _theme.COLOR_NEUTRAL['100c']
  }
};

/**
 * @TODO: Since we are using overflow: hidden and ellipsis we should
 * use the TruncatedText component with this.props.children
 */
var TxlPillButton = function TxlPillButton(props) {
  var pillButtonStyles = (0, _helpers.combineStyles)(PILL_BUTTON_STYLES.base, props.selected && PILL_BUTTON_STYLES.selected, props.index && PILL_BUTTON_STYLES.border);

  return _react2.default.createElement(
    'button',
    {
      'data-component': 'TxlPillButton',
      onClick: function onClick() {
        return props.onChange(props);
      },
      style: pillButtonStyles
    },
    props.children
  );
};

TxlPillButton.propTypes = {
  children: _react.PropTypes.node.isRequired,
  id: _react.PropTypes.string,
  index: _react.PropTypes.number.isRequired,
  onChange: _react.PropTypes.func.isRequired,
  selected: _react.PropTypes.bool
};

TxlPillButton.defaultProps = {
  selected: false
};

var _default = (0, _radium2.default)(TxlPillButton);

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(PILL_BUTTON_STYLES, 'PILL_BUTTON_STYLES', 'src/input-fields/_PillButton.jsx');

  __REACT_HOT_LOADER__.register(TxlPillButton, 'TxlPillButton', 'src/input-fields/_PillButton.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/input-fields/_PillButton.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnB1dC1maWVsZHMvX1BpbGxCdXR0b24uanN4Il0sIm5hbWVzIjpbIlBJTExfQlVUVE9OX1NUWUxFUyIsImJhc2UiLCJiYWNrZ3JvdW5kIiwiY29sb3IiLCJib3JkZXJCb3R0b20iLCJib3JkZXJMZWZ0IiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyUmlnaHQiLCJib3JkZXJUb3AiLCJjdXJzb3IiLCJoZWlnaHQiLCJtYXJnaW4iLCJtYXhXaWR0aCIsIm91dGxpbmUiLCJvdmVyZmxvdyIsInBhZGRpbmciLCJ0ZXh0T3ZlcmZsb3ciLCJ3aGl0ZVNwYWNlIiwiYm9yZGVyIiwic2VsZWN0ZWQiLCJUeGxQaWxsQnV0dG9uIiwicHJvcHMiLCJwaWxsQnV0dG9uU3R5bGVzIiwiaW5kZXgiLCJvbkNoYW5nZSIsImNoaWxkcmVuIiwicHJvcFR5cGVzIiwibm9kZSIsImlzUmVxdWlyZWQiLCJpZCIsInN0cmluZyIsIm51bWJlciIsImZ1bmMiLCJib29sIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBRUE7O0FBQ0E7Ozs7QUFLQSxJQUFNQSxxQkFBcUI7QUFDekJDLFFBQU07QUFDSixjQUFVLEVBQUU7QUFDVkMsa0JBQVkscUJBQWMsS0FBZCxDQURKO0FBRVJDLGFBQU8scUJBQWMsTUFBZDtBQUZDLEtBRE47QUFLSkQsZ0JBQVkscUJBQWMsTUFBZCxDQUxSO0FBTUpFLGtCQUFjLE1BTlY7QUFPSkMsZ0JBQVksTUFQUjtBQVFKQyxrQkFBYyxHQVJWO0FBU0pDLGlCQUFhLE1BVFQ7QUFVSkMsZUFBVyxNQVZQO0FBV0pMLFdBQU8scUJBQWMsS0FBZCxDQVhIO0FBWUpNLFlBQVEsU0FaSjtBQWFKQyxZQUFRLHdCQUFHLENBQUgsQ0FiSjtBQWNKQyxZQUFRLEdBZEo7QUFlSkMsY0FBVSx3QkFBRyxFQUFILENBZk47QUFnQkpDLGFBQVMscUJBQWMsS0FBZCxDQWhCTDtBQWlCSkMsY0FBVSxRQWpCTjtBQWtCSkMsb0JBQWMsd0JBQUcsQ0FBSCxDQWxCVjtBQW1CSkMsa0JBQWMsVUFuQlY7QUFvQkpDLGdCQUFZO0FBcEJSLEdBRG1CO0FBdUJ6QkMsVUFBUTtBQUNOYiwrQkFBeUIscUJBQWMsS0FBZDtBQURuQixHQXZCaUI7QUEwQnpCYyxZQUFVO0FBQ1JqQixnQkFBWSxxQkFBYyxLQUFkLENBREo7QUFFUkMsV0FBTyxxQkFBYyxNQUFkO0FBRkM7QUExQmUsQ0FBM0I7O0FBZ0NBOzs7O0FBSUEsSUFBTWlCLGdCQUFnQixTQUFoQkEsYUFBZ0IsQ0FBQ0MsS0FBRCxFQUFXO0FBQy9CLE1BQU1DLG1CQUFtQiw0QkFDdkJ0QixtQkFBbUJDLElBREksRUFFdkJvQixNQUFNRixRQUFOLElBQWtCbkIsbUJBQW1CbUIsUUFGZCxFQUd2QkUsTUFBTUUsS0FBTixJQUFldkIsbUJBQW1Ca0IsTUFIWCxDQUF6Qjs7QUFNQSxTQUNFO0FBQUE7QUFBQTtBQUNFLHdCQUFlLGVBRGpCO0FBRUUsZUFBUztBQUFBLGVBQU1HLE1BQU1HLFFBQU4sQ0FBZUgsS0FBZixDQUFOO0FBQUEsT0FGWDtBQUdFLGFBQU9DO0FBSFQ7QUFLR0QsVUFBTUk7QUFMVCxHQURGO0FBU0QsQ0FoQkQ7O0FBa0JBTCxjQUFjTSxTQUFkLEdBQTBCO0FBQ3hCRCxZQUFVLGlCQUFVRSxJQUFWLENBQWVDLFVBREQ7QUFFeEJDLE1BQUksaUJBQVVDLE1BRlU7QUFHeEJQLFNBQU8saUJBQVVRLE1BQVYsQ0FBaUJILFVBSEE7QUFJeEJKLFlBQVUsaUJBQVVRLElBQVYsQ0FBZUosVUFKRDtBQUt4QlQsWUFBVSxpQkFBVWM7QUFMSSxDQUExQjs7QUFRQWIsY0FBY2MsWUFBZCxHQUE2QjtBQUMzQmYsWUFBVTtBQURpQixDQUE3Qjs7ZUFJZSxzQkFBT0MsYUFBUCxDOzs7Ozs7Ozs7O2dDQWxFVHBCLGtCOztnQ0FvQ0FvQixhIiwiZmlsZSI6Il9QaWxsQnV0dG9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJhZGl1bSBmcm9tICdyYWRpdW0nO1xuaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgQ09MT1JfTkVVVFJBTCB9IGZyb20gJy4uL3N0eWxlcy90aGVtZSc7XG5pbXBvcnQge1xuICBjb21iaW5lU3R5bGVzLFxuICBncmlkVW5pdHMgYXMgZ3UsXG59IGZyb20gJy4uL3N0eWxlcy9oZWxwZXJzJztcblxuY29uc3QgUElMTF9CVVRUT05fU1RZTEVTID0ge1xuICBiYXNlOiB7XG4gICAgJzpob3Zlcic6IHsgLy8gQFRPRE86IFJlcGxhY2Ugd2l0aCBtYW51YWwgc3RhdGUgbWFuYWdlbWVudFxuICAgICAgYmFja2dyb3VuZDogQ09MT1JfTkVVVFJBTFsnMjAwJ10sXG4gICAgICBjb2xvcjogQ09MT1JfTkVVVFJBTFsnMjAwYyddLFxuICAgIH0sXG4gICAgYmFja2dyb3VuZDogQ09MT1JfTkVVVFJBTFsnODAwYyddLFxuICAgIGJvcmRlckJvdHRvbTogJ25vbmUnLFxuICAgIGJvcmRlckxlZnQ6ICdub25lJyxcbiAgICBib3JkZXJSYWRpdXM6ICcwJyxcbiAgICBib3JkZXJSaWdodDogJ25vbmUnLFxuICAgIGJvcmRlclRvcDogJ25vbmUnLFxuICAgIGNvbG9yOiBDT0xPUl9ORVVUUkFMWyc4MDAnXSxcbiAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICBoZWlnaHQ6IGd1KDUpLFxuICAgIG1hcmdpbjogJzAnLFxuICAgIG1heFdpZHRoOiBndSg2MCksXG4gICAgb3V0bGluZTogQ09MT1JfTkVVVFJBTFsnMTAwJ10sXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgIHBhZGRpbmc6IGAwICR7Z3UoMyl9YCxcbiAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gIH0sXG4gIGJvcmRlcjoge1xuICAgIGJvcmRlckxlZnQ6IGAxcHggc29saWQgJHtDT0xPUl9ORVVUUkFMWycxMDAnXX1gLFxuICB9LFxuICBzZWxlY3RlZDoge1xuICAgIGJhY2tncm91bmQ6IENPTE9SX05FVVRSQUxbJzEwMCddLFxuICAgIGNvbG9yOiBDT0xPUl9ORVVUUkFMWycxMDBjJ10sXG4gIH0sXG59O1xuXG4vKipcbiAqIEBUT0RPOiBTaW5jZSB3ZSBhcmUgdXNpbmcgb3ZlcmZsb3c6IGhpZGRlbiBhbmQgZWxsaXBzaXMgd2Ugc2hvdWxkXG4gKiB1c2UgdGhlIFRydW5jYXRlZFRleHQgY29tcG9uZW50IHdpdGggdGhpcy5wcm9wcy5jaGlsZHJlblxuICovXG5jb25zdCBUeGxQaWxsQnV0dG9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHBpbGxCdXR0b25TdHlsZXMgPSBjb21iaW5lU3R5bGVzKFxuICAgIFBJTExfQlVUVE9OX1NUWUxFUy5iYXNlLFxuICAgIHByb3BzLnNlbGVjdGVkICYmIFBJTExfQlVUVE9OX1NUWUxFUy5zZWxlY3RlZCxcbiAgICBwcm9wcy5pbmRleCAmJiBQSUxMX0JVVFRPTl9TVFlMRVMuYm9yZGVyXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uXG4gICAgICBkYXRhLWNvbXBvbmVudD1cIlR4bFBpbGxCdXR0b25cIlxuICAgICAgb25DbGljaz17KCkgPT4gcHJvcHMub25DaGFuZ2UocHJvcHMpfVxuICAgICAgc3R5bGU9e3BpbGxCdXR0b25TdHlsZXN9XG4gICAgPlxuICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgIDwvYnV0dG9uPlxuICApO1xufTtcblxuVHhsUGlsbEJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgaW5kZXg6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbn07XG5cblR4bFBpbGxCdXR0b24uZGVmYXVsdFByb3BzID0ge1xuICBzZWxlY3RlZDogZmFsc2UsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBSYWRpdW0oVHhsUGlsbEJ1dHRvbik7XG4iXX0=