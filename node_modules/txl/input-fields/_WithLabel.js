'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _InputFieldsPropTypes = require('./_InputFieldsPropTypes');

var _TruncatedText = require('../text/TruncatedText');

var _TruncatedText2 = _interopRequireDefault(_TruncatedText);

var _InputStyleHelpers = require('./_InputStyleHelpers');

var _type = require('../styles/mixins/type');

var _helpers = require('../styles/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_PADDING = (0, _helpers.gridUnits)(1);
var DEFAULT_WIDTH = (0, _helpers.gridUnits)(5);

var LABEL_CONTAINER_STYLES = {
  left: {
    order: 0
  },
  right: {
    order: 1
  }
};

var LABEL_STYLES = {
  base: (0, _extends3.default)({}, _InputStyleHelpers.INPUT_ITEM_LABEL_STYLES),
  clickable: {
    cursor: 'pointer'
  },
  top: (0, _extends3.default)({}, _InputStyleHelpers.INPUT_GROUP_LABEL_STYLES)
};

var CONTAINER_STYLES = {
  base: {
    alignItems: 'flex-start',
    display: 'flex',
    width: '100%'
  },
  disabled: {
    cursor: 'not-allowed'
  },
  enabled: {
    cursor: 'pointer'
  },
  left: {
    justifyContent: 'space-between'
  },
  right: {
    justifyContent: 'flex-start'
  },
  top: {
    flexDirection: 'column'
  }
};

var idCache = -1;

function uniqueId() {
  return 'generated-input-id-' + ++idCache;
}

function parsePadding(padding) {
  switch (typeof padding === 'undefined' ? 'undefined' : (0, _typeof3.default)(padding)) {
    case 'string':
      return {
        left: padding,
        right: padding,
        top: padding
      };
    case 'object':
      return {
        left: padding.left || DEFAULT_PADDING,
        right: padding.right || DEFAULT_PADDING,
        top: padding.top || DEFAULT_PADDING
      };
    default:
      return {
        left: DEFAULT_PADDING,
        right: DEFAULT_PADDING,
        top: DEFAULT_PADDING
      };
  }
}

// Staic stopPropagation function for static assignment.
function stopPropagation(e) {
  e.stopPropagation();
}

var _default = function _default(options, Component) {
  var _class;

  var padding = parsePadding(options.padding);
  var componentContainerStyles = {
    left: {
      marginLeft: padding.left
    },
    right: {
      marginRight: padding.right,
      minWidth: options.itemWidth || DEFAULT_WIDTH
    },
    top: {
      marginTop: padding.top
    }
  };

  var LabeledComponent = (0, _radium2.default)(_class = function (_React$Component) {
    (0, _inherits3.default)(LabeledComponent, _React$Component);

    function LabeledComponent() {
      var _ref;

      (0, _classCallCheck3.default)(this, LabeledComponent);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = LabeledComponent.__proto__ || (0, _getPrototypeOf2.default)(LabeledComponent)).call.apply(_ref, [this].concat(args)));

      _this.uniqueId = options.clickable ? _this.props.id || uniqueId() : undefined;
      return _this;
    }

    (0, _createClass3.default)(LabeledComponent, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            labelPosition = _props.labelPosition,
            labelText = _props.labelText,
            secondaryText = _props.secondaryText,
            validationState = _props.validationState,
            clickable = _props.clickable,
            truncateLabel = _props.truncateLabel,
            restProps = (0, _objectWithoutProperties3.default)(_props, ['labelPosition', 'labelText', 'secondaryText', 'validationState', 'clickable', 'truncateLabel']);


        var composedContent = void 0;
        if (labelText) {
          var secondaryTextContent = void 0;
          if (secondaryText) {
            var secondaryTextStyles = (0, _InputStyleHelpers.getSecondaryTextStyle)(validationState);

            secondaryTextContent = _react2.default.createElement(
              'div',
              {
                style: secondaryTextStyles,
                'data-test-secondary-text': true
              },
              secondaryText
            );
          }

          var labelStyles = (0, _helpers.combineStyles)(labelPosition === 'top' ? LABEL_STYLES.top : LABEL_STYLES.base, clickable && !this.props.disabled ? LABEL_STYLES.clickable : undefined, this.props.disabled ? _InputStyleHelpers.DISABLED_INPUT_ITEM_LABEL_STYLES : undefined);

          var labelContainerStyles = (0, _helpers.combineStyles)(LABEL_CONTAINER_STYLES[labelPosition], _type.DEFAULT_FONT_FAMILY, truncateLabel && { overflow: 'hidden' });

          var labelComponent = truncateLabel ? _react2.default.createElement(_TruncatedText2.default, { text: labelText }) : labelText;

          var labelContent = _react2.default.createElement(
            'div',
            {
              'data-test-label-container': true,
              style: labelContainerStyles,
              'data-position': labelPosition
            },
            _react2.default.createElement(
              'label',
              {
                'data-test-label': true,
                htmlFor: this.uniqueId,
                onClick: stopPropagation,
                style: labelStyles
              },
              labelComponent
            ),
            secondaryTextContent
          );

          var component = _react2.default.createElement(
            'div',
            {
              'data-test-component': true,
              style: componentContainerStyles[labelPosition]
            },
            _react2.default.createElement(Component, (0, _extends3.default)({}, restProps, {
              id: this.uniqueId
            }))
          );

          var containerStyles = (0, _helpers.combineStyles)(CONTAINER_STYLES.base, CONTAINER_STYLES[labelPosition]);

          composedContent = _react2.default.createElement(
            'div',
            { style: containerStyles },
            labelContent,
            component
          );
        } else {
          composedContent = _react2.default.createElement(Component, restProps);
        }

        return composedContent;
      }
    }]);
    return LabeledComponent;
  }(_react2.default.Component)) || _class;

  LabeledComponent.propTypes = (0, _extends3.default)({}, Component.propTypes, {
    clickable: _react2.default.PropTypes.bool,
    disabled: _react2.default.PropTypes.bool,
    labelPosition: _react2.default.PropTypes.oneOf(['left', 'right', 'top']),
    labelText: _react2.default.PropTypes.node,
    secondaryText: _react2.default.PropTypes.node,
    truncateLabel: _react2.default.PropTypes.bool,
    validationState: _InputFieldsPropTypes.validationStateType
  });

  LabeledComponent.defaultProps = (0, _extends3.default)({}, Component.defaultProps, {
    clickable: options.clickable || false,
    disabled: false,
    labelPosition: options.defaultPosition || 'right',
    labelText: '',
    secondaryText: '',
    truncateLabel: false,
    validationState: 'base'
  });

  return LabeledComponent;
};

exports.default = _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DEFAULT_PADDING, 'DEFAULT_PADDING', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(DEFAULT_WIDTH, 'DEFAULT_WIDTH', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(LABEL_CONTAINER_STYLES, 'LABEL_CONTAINER_STYLES', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(LABEL_STYLES, 'LABEL_STYLES', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(CONTAINER_STYLES, 'CONTAINER_STYLES', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(idCache, 'idCache', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(uniqueId, 'uniqueId', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(parsePadding, 'parsePadding', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(stopPropagation, 'stopPropagation', 'src/input-fields/_WithLabel.jsx');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/input-fields/_WithLabel.jsx');
}();

;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,